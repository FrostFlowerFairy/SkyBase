<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: graphik.proto

namespace Api;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * IndexConstructor is used to construct Indexes
 *
 * Generated from protobuf message <code>api.IndexConstructor</code>
 */
class IndexConstructor extends \Google\Protobuf\Internal\Message
{
    /**
     * name is the unique name of the Index
     *
     * Generated from protobuf field <code>string name = 1 [(.validator.field) = {</code>
     */
    private $name = '';
    /**
     * gtype is the doc/connection type to be filtered
     *
     * Generated from protobuf field <code>string gtype = 3 [(.validator.field) = {</code>
     */
    private $gtype = '';
    /**
     * expression is a CEL expression used to filter connections/modes
     *
     * Generated from protobuf field <code>string expression = 4 [(.validator.field) = {</code>
     */
    private $expression = '';
    /**
     * if target_docs is true, this index will be applied to documents.
     *
     * Generated from protobuf field <code>bool target_docs = 6;</code>
     */
    private $target_docs = false;
    /**
     * if target_connections is true, this index will be applied to connections.
     *
     * Generated from protobuf field <code>bool target_connections = 7;</code>
     */
    private $target_connections = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $name
     *           name is the unique name of the Index
     *     @type string $gtype
     *           gtype is the doc/connection type to be filtered
     *     @type string $expression
     *           expression is a CEL expression used to filter connections/modes
     *     @type bool $target_docs
     *           if target_docs is true, this index will be applied to documents.
     *     @type bool $target_connections
     *           if target_connections is true, this index will be applied to connections.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Graphik::initOnce();
        parent::__construct($data);
    }

    /**
     * name is the unique name of the Index
     *
     * Generated from protobuf field <code>string name = 1 [(.validator.field) = {</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * name is the unique name of the Index
     *
     * Generated from protobuf field <code>string name = 1 [(.validator.field) = {</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * gtype is the doc/connection type to be filtered
     *
     * Generated from protobuf field <code>string gtype = 3 [(.validator.field) = {</code>
     * @return string
     */
    public function getGtype()
    {
        return $this->gtype;
    }

    /**
     * gtype is the doc/connection type to be filtered
     *
     * Generated from protobuf field <code>string gtype = 3 [(.validator.field) = {</code>
     * @param string $var
     * @return $this
     */
    public function setGtype($var)
    {
        GPBUtil::checkString($var, True);
        $this->gtype = $var;

        return $this;
    }

    /**
     * expression is a CEL expression used to filter connections/modes
     *
     * Generated from protobuf field <code>string expression = 4 [(.validator.field) = {</code>
     * @return string
     */
    public function getExpression()
    {
        return $this->expression;
    }

    /**
     * expression is a CEL expression used to filter connections/modes
     *
     * Generated from protobuf field <code>string expression = 4 [(.validator.field) = {</code>
     * @param string $var
     * @return $this
     */
    public function setExpression($var)
    {
        GPBUtil::checkString($var, True);
        $this->expression = $var;

        return $this;
    }

    /**
     * if target_docs is true, this index will be applied to documents.
     *
     * Generated from protobuf field <code>bool target_docs = 6;</code>
     * @return bool
     */
    public function getTargetDocs()
    {
        return $this->target_docs;
    }

    /**
     * if target_docs is true, this index will be applied to documents.
     *
     * Generated from protobuf field <code>bool target_docs = 6;</code>
     * @param bool $var
     * @return $this
     */
    public function setTargetDocs($var)
    {
        GPBUtil::checkBool($var);
        $this->target_docs = $var;

        return $this;
    }

    /**
     * if target_connections is true, this index will be applied to connections.
     *
     * Generated from protobuf field <code>bool target_connections = 7;</code>
     * @return bool
     */
    public function getTargetConnections()
    {
        return $this->target_connections;
    }

    /**
     * if target_connections is true, this index will be applied to connections.
     *
     * Generated from protobuf field <code>bool target_connections = 7;</code>
     * @param bool $var
     * @return $this
     */
    public function setTargetConnections($var)
    {
        GPBUtil::checkBool($var);
        $this->target_connections = $var;

        return $this;
    }

}

