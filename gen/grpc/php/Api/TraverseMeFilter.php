<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: graphik.proto

namespace Api;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>api.TraverseMeFilter</code>
 */
class TraverseMeFilter extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string doc_expression = 1;</code>
     */
    private $doc_expression = '';
    /**
     * Generated from protobuf field <code>string connection_expression = 2;</code>
     */
    private $connection_expression = '';
    /**
     * Generated from protobuf field <code>uint64 limit = 3 [(.validator.field) = {</code>
     */
    private $limit = 0;
    /**
     * custom sorting of the results. (validator.field) = {regex : "((^|, )(|ref.gid|ref.gtype|^attributes.(.*)))+$"}
     *
     * Generated from protobuf field <code>string sort = 4 [(.validator.field) = {</code>
     */
    private $sort = '';
    /**
     * Generated from protobuf field <code>bool reverse = 5;</code>
     */
    private $reverse = false;
    /**
     * Generated from protobuf field <code>.api.Algorithm algorithm = 6;</code>
     */
    private $algorithm = 0;
    /**
     * maximum degree/depth of nodes to be visited during traversal
     *
     * Generated from protobuf field <code>uint64 max_depth = 7 [(.validator.field) = {</code>
     */
    private $max_depth = 0;
    /**
     * maximum number of nodes to be visited during traversal
     *
     * Generated from protobuf field <code>uint64 max_hops = 8 [(.validator.field) = {</code>
     */
    private $max_hops = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $doc_expression
     *     @type string $connection_expression
     *     @type int|string $limit
     *     @type string $sort
     *           custom sorting of the results. (validator.field) = {regex : "((^|, )(|ref.gid|ref.gtype|^attributes.(.*)))+$"}
     *     @type bool $reverse
     *     @type int $algorithm
     *     @type int|string $max_depth
     *           maximum degree/depth of nodes to be visited during traversal
     *     @type int|string $max_hops
     *           maximum number of nodes to be visited during traversal
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Graphik::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string doc_expression = 1;</code>
     * @return string
     */
    public function getDocExpression()
    {
        return $this->doc_expression;
    }

    /**
     * Generated from protobuf field <code>string doc_expression = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setDocExpression($var)
    {
        GPBUtil::checkString($var, True);
        $this->doc_expression = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string connection_expression = 2;</code>
     * @return string
     */
    public function getConnectionExpression()
    {
        return $this->connection_expression;
    }

    /**
     * Generated from protobuf field <code>string connection_expression = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setConnectionExpression($var)
    {
        GPBUtil::checkString($var, True);
        $this->connection_expression = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>uint64 limit = 3 [(.validator.field) = {</code>
     * @return int|string
     */
    public function getLimit()
    {
        return $this->limit;
    }

    /**
     * Generated from protobuf field <code>uint64 limit = 3 [(.validator.field) = {</code>
     * @param int|string $var
     * @return $this
     */
    public function setLimit($var)
    {
        GPBUtil::checkUint64($var);
        $this->limit = $var;

        return $this;
    }

    /**
     * custom sorting of the results. (validator.field) = {regex : "((^|, )(|ref.gid|ref.gtype|^attributes.(.*)))+$"}
     *
     * Generated from protobuf field <code>string sort = 4 [(.validator.field) = {</code>
     * @return string
     */
    public function getSort()
    {
        return $this->sort;
    }

    /**
     * custom sorting of the results. (validator.field) = {regex : "((^|, )(|ref.gid|ref.gtype|^attributes.(.*)))+$"}
     *
     * Generated from protobuf field <code>string sort = 4 [(.validator.field) = {</code>
     * @param string $var
     * @return $this
     */
    public function setSort($var)
    {
        GPBUtil::checkString($var, True);
        $this->sort = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>bool reverse = 5;</code>
     * @return bool
     */
    public function getReverse()
    {
        return $this->reverse;
    }

    /**
     * Generated from protobuf field <code>bool reverse = 5;</code>
     * @param bool $var
     * @return $this
     */
    public function setReverse($var)
    {
        GPBUtil::checkBool($var);
        $this->reverse = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.api.Algorithm algorithm = 6;</code>
     * @return int
     */
    public function getAlgorithm()
    {
        return $this->algorithm;
    }

    /**
     * Generated from protobuf field <code>.api.Algorithm algorithm = 6;</code>
     * @param int $var
     * @return $this
     */
    public function setAlgorithm($var)
    {
        GPBUtil::checkEnum($var, \Api\Algorithm::class);
        $this->algorithm = $var;

        return $this;
    }

    /**
     * maximum degree/depth of nodes to be visited during traversal
     *
     * Generated from protobuf field <code>uint64 max_depth = 7 [(.validator.field) = {</code>
     * @return int|string
     */
    public function getMaxDepth()
    {
        return $this->max_depth;
    }

    /**
     * maximum degree/depth of nodes to be visited during traversal
     *
     * Generated from protobuf field <code>uint64 max_depth = 7 [(.validator.field) = {</code>
     * @param int|string $var
     * @return $this
     */
    public function setMaxDepth($var)
    {
        GPBUtil::checkUint64($var);
        $this->max_depth = $var;

        return $this;
    }

    /**
     * maximum number of nodes to be visited during traversal
     *
     * Generated from protobuf field <code>uint64 max_hops = 8 [(.validator.field) = {</code>
     * @return int|string
     */
    public function getMaxHops()
    {
        return $this->max_hops;
    }

    /**
     * maximum number of nodes to be visited during traversal
     *
     * Generated from protobuf field <code>uint64 max_hops = 8 [(.validator.field) = {</code>
     * @param int|string $var
     * @return $this
     */
    public function setMaxHops($var)
    {
        GPBUtil::checkUint64($var);
        $this->max_hops = $var;

        return $this;
    }

}

