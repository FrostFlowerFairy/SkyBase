<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: graphik.proto

namespace Api;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Trigger may be used to automatically mutate the attributes of documents/connections before they are commited to the database
 *
 * Generated from protobuf message <code>api.Trigger</code>
 */
class Trigger extends \Google\Protobuf\Internal\Message
{
    /**
     * name is the unique name of the authorizer
     *
     * Generated from protobuf field <code>string name = 1 [(.validator.field) = {</code>
     */
    private $name = '';
    /**
     * gtype is the type of doc/connection will invoke the trigger
     *
     * Generated from protobuf field <code>string gtype = 2 [(.validator.field) = {</code>
     */
    private $gtype = '';
    /**
     * expression is the boolean CEL expression that evaluates the doc to determine whether the trigger should be executed
     *
     * Generated from protobuf field <code>string expression = 3 [(.validator.field) = {</code>
     */
    private $expression = '';
    /**
     * trigger is the map CEL expression that mutates the doc/connection before it is stored
     *
     * Generated from protobuf field <code>string trigger = 4 [(.validator.field) = {</code>
     */
    private $trigger = '';
    /**
     * if target_docs is true, this trigger will be applied to documents.
     *
     * Generated from protobuf field <code>bool target_docs = 5;</code>
     */
    private $target_docs = false;
    /**
     * if target_connections is true, this trigger will be applied to connections.
     *
     * Generated from protobuf field <code>bool target_connections = 6;</code>
     */
    private $target_connections = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $name
     *           name is the unique name of the authorizer
     *     @type string $gtype
     *           gtype is the type of doc/connection will invoke the trigger
     *     @type string $expression
     *           expression is the boolean CEL expression that evaluates the doc to determine whether the trigger should be executed
     *     @type string $trigger
     *           trigger is the map CEL expression that mutates the doc/connection before it is stored
     *     @type bool $target_docs
     *           if target_docs is true, this trigger will be applied to documents.
     *     @type bool $target_connections
     *           if target_connections is true, this trigger will be applied to connections.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Graphik::initOnce();
        parent::__construct($data);
    }

    /**
     * name is the unique name of the authorizer
     *
     * Generated from protobuf field <code>string name = 1 [(.validator.field) = {</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * name is the unique name of the authorizer
     *
     * Generated from protobuf field <code>string name = 1 [(.validator.field) = {</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * gtype is the type of doc/connection will invoke the trigger
     *
     * Generated from protobuf field <code>string gtype = 2 [(.validator.field) = {</code>
     * @return string
     */
    public function getGtype()
    {
        return $this->gtype;
    }

    /**
     * gtype is the type of doc/connection will invoke the trigger
     *
     * Generated from protobuf field <code>string gtype = 2 [(.validator.field) = {</code>
     * @param string $var
     * @return $this
     */
    public function setGtype($var)
    {
        GPBUtil::checkString($var, True);
        $this->gtype = $var;

        return $this;
    }

    /**
     * expression is the boolean CEL expression that evaluates the doc to determine whether the trigger should be executed
     *
     * Generated from protobuf field <code>string expression = 3 [(.validator.field) = {</code>
     * @return string
     */
    public function getExpression()
    {
        return $this->expression;
    }

    /**
     * expression is the boolean CEL expression that evaluates the doc to determine whether the trigger should be executed
     *
     * Generated from protobuf field <code>string expression = 3 [(.validator.field) = {</code>
     * @param string $var
     * @return $this
     */
    public function setExpression($var)
    {
        GPBUtil::checkString($var, True);
        $this->expression = $var;

        return $this;
    }

    /**
     * trigger is the map CEL expression that mutates the doc/connection before it is stored
     *
     * Generated from protobuf field <code>string trigger = 4 [(.validator.field) = {</code>
     * @return string
     */
    public function getTrigger()
    {
        return $this->trigger;
    }

    /**
     * trigger is the map CEL expression that mutates the doc/connection before it is stored
     *
     * Generated from protobuf field <code>string trigger = 4 [(.validator.field) = {</code>
     * @param string $var
     * @return $this
     */
    public function setTrigger($var)
    {
        GPBUtil::checkString($var, True);
        $this->trigger = $var;

        return $this;
    }

    /**
     * if target_docs is true, this trigger will be applied to documents.
     *
     * Generated from protobuf field <code>bool target_docs = 5;</code>
     * @return bool
     */
    public function getTargetDocs()
    {
        return $this->target_docs;
    }

    /**
     * if target_docs is true, this trigger will be applied to documents.
     *
     * Generated from protobuf field <code>bool target_docs = 5;</code>
     * @param bool $var
     * @return $this
     */
    public function setTargetDocs($var)
    {
        GPBUtil::checkBool($var);
        $this->target_docs = $var;

        return $this;
    }

    /**
     * if target_connections is true, this trigger will be applied to connections.
     *
     * Generated from protobuf field <code>bool target_connections = 6;</code>
     * @return bool
     */
    public function getTargetConnections()
    {
        return $this->target_connections;
    }

    /**
     * if target_connections is true, this trigger will be applied to connections.
     *
     * Generated from protobuf field <code>bool target_connections = 6;</code>
     * @param bool $var
     * @return $this
     */
    public function setTargetConnections($var)
    {
        GPBUtil::checkBool($var);
        $this->target_connections = $var;

        return $this;
    }

}

