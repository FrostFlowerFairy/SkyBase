// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: graphik.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Api {

  /// <summary>Holder for reflection information generated from graphik.proto</summary>
  public static partial class GraphikReflection {

    #region Descriptor
    /// <summary>File descriptor for graphik.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GraphikReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1ncmFwaGlrLnByb3RvEgNhcGkaHGdvb2dsZS9wcm90b2J1Zi9zdHJ1Y3Qu",
            "cHJvdG8aH2dvb2dsZS9wcm90b2J1Zi90aW1lc3RhbXAucHJvdG8aGWdvb2ds",
            "ZS9wcm90b2J1Zi9hbnkucHJvdG8aG2dvb2dsZS9wcm90b2J1Zi9lbXB0eS5w",
            "cm90bxo2Z2l0aHViLmNvbS9td2l0a293L2dvLXByb3RvLXZhbGlkYXRvcnMv",
            "dmFsaWRhdG9yLnByb3RvIkUKA1JlZhIfCgVndHlwZRgBIAEoCUIQ4t8fDAoK",
            "Xi57MSwyMjV9JBIdCgNnaWQYAiABKAlCEOLfHwwKCl4uezEsMjI1fSQiPgoO",
            "UmVmQ29uc3RydWN0b3ISHwoFZ3R5cGUYASABKAlCEOLfHwwKCl4uezEsMjI1",
            "fSQSCwoDZ2lkGAIgASgJIh4KBFJlZnMSFgoEcmVmcxgBIAMoCzIILmFwaS5S",
            "ZWYiUQoDRG9jEh0KA3JlZhgBIAEoCzIILmFwaS5SZWZCBuLfHwIgARIrCgph",
            "dHRyaWJ1dGVzGAIgASgLMhcuZ29vZ2xlLnByb3RvYnVmLlN0cnVjdCJnCg5E",
            "b2NDb25zdHJ1Y3RvchIoCgNyZWYYASABKAsyEy5hcGkuUmVmQ29uc3RydWN0",
            "b3JCBuLfHwIgARIrCgphdHRyaWJ1dGVzGAIgASgLMhcuZ29vZ2xlLnByb3Rv",
            "YnVmLlN0cnVjdCI0Cg9Eb2NDb25zdHJ1Y3RvcnMSIQoEZG9jcxgBIAMoCzIT",
            "LmFwaS5Eb2NDb25zdHJ1Y3RvciJhCglUcmF2ZXJzYWwSFQoDZG9jGAEgASgL",
            "MgguYXBpLkRvYxIgCg50cmF2ZXJzYWxfcGF0aBgCIAMoCzIILmFwaS5SZWYS",
            "DQoFZGVwdGgYAyABKAQSDAoEaG9wcxgEIAEoBCIwCgpUcmF2ZXJzYWxzEiIK",
            "CnRyYXZlcnNhbHMYASADKAsyDi5hcGkuVHJhdmVyc2FsIjEKBERvY3MSFgoE",
            "ZG9jcxgBIAMoCzIILmFwaS5Eb2MSEQoJc2Vla19uZXh0GAIgASgJIqgBCgpD",
            "b25uZWN0aW9uEh0KA3JlZhgBIAEoCzIILmFwaS5SZWZCBuLfHwIgARIrCgph",
            "dHRyaWJ1dGVzGAIgASgLMhcuZ29vZ2xlLnByb3RvYnVmLlN0cnVjdBIQCghk",
            "aXJlY3RlZBgDIAEoCBIeCgRmcm9tGAQgASgLMgguYXBpLlJlZkIG4t8fAiAB",
            "EhwKAnRvGAUgASgLMgguYXBpLlJlZkIG4t8fAiABIr4BChVDb25uZWN0aW9u",
            "Q29uc3RydWN0b3ISKAoDcmVmGAEgASgLMhMuYXBpLlJlZkNvbnN0cnVjdG9y",
            "Qgbi3x8CIAESKwoKYXR0cmlidXRlcxgDIAEoCzIXLmdvb2dsZS5wcm90b2J1",
            "Zi5TdHJ1Y3QSEAoIZGlyZWN0ZWQYBCABKAgSHgoEZnJvbRgFIAEoCzIILmFw",
            "aS5SZWZCBuLfHwIgARIcCgJ0bxgGIAEoCzIILmFwaS5SZWZCBuLfHwIgASKg",
            "AQoTU2VhcmNoQ29ubmVjdEZpbHRlchIbCgZmaWx0ZXIYASABKAsyCy5hcGku",
            "RmlsdGVyEg0KBWd0eXBlGAIgASgJEisKCmF0dHJpYnV0ZXMYAyABKAsyFy5n",
            "b29nbGUucHJvdG9idWYuU3RydWN0EhAKCGRpcmVjdGVkGAQgASgIEh4KBGZy",
            "b20YBSABKAsyCC5hcGkuUmVmQgbi3x8CIAEiggEKFVNlYXJjaENvbm5lY3RN",
            "ZUZpbHRlchIbCgZmaWx0ZXIYASABKAsyCy5hcGkuRmlsdGVyEg0KBWd0eXBl",
            "GAIgASgJEisKCmF0dHJpYnV0ZXMYAyABKAsyFy5nb29nbGUucHJvdG9idWYu",
            "U3RydWN0EhAKCGRpcmVjdGVkGAQgASgIIkkKFkNvbm5lY3Rpb25Db25zdHJ1",
            "Y3RvcnMSLwoLY29ubmVjdGlvbnMYASADKAsyGi5hcGkuQ29ubmVjdGlvbkNv",
            "bnN0cnVjdG9yIkYKC0Nvbm5lY3Rpb25zEiQKC2Nvbm5lY3Rpb25zGAEgAygL",
            "Mg8uYXBpLkNvbm5lY3Rpb24SEQoJc2Vla19uZXh0GAIgASgJIuIBCg1Db25u",
            "ZWN0RmlsdGVyEiEKB2RvY19yZWYYASABKAsyCC5hcGkuUmVmQgbi3x8CIAES",
            "HwoFZ3R5cGUYAiABKAlCEOLfHwwKCl4uezEsMjI1fSQSEgoKZXhwcmVzc2lv",
            "bhgDIAEoCRIVCgVsaW1pdBgEIAEoBEIG4t8fAhAAEkMKBHNvcnQYBSABKAlC",
            "NeLfHzEKLygoXnwsICkofHJlZi5naWR8cmVmLmd0eXBlfF5hdHRyaWJ1dGVz",
            "LiguKikpKSskEgwKBHNlZWsYBiABKAkSDwoHcmV2ZXJzZRgHIAEoCCLHAQoG",
            "RmlsdGVyEh8KBWd0eXBlGAEgASgJQhDi3x8MCgpeLnsxLDIyNX0kEhIKCmV4",
            "cHJlc3Npb24YAiABKAkSFQoFbGltaXQYAyABKARCBuLfHwIQABJDCgRzb3J0",
            "GAQgASgJQjXi3x8xCi8oKF58LCApKHxyZWYuZ2lkfHJlZi5ndHlwZXxeYXR0",
            "cmlidXRlcy4oLiopKSkrJBIMCgRzZWVrGAUgASgJEg8KB3JldmVyc2UYBiAB",
            "KAgSDQoFaW5kZXgYByABKAkihwEKCUFnZ0ZpbHRlchIjCgZmaWx0ZXIYASAB",
            "KAsyCy5hcGkuRmlsdGVyQgbi3x8CIAESIQoJYWdncmVnYXRlGAIgASgOMg4u",
            "YXBpLkFnZ3JlZ2F0ZRIyCgVmaWVsZBgDIAEoCUIj4t8fHwodKChefCwgKSh8",
            "XmF0dHJpYnV0ZXMuKC4qKSkpKyQirAIKDlRyYXZlcnNlRmlsdGVyEh4KBHJv",
            "b3QYASABKAsyCC5hcGkuUmVmQgbi3x8CIAESFgoOZG9jX2V4cHJlc3Npb24Y",
            "AiABKAkSHQoVY29ubmVjdGlvbl9leHByZXNzaW9uGAMgASgJEhUKBWxpbWl0",
            "GAQgASgEQgbi3x8CEAASQwoEc29ydBgFIAEoCUI14t8fMQovKChefCwgKSh8",
            "cmVmLmdpZHxyZWYuZ3R5cGV8XmF0dHJpYnV0ZXMuKC4qKSkpKyQSDwoHcmV2",
            "ZXJzZRgGIAEoCBIhCglhbGdvcml0aG0YByABKA4yDi5hcGkuQWxnb3JpdGht",
            "EhkKCW1heF9kZXB0aBgIIAEoBEIG4t8fAhAAEhgKCG1heF9ob3BzGAkgASgE",
            "Qgbi3x8CEAAijgIKEFRyYXZlcnNlTWVGaWx0ZXISFgoOZG9jX2V4cHJlc3Np",
            "b24YASABKAkSHQoVY29ubmVjdGlvbl9leHByZXNzaW9uGAIgASgJEhUKBWxp",
            "bWl0GAMgASgEQgbi3x8CEAASQwoEc29ydBgEIAEoCUI14t8fMQovKChefCwg",
            "KSh8cmVmLmdpZHxyZWYuZ3R5cGV8XmF0dHJpYnV0ZXMuKC4qKSkpKyQSDwoH",
            "cmV2ZXJzZRgFIAEoCBIhCglhbGdvcml0aG0YBiABKA4yDi5hcGkuQWxnb3Jp",
            "dGhtEhkKCW1heF9kZXB0aBgHIAEoBEIG4t8fAhAAEhgKCG1heF9ob3BzGAgg",
            "ASgEQgbi3x8CEAAinAEKEEluZGV4Q29uc3RydWN0b3ISHgoEbmFtZRgBIAEo",
            "CUIQ4t8fDAoKXi57MSwyMjV9JBIfCgVndHlwZRgDIAEoCUIQ4t8fDAoKXi57",
            "MSwyMjV9JBIkCgpleHByZXNzaW9uGAQgASgJQhDi3x8MCgpeLnsxLDIyNX0k",
            "EgwKBGRvY3MYBiABKAgSEwoLY29ubmVjdGlvbnMYByABKAgiwgEKCkF1dGhU",
            "YXJnZXQSHgoEdXNlchgBIAEoCzIILmFwaS5Eb2NCBuLfHwIgARInCgZ0YXJn",
            "ZXQYAiABKAsyFy5nb29nbGUucHJvdG9idWYuU3RydWN0EgwKBHBlZXIYAyAB",
            "KAkSLQoHaGVhZGVycxgEIAMoCzIcLmFwaS5BdXRoVGFyZ2V0LkhlYWRlcnNF",
            "bnRyeRouCgxIZWFkZXJzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIg",
            "ASgJOgI4ASKnAQoKQXV0aG9yaXplchIeCgRuYW1lGAEgASgJQhDi3x8MCgpe",
            "LnsxLDIyNX0kEiAKBm1ldGhvZBgCIAEoCUIQ4t8fDAoKXi57MSwyMjV9JBIk",
            "CgpleHByZXNzaW9uGAMgASgJQhDi3x8MCgpeLnsxLDIyNX0kEhcKD3Rhcmdl",
            "dF9yZXF1ZXN0cxgEIAEoCBIYChB0YXJnZXRfcmVzcG9uc2VzGAUgASgIIjMK",
            "C0F1dGhvcml6ZXJzEiQKC2F1dGhvcml6ZXJzGAEgAygLMg8uYXBpLkF1dGhv",
            "cml6ZXIipwEKDVR5cGVWYWxpZGF0b3ISHgoEbmFtZRgBIAEoCUIQ4t8fDAoK",
            "Xi57MSwyMjV9JBIfCgVndHlwZRgCIAEoCUIQ4t8fDAoKXi57MSwyMjV9JBIk",
            "CgpleHByZXNzaW9uGAMgASgJQhDi3x8MCgpeLnsxLDIyNX0kEhMKC3Rhcmdl",
            "dF9kb2NzGAQgASgIEhoKEnRhcmdldF9jb25uZWN0aW9ucxgFIAEoCCI4Cg5U",
            "eXBlVmFsaWRhdG9ycxImCgp2YWxpZGF0b3JzGAEgAygLMhIuYXBpLlR5cGVW",
            "YWxpZGF0b3IikQEKBUluZGV4Eh4KBG5hbWUYASABKAlCEOLfHwwKCl4uezEs",
            "MjI1fSQSHwoFZ3R5cGUYAyABKAlCEOLfHwwKCl4uezEsMjI1fSQSJAoKZXhw",
            "cmVzc2lvbhgEIAEoCUIQ4t8fDAoKXi57MSwyMjV9JBIMCgRkb2NzGAYgASgI",
            "EhMKC2Nvbm5lY3Rpb25zGAcgASgIIiYKB0luZGV4ZXMSGwoHaW5kZXhlcxgB",
            "IAMoCzIKLmFwaS5JbmRleCLEAQoHVHJpZ2dlchIeCgRuYW1lGAEgASgJQhDi",
            "3x8MCgpeLnsxLDIyNX0kEh8KBWd0eXBlGAIgASgJQhDi3x8MCgpeLnsxLDIy",
            "NX0kEiQKCmV4cHJlc3Npb24YAyABKAlCEOLfHwwKCl4uezEsMjI1fSQSIQoH",
            "dHJpZ2dlchgEIAEoCUIQ4t8fDAoKXi57MSwyMjV9JBITCgt0YXJnZXRfZG9j",
            "cxgFIAEoCBIaChJ0YXJnZXRfY29ubmVjdGlvbnMYBiABKAgiKgoIVHJpZ2dl",
            "cnMSHgoIdHJpZ2dlcnMYASADKAsyDC5hcGkuVHJpZ2dlciJFCgxTdHJlYW1G",
            "aWx0ZXISIQoHY2hhbm5lbBgBIAEoCUIQ4t8fDAoKXi57MSwyMjV9JBISCgpl",
            "eHByZXNzaW9uGAIgASgJIkcKBUdyYXBoEhcKBGRvY3MYASABKAsyCS5hcGku",
            "RG9jcxIlCgtjb25uZWN0aW9ucxgCIAEoCzIQLmFwaS5Db25uZWN0aW9ucyLP",
            "AwoFRmxhZ3MSGQoRb3Blbl9pZF9kaXNjb3ZlcnkYASABKAkSFAoMc3RvcmFn",
            "ZV9wYXRoGAIgASgJEg8KB21ldHJpY3MYAyABKAgSFQoNYWxsb3dfaGVhZGVy",
            "cxgFIAMoCRIVCg1hbGxvd19tZXRob2RzGAYgAygJEhUKDWFsbG93X29yaWdp",
            "bnMYByADKAkSEgoKcm9vdF91c2VycxgIIAMoCRIQCgh0bHNfY2VydBgJIAEo",
            "CRIPCgd0bHNfa2V5GAogASgJEhwKFHBsYXlncm91bmRfY2xpZW50X2lkGAsg",
            "ASgJEiAKGHBsYXlncm91bmRfY2xpZW50X3NlY3JldBgMIAEoCRIbChNwbGF5",
            "Z3JvdW5kX3JlZGlyZWN0GA0gASgJEiMKG3JlcXVpcmVfcmVxdWVzdF9hdXRo",
            "b3JpemVycxgPIAEoCBIkChxyZXF1aXJlX3Jlc3BvbnNlX2F1dGhvcml6ZXJz",
            "GBAgASgIEhEKCWpvaW5fcmFmdBgRIAEoCRIUCgxyYWZ0X3BlZXJfaWQYEiAB",
            "KAkSEwoLbGlzdGVuX3BvcnQYEyABKAMSEwoLcmFmdF9zZWNyZXQYFCABKAkS",
            "DQoFZGVidWcYFSABKAgiGAoHQm9vbGVhbhINCgV2YWx1ZRgBIAEoCCIXCgZO",
            "dW1iZXISDQoFdmFsdWUYASABKAEigwEKDEV4aXN0c0ZpbHRlchIfCgVndHlw",
            "ZRgBIAEoCUIQ4t8fDAoKXi57MSwyMjV9JBIkCgpleHByZXNzaW9uGAIgASgJ",
            "QhDi3x8MCgpeLnsxLDIyNX0kEgwKBHNlZWsYAyABKAkSDwoHcmV2ZXJzZRgE",
            "IAEoCBINCgVpbmRleBgFIAEoCSJSCgRFZGl0Eh0KA3JlZhgBIAEoCzIILmFw",
            "aS5SZWZCBuLfHwIgARIrCgphdHRyaWJ1dGVzGAIgASgLMhcuZ29vZ2xlLnBy",
            "b3RvYnVmLlN0cnVjdCJWCgpFZGl0RmlsdGVyEhsKBmZpbHRlchgBIAEoCzIL",
            "LmFwaS5GaWx0ZXISKwoKYXR0cmlidXRlcxgCIAEoCzIXLmdvb2dsZS5wcm90",
            "b2J1Zi5TdHJ1Y3QiFwoEUG9uZxIPCgdtZXNzYWdlGAEgASgJImMKD091dGJv",
            "dW5kTWVzc2FnZRIhCgdjaGFubmVsGAEgASgJQhDi3x8MCgpeLnsxLDIyNX0k",
            "Ei0KBGRhdGEYAiABKAsyFy5nb29nbGUucHJvdG9idWYuU3RydWN0Qgbi3x8C",
            "IAEi1AEKB01lc3NhZ2USIQoHY2hhbm5lbBgBIAEoCUIQ4t8fDAoKXi57MSwy",
            "MjV9JBItCgRkYXRhGAIgASgLMhcuZ29vZ2xlLnByb3RvYnVmLlN0cnVjdEIG",
            "4t8fAiABEh4KBHVzZXIYAyABKAsyCC5hcGkuUmVmQgbi3x8CIAESNQoJdGlt",
            "ZXN0YW1wGAQgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEIG4t8f",
            "AiABEiAKBm1ldGhvZBgFIAEoCUIQ4t8fDAoKXi57MSwyMjV9JCLFAQoGU2No",
            "ZW1hEhgKEGNvbm5lY3Rpb25fdHlwZXMYASADKAkSEQoJZG9jX3R5cGVzGAIg",
            "AygJEiUKC2F1dGhvcml6ZXJzGAMgASgLMhAuYXBpLkF1dGhvcml6ZXJzEicK",
            "CnZhbGlkYXRvcnMYBCABKAsyEy5hcGkuVHlwZVZhbGlkYXRvcnMSHQoHaW5k",
            "ZXhlcxgFIAEoCzIMLmFwaS5JbmRleGVzEh8KCHRyaWdnZXJzGAYgASgLMg0u",
            "YXBpLlRyaWdnZXJzIiAKCkV4cHJGaWx0ZXISEgoKZXhwcmVzc2lvbhgBIAEo",
            "CSKDAwoLUmFmdENvbW1hbmQSFgoEdXNlchgBIAEoCzIILmFwaS5Eb2MSDgoG",
            "bWV0aG9kGAIgASgJEhoKCHNldF9kb2NzGAMgAygLMgguYXBpLkRvYxIoCg9z",
            "ZXRfY29ubmVjdGlvbnMYBCADKAsyDy5hcGkuQ29ubmVjdGlvbhIaCghkZWxf",
            "ZG9jcxgFIAMoCzIILmFwaS5SZWYSIQoPZGVsX2Nvbm5lY3Rpb25zGAYgAygL",
            "MgguYXBpLlJlZhIhCgtzZXRfaW5kZXhlcxgHIAEoCzIMLmFwaS5JbmRleGVz",
            "EikKD3NldF9hdXRob3JpemVycxgIIAEoCzIQLmFwaS5BdXRob3JpemVycxIw",
            "ChNzZXRfdHlwZV92YWxpZGF0b3JzGAkgASgLMhMuYXBpLlR5cGVWYWxpZGF0",
            "b3JzEiIKDHNlbmRfbWVzc2FnZRgKIAEoCzIMLmFwaS5NZXNzYWdlEiMKDHNl",
            "dF90cmlnZ2VycxgLIAEoCzINLmFwaS5UcmlnZ2VycyIlCgRQZWVyEg8KB25v",
            "ZGVfaWQYASABKAkSDAoEYWRkchgCIAEoCSKyAQoJUmFmdFN0YXRlEg4KBmxl",
            "YWRlchgBIAEoCRIjCgptZW1iZXJzaGlwGAIgASgOMg8uYXBpLk1lbWJlcnNo",
            "aXASGAoFcGVlcnMYAyADKAsyCS5hcGkuUGVlchIoCgVzdGF0cxgEIAMoCzIZ",
            "LmFwaS5SYWZ0U3RhdGUuU3RhdHNFbnRyeRosCgpTdGF0c0VudHJ5EgsKA2tl",
            "eRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEqHQoJQWxnb3JpdGhtEgcKA0JG",
            "UxAAEgcKA0RGUxABKkQKCUFnZ3JlZ2F0ZRIJCgVDT1VOVBAAEgcKA1NVTRAB",
            "EgcKA0FWRxACEgcKA01BWBADEgcKA01JThAEEggKBFBST0QQBSpQCgpNZW1i",
            "ZXJzaGlwEgsKB1VOS05PV04QABIMCghGT0xMT1dFUhABEg0KCUNBTkRJREFU",
            "RRACEgoKBkxFQURFUhADEgwKCFNIVVRET1dOEAQyqAEKC1JhZnRTZXJ2aWNl",
            "EisKBFBpbmcSFi5nb29nbGUucHJvdG9idWYuRW1wdHkaCS5hcGkuUG9uZyIA",
            "EjIKC0pvaW5DbHVzdGVyEgkuYXBpLlBlZXIaFi5nb29nbGUucHJvdG9idWYu",
            "RW1wdHkiABI4CgxDbHVzdGVyU3RhdGUSFi5nb29nbGUucHJvdG9idWYuRW1w",
            "dHkaDi5hcGkuUmFmdFN0YXRlIgAy5RAKD0RhdGFiYXNlU2VydmljZRIyCglH",
            "ZXRTY2hlbWESFi5nb29nbGUucHJvdG9idWYuRW1wdHkaCy5hcGkuU2NoZW1h",
            "IgASPAoOU2V0QXV0aG9yaXplcnMSEC5hcGkuQXV0aG9yaXplcnMaFi5nb29n",
            "bGUucHJvdG9idWYuRW1wdHkiABI0CgpTZXRJbmRleGVzEgwuYXBpLkluZGV4",
            "ZXMaFi5nb29nbGUucHJvdG9idWYuRW1wdHkiABJCChFTZXRUeXBlVmFsaWRh",
            "dG9ycxITLmFwaS5UeXBlVmFsaWRhdG9ycxoWLmdvb2dsZS5wcm90b2J1Zi5F",
            "bXB0eSIAEjYKC1NldFRyaWdnZXJzEg0uYXBpLlRyaWdnZXJzGhYuZ29vZ2xl",
            "LnByb3RvYnVmLkVtcHR5IgASKAoCTWUSFi5nb29nbGUucHJvdG9idWYuRW1w",
            "dHkaCC5hcGkuRG9jIgASLAoJQ3JlYXRlRG9jEhMuYXBpLkRvY0NvbnN0cnVj",
            "dG9yGgguYXBpLkRvYyIAEi8KCkNyZWF0ZURvY3MSFC5hcGkuRG9jQ29uc3Ry",
            "dWN0b3JzGgkuYXBpLkRvY3MiABIeCgZHZXREb2MSCC5hcGkuUmVmGgguYXBp",
            "LkRvYyIAEiYKClNlYXJjaERvY3MSCy5hcGkuRmlsdGVyGgkuYXBpLkRvY3Mi",
            "ABIyCghUcmF2ZXJzZRITLmFwaS5UcmF2ZXJzZUZpbHRlchoPLmFwaS5UcmF2",
            "ZXJzYWxzIgASNgoKVHJhdmVyc2VNZRIVLmFwaS5UcmF2ZXJzZU1lRmlsdGVy",
            "Gg8uYXBpLlRyYXZlcnNhbHMiABIgCgdFZGl0RG9jEgkuYXBpLkVkaXQaCC5h",
            "cGkuRG9jIgASKAoIRWRpdERvY3MSDy5hcGkuRWRpdEZpbHRlchoJLmFwaS5E",
            "b2NzIgASLAoGRGVsRG9jEgguYXBpLlJlZhoWLmdvb2dsZS5wcm90b2J1Zi5F",
            "bXB0eSIAEjAKB0RlbERvY3MSCy5hcGkuRmlsdGVyGhYuZ29vZ2xlLnByb3Rv",
            "YnVmLkVtcHR5IgASLgoJRXhpc3RzRG9jEhEuYXBpLkV4aXN0c0ZpbHRlchoM",
            "LmFwaS5Cb29sZWFuIgASNQoQRXhpc3RzQ29ubmVjdGlvbhIRLmFwaS5FeGlz",
            "dHNGaWx0ZXIaDC5hcGkuQm9vbGVhbiIAEiIKBkhhc0RvYxIILmFwaS5SZWYa",
            "DC5hcGkuQm9vbGVhbiIAEikKDUhhc0Nvbm5lY3Rpb24SCC5hcGkuUmVmGgwu",
            "YXBpLkJvb2xlYW4iABJBChBDcmVhdGVDb25uZWN0aW9uEhouYXBpLkNvbm5l",
            "Y3Rpb25Db25zdHJ1Y3RvchoPLmFwaS5Db25uZWN0aW9uIgASRAoRQ3JlYXRl",
            "Q29ubmVjdGlvbnMSGy5hcGkuQ29ubmVjdGlvbkNvbnN0cnVjdG9ycxoQLmFw",
            "aS5Db25uZWN0aW9ucyIAEkAKEFNlYXJjaEFuZENvbm5lY3QSGC5hcGkuU2Vh",
            "cmNoQ29ubmVjdEZpbHRlchoQLmFwaS5Db25uZWN0aW9ucyIAEkQKElNlYXJj",
            "aEFuZENvbm5lY3RNZRIaLmFwaS5TZWFyY2hDb25uZWN0TWVGaWx0ZXIaEC5h",
            "cGkuQ29ubmVjdGlvbnMiABIsCg1HZXRDb25uZWN0aW9uEgguYXBpLlJlZhoP",
            "LmFwaS5Db25uZWN0aW9uIgASNAoRU2VhcmNoQ29ubmVjdGlvbnMSCy5hcGku",
            "RmlsdGVyGhAuYXBpLkNvbm5lY3Rpb25zIgASLgoORWRpdENvbm5lY3Rpb24S",
            "CS5hcGkuRWRpdBoPLmFwaS5Db25uZWN0aW9uIgASNgoPRWRpdENvbm5lY3Rp",
            "b25zEg8uYXBpLkVkaXRGaWx0ZXIaEC5hcGkuQ29ubmVjdGlvbnMiABIzCg1E",
            "ZWxDb25uZWN0aW9uEgguYXBpLlJlZhoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0",
            "eSIAEjcKDkRlbENvbm5lY3Rpb25zEgsuYXBpLkZpbHRlchoWLmdvb2dsZS5w",
            "cm90b2J1Zi5FbXB0eSIAEjkKD0Nvbm5lY3Rpb25zRnJvbRISLmFwaS5Db25u",
            "ZWN0RmlsdGVyGhAuYXBpLkNvbm5lY3Rpb25zIgASNwoNQ29ubmVjdGlvbnNU",
            "bxISLmFwaS5Db25uZWN0RmlsdGVyGhAuYXBpLkNvbm5lY3Rpb25zIgASLgoN",
            "QWdncmVnYXRlRG9jcxIOLmFwaS5BZ2dGaWx0ZXIaCy5hcGkuTnVtYmVyIgAS",
            "NQoUQWdncmVnYXRlQ29ubmVjdGlvbnMSDi5hcGkuQWdnRmlsdGVyGgsuYXBp",
            "Lk51bWJlciIAEjsKCUJyb2FkY2FzdBIULmFwaS5PdXRib3VuZE1lc3NhZ2Ua",
            "Fi5nb29nbGUucHJvdG9idWYuRW1wdHkiABItCgZTdHJlYW0SES5hcGkuU3Ry",
            "ZWFtRmlsdGVyGgwuYXBpLk1lc3NhZ2UiADABEjoKE1B1c2hEb2NDb25zdHJ1",
            "Y3RvcnMSEy5hcGkuRG9jQ29uc3RydWN0b3IaCC5hcGkuRG9jIgAoATABEk8K",
            "GlB1c2hDb25uZWN0aW9uQ29uc3RydWN0b3JzEhouYXBpLkNvbm5lY3Rpb25D",
            "b25zdHJ1Y3RvchoPLmFwaS5Db25uZWN0aW9uIgAoATABEjAKCFNlZWREb2Nz",
            "EgguYXBpLkRvYxoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eSIAKAESPgoPU2Vl",
            "ZENvbm5lY3Rpb25zEg8uYXBpLkNvbm5lY3Rpb24aFi5nb29nbGUucHJvdG9i",
            "dWYuRW1wdHkiACgBQgdaBWFwaXBiYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.StructReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.AnyReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::Validator.ValidatorReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Api.Algorithm), typeof(global::Api.Aggregate), typeof(global::Api.Membership), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Ref), global::Api.Ref.Parser, new[]{ "Gtype", "Gid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.RefConstructor), global::Api.RefConstructor.Parser, new[]{ "Gtype", "Gid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Refs), global::Api.Refs.Parser, new[]{ "Refs_" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Doc), global::Api.Doc.Parser, new[]{ "Ref", "Attributes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.DocConstructor), global::Api.DocConstructor.Parser, new[]{ "Ref", "Attributes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.DocConstructors), global::Api.DocConstructors.Parser, new[]{ "Docs" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Traversal), global::Api.Traversal.Parser, new[]{ "Doc", "TraversalPath", "Depth", "Hops" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Traversals), global::Api.Traversals.Parser, new[]{ "Traversals_" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Docs), global::Api.Docs.Parser, new[]{ "Docs_", "SeekNext" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Connection), global::Api.Connection.Parser, new[]{ "Ref", "Attributes", "Directed", "From", "To" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.ConnectionConstructor), global::Api.ConnectionConstructor.Parser, new[]{ "Ref", "Attributes", "Directed", "From", "To" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.SearchConnectFilter), global::Api.SearchConnectFilter.Parser, new[]{ "Filter", "Gtype", "Attributes", "Directed", "From" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.SearchConnectMeFilter), global::Api.SearchConnectMeFilter.Parser, new[]{ "Filter", "Gtype", "Attributes", "Directed" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.ConnectionConstructors), global::Api.ConnectionConstructors.Parser, new[]{ "Connections" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Connections), global::Api.Connections.Parser, new[]{ "Connections_", "SeekNext" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.ConnectFilter), global::Api.ConnectFilter.Parser, new[]{ "DocRef", "Gtype", "Expression", "Limit", "Sort", "Seek", "Reverse" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Filter), global::Api.Filter.Parser, new[]{ "Gtype", "Expression", "Limit", "Sort", "Seek", "Reverse", "Index" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.AggFilter), global::Api.AggFilter.Parser, new[]{ "Filter", "Aggregate", "Field" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.TraverseFilter), global::Api.TraverseFilter.Parser, new[]{ "Root", "DocExpression", "ConnectionExpression", "Limit", "Sort", "Reverse", "Algorithm", "MaxDepth", "MaxHops" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.TraverseMeFilter), global::Api.TraverseMeFilter.Parser, new[]{ "DocExpression", "ConnectionExpression", "Limit", "Sort", "Reverse", "Algorithm", "MaxDepth", "MaxHops" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.IndexConstructor), global::Api.IndexConstructor.Parser, new[]{ "Name", "Gtype", "Expression", "Docs", "Connections" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.AuthTarget), global::Api.AuthTarget.Parser, new[]{ "User", "Target", "Peer", "Headers" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Authorizer), global::Api.Authorizer.Parser, new[]{ "Name", "Method", "Expression", "TargetRequests", "TargetResponses" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Authorizers), global::Api.Authorizers.Parser, new[]{ "Authorizers_" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.TypeValidator), global::Api.TypeValidator.Parser, new[]{ "Name", "Gtype", "Expression", "TargetDocs", "TargetConnections" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.TypeValidators), global::Api.TypeValidators.Parser, new[]{ "Validators" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Index), global::Api.Index.Parser, new[]{ "Name", "Gtype", "Expression", "Docs", "Connections" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Indexes), global::Api.Indexes.Parser, new[]{ "Indexes_" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Trigger), global::Api.Trigger.Parser, new[]{ "Name", "Gtype", "Expression", "Trigger_", "TargetDocs", "TargetConnections" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Triggers), global::Api.Triggers.Parser, new[]{ "Triggers_" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.StreamFilter), global::Api.StreamFilter.Parser, new[]{ "Channel", "Expression" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Graph), global::Api.Graph.Parser, new[]{ "Docs", "Connections" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Flags), global::Api.Flags.Parser, new[]{ "OpenIdDiscovery", "StoragePath", "Metrics", "AllowHeaders", "AllowMethods", "AllowOrigins", "RootUsers", "TlsCert", "TlsKey", "PlaygroundClientId", "PlaygroundClientSecret", "PlaygroundRedirect", "RequireRequestAuthorizers", "RequireResponseAuthorizers", "JoinRaft", "RaftPeerId", "ListenPort", "RaftSecret", "Debug" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Boolean), global::Api.Boolean.Parser, new[]{ "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Number), global::Api.Number.Parser, new[]{ "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.ExistsFilter), global::Api.ExistsFilter.Parser, new[]{ "Gtype", "Expression", "Seek", "Reverse", "Index" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Edit), global::Api.Edit.Parser, new[]{ "Ref", "Attributes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.EditFilter), global::Api.EditFilter.Parser, new[]{ "Filter", "Attributes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Pong), global::Api.Pong.Parser, new[]{ "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.OutboundMessage), global::Api.OutboundMessage.Parser, new[]{ "Channel", "Data" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Message), global::Api.Message.Parser, new[]{ "Channel", "Data", "User", "Timestamp", "Method" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Schema), global::Api.Schema.Parser, new[]{ "ConnectionTypes", "DocTypes", "Authorizers", "Validators", "Indexes", "Triggers" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.ExprFilter), global::Api.ExprFilter.Parser, new[]{ "Expression" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.RaftCommand), global::Api.RaftCommand.Parser, new[]{ "User", "Method", "SetDocs", "SetConnections", "DelDocs", "DelConnections", "SetIndexes", "SetAuthorizers", "SetTypeValidators", "SendMessage", "SetTriggers" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Peer), global::Api.Peer.Parser, new[]{ "NodeId", "Addr" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.RaftState), global::Api.RaftState.Parser, new[]{ "Leader", "Membership", "Peers", "Stats" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, })
          }));
    }
    #endregion

  }
  #region Enums
  public enum Algorithm {
    /// <summary>
    /// BFS is short for the breadth-first search algorithm
    /// </summary>
    [pbr::OriginalName("BFS")] Bfs = 0,
    /// <summary>
    /// DFS is short for the depth-first search algorithm
    /// </summary>
    [pbr::OriginalName("DFS")] Dfs = 1,
  }

  public enum Aggregate {
    [pbr::OriginalName("COUNT")] Count = 0,
    [pbr::OriginalName("SUM")] Sum = 1,
    [pbr::OriginalName("AVG")] Avg = 2,
    [pbr::OriginalName("MAX")] Max = 3,
    [pbr::OriginalName("MIN")] Min = 4,
    [pbr::OriginalName("PROD")] Prod = 5,
  }

  public enum Membership {
    [pbr::OriginalName("UNKNOWN")] Unknown = 0,
    [pbr::OriginalName("FOLLOWER")] Follower = 1,
    [pbr::OriginalName("CANDIDATE")] Candidate = 2,
    [pbr::OriginalName("LEADER")] Leader = 3,
    [pbr::OriginalName("SHUTDOWN")] Shutdown = 4,
  }

  #endregion

  #region Messages
  /// <summary>
  /// Ref describes a doc/connection type &amp; id
  /// </summary>
  public sealed partial class Ref : pb::IMessage<Ref> {
    private static readonly pb::MessageParser<Ref> _parser = new pb::MessageParser<Ref>(() => new Ref());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Ref> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.GraphikReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ref() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ref(Ref other) : this() {
      gtype_ = other.gtype_;
      gid_ = other.gid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ref Clone() {
      return new Ref(this);
    }

    /// <summary>Field number for the "gtype" field.</summary>
    public const int GtypeFieldNumber = 1;
    private string gtype_ = "";
    /// <summary>
    /// gtype is the type of the doc/connection ex: pet
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Gtype {
      get { return gtype_; }
      set {
        gtype_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gid" field.</summary>
    public const int GidFieldNumber = 2;
    private string gid_ = "";
    /// <summary>
    /// gid is the unique id of the doc/connection within the context of it's type
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Gid {
      get { return gid_; }
      set {
        gid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Ref);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Ref other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Gtype != other.Gtype) return false;
      if (Gid != other.Gid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Gtype.Length != 0) hash ^= Gtype.GetHashCode();
      if (Gid.Length != 0) hash ^= Gid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Gtype.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Gtype);
      }
      if (Gid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Gid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Gtype.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Gtype);
      }
      if (Gid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Gid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Ref other) {
      if (other == null) {
        return;
      }
      if (other.Gtype.Length != 0) {
        Gtype = other.Gtype;
      }
      if (other.Gid.Length != 0) {
        Gid = other.Gid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Gtype = input.ReadString();
            break;
          }
          case 18: {
            Gid = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// RefConstructor creates a new Ref
  /// </summary>
  public sealed partial class RefConstructor : pb::IMessage<RefConstructor> {
    private static readonly pb::MessageParser<RefConstructor> _parser = new pb::MessageParser<RefConstructor>(() => new RefConstructor());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RefConstructor> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.GraphikReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RefConstructor() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RefConstructor(RefConstructor other) : this() {
      gtype_ = other.gtype_;
      gid_ = other.gid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RefConstructor Clone() {
      return new RefConstructor(this);
    }

    /// <summary>Field number for the "gtype" field.</summary>
    public const int GtypeFieldNumber = 1;
    private string gtype_ = "";
    /// <summary>
    /// gtype is the type of the doc/connection ex: pet
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Gtype {
      get { return gtype_; }
      set {
        gtype_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gid" field.</summary>
    public const int GidFieldNumber = 2;
    private string gid_ = "";
    /// <summary>
    /// gid is the unique id of the doc/connection within the context of it's type
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Gid {
      get { return gid_; }
      set {
        gid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RefConstructor);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RefConstructor other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Gtype != other.Gtype) return false;
      if (Gid != other.Gid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Gtype.Length != 0) hash ^= Gtype.GetHashCode();
      if (Gid.Length != 0) hash ^= Gid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Gtype.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Gtype);
      }
      if (Gid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Gid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Gtype.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Gtype);
      }
      if (Gid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Gid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RefConstructor other) {
      if (other == null) {
        return;
      }
      if (other.Gtype.Length != 0) {
        Gtype = other.Gtype;
      }
      if (other.Gid.Length != 0) {
        Gid = other.Gid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Gtype = input.ReadString();
            break;
          }
          case 18: {
            Gid = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Refs is an array of refs
  /// </summary>
  public sealed partial class Refs : pb::IMessage<Refs> {
    private static readonly pb::MessageParser<Refs> _parser = new pb::MessageParser<Refs>(() => new Refs());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Refs> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.GraphikReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Refs() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Refs(Refs other) : this() {
      refs_ = other.refs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Refs Clone() {
      return new Refs(this);
    }

    /// <summary>Field number for the "refs" field.</summary>
    public const int Refs_FieldNumber = 1;
    private static readonly pb::FieldCodec<global::Api.Ref> _repeated_refs_codec
        = pb::FieldCodec.ForMessage(10, global::Api.Ref.Parser);
    private readonly pbc::RepeatedField<global::Api.Ref> refs_ = new pbc::RepeatedField<global::Api.Ref>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Api.Ref> Refs_ {
      get { return refs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Refs);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Refs other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!refs_.Equals(other.refs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= refs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      refs_.WriteTo(output, _repeated_refs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += refs_.CalculateSize(_repeated_refs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Refs other) {
      if (other == null) {
        return;
      }
      refs_.Add(other.refs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            refs_.AddEntriesFrom(input, _repeated_refs_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Doc is a Graph primitive representing a single entity/resource. It is connected to other docs via Connections
  /// </summary>
  public sealed partial class Doc : pb::IMessage<Doc> {
    private static readonly pb::MessageParser<Doc> _parser = new pb::MessageParser<Doc>(() => new Doc());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Doc> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.GraphikReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Doc() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Doc(Doc other) : this() {
      ref_ = other.ref_ != null ? other.ref_.Clone() : null;
      attributes_ = other.attributes_ != null ? other.attributes_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Doc Clone() {
      return new Doc(this);
    }

    /// <summary>Field number for the "ref" field.</summary>
    public const int RefFieldNumber = 1;
    private global::Api.Ref ref_;
    /// <summary>
    /// ref is the ref to the doc
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.Ref Ref {
      get { return ref_; }
      set {
        ref_ = value;
      }
    }

    /// <summary>Field number for the "attributes" field.</summary>
    public const int AttributesFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Struct attributes_;
    /// <summary>
    /// k/v pairs
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Struct Attributes {
      get { return attributes_; }
      set {
        attributes_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Doc);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Doc other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Ref, other.Ref)) return false;
      if (!object.Equals(Attributes, other.Attributes)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ref_ != null) hash ^= Ref.GetHashCode();
      if (attributes_ != null) hash ^= Attributes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ref_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Ref);
      }
      if (attributes_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Attributes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ref_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ref);
      }
      if (attributes_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Attributes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Doc other) {
      if (other == null) {
        return;
      }
      if (other.ref_ != null) {
        if (ref_ == null) {
          ref_ = new global::Api.Ref();
        }
        Ref.MergeFrom(other.Ref);
      }
      if (other.attributes_ != null) {
        if (attributes_ == null) {
          attributes_ = new global::Google.Protobuf.WellKnownTypes.Struct();
        }
        Attributes.MergeFrom(other.Attributes);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (ref_ == null) {
              ref_ = new global::Api.Ref();
            }
            input.ReadMessage(ref_);
            break;
          }
          case 18: {
            if (attributes_ == null) {
              attributes_ = new global::Google.Protobuf.WellKnownTypes.Struct();
            }
            input.ReadMessage(attributes_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// DocConstructor is used to create a doc
  /// </summary>
  public sealed partial class DocConstructor : pb::IMessage<DocConstructor> {
    private static readonly pb::MessageParser<DocConstructor> _parser = new pb::MessageParser<DocConstructor>(() => new DocConstructor());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DocConstructor> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.GraphikReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DocConstructor() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DocConstructor(DocConstructor other) : this() {
      ref_ = other.ref_ != null ? other.ref_.Clone() : null;
      attributes_ = other.attributes_ != null ? other.attributes_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DocConstructor Clone() {
      return new DocConstructor(this);
    }

    /// <summary>Field number for the "ref" field.</summary>
    public const int RefFieldNumber = 1;
    private global::Api.RefConstructor ref_;
    /// <summary>
    /// ref is the ref to the new Doc. If an id isn't present, one will be generated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.RefConstructor Ref {
      get { return ref_; }
      set {
        ref_ = value;
      }
    }

    /// <summary>Field number for the "attributes" field.</summary>
    public const int AttributesFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Struct attributes_;
    /// <summary>
    /// arbitrary k/v pairs
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Struct Attributes {
      get { return attributes_; }
      set {
        attributes_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DocConstructor);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DocConstructor other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Ref, other.Ref)) return false;
      if (!object.Equals(Attributes, other.Attributes)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ref_ != null) hash ^= Ref.GetHashCode();
      if (attributes_ != null) hash ^= Attributes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ref_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Ref);
      }
      if (attributes_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Attributes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ref_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ref);
      }
      if (attributes_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Attributes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DocConstructor other) {
      if (other == null) {
        return;
      }
      if (other.ref_ != null) {
        if (ref_ == null) {
          ref_ = new global::Api.RefConstructor();
        }
        Ref.MergeFrom(other.Ref);
      }
      if (other.attributes_ != null) {
        if (attributes_ == null) {
          attributes_ = new global::Google.Protobuf.WellKnownTypes.Struct();
        }
        Attributes.MergeFrom(other.Attributes);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (ref_ == null) {
              ref_ = new global::Api.RefConstructor();
            }
            input.ReadMessage(ref_);
            break;
          }
          case 18: {
            if (attributes_ == null) {
              attributes_ = new global::Google.Protobuf.WellKnownTypes.Struct();
            }
            input.ReadMessage(attributes_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// DocConstructor is used to create a batch of docs
  /// </summary>
  public sealed partial class DocConstructors : pb::IMessage<DocConstructors> {
    private static readonly pb::MessageParser<DocConstructors> _parser = new pb::MessageParser<DocConstructors>(() => new DocConstructors());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DocConstructors> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.GraphikReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DocConstructors() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DocConstructors(DocConstructors other) : this() {
      docs_ = other.docs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DocConstructors Clone() {
      return new DocConstructors(this);
    }

    /// <summary>Field number for the "docs" field.</summary>
    public const int DocsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Api.DocConstructor> _repeated_docs_codec
        = pb::FieldCodec.ForMessage(10, global::Api.DocConstructor.Parser);
    private readonly pbc::RepeatedField<global::Api.DocConstructor> docs_ = new pbc::RepeatedField<global::Api.DocConstructor>();
    /// <summary>
    /// docs is an array of doc constructors
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Api.DocConstructor> Docs {
      get { return docs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DocConstructors);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DocConstructors other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!docs_.Equals(other.docs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= docs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      docs_.WriteTo(output, _repeated_docs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += docs_.CalculateSize(_repeated_docs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DocConstructors other) {
      if (other == null) {
        return;
      }
      docs_.Add(other.docs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            docs_.AddEntriesFrom(input, _repeated_docs_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Traversal : pb::IMessage<Traversal> {
    private static readonly pb::MessageParser<Traversal> _parser = new pb::MessageParser<Traversal>(() => new Traversal());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Traversal> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.GraphikReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Traversal() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Traversal(Traversal other) : this() {
      doc_ = other.doc_ != null ? other.doc_.Clone() : null;
      traversalPath_ = other.traversalPath_.Clone();
      depth_ = other.depth_;
      hops_ = other.hops_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Traversal Clone() {
      return new Traversal(this);
    }

    /// <summary>Field number for the "doc" field.</summary>
    public const int DocFieldNumber = 1;
    private global::Api.Doc doc_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.Doc Doc {
      get { return doc_; }
      set {
        doc_ = value;
      }
    }

    /// <summary>Field number for the "traversal_path" field.</summary>
    public const int TraversalPathFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Api.Ref> _repeated_traversalPath_codec
        = pb::FieldCodec.ForMessage(18, global::Api.Ref.Parser);
    private readonly pbc::RepeatedField<global::Api.Ref> traversalPath_ = new pbc::RepeatedField<global::Api.Ref>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Api.Ref> TraversalPath {
      get { return traversalPath_; }
    }

    /// <summary>Field number for the "depth" field.</summary>
    public const int DepthFieldNumber = 3;
    private ulong depth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Depth {
      get { return depth_; }
      set {
        depth_ = value;
      }
    }

    /// <summary>Field number for the "hops" field.</summary>
    public const int HopsFieldNumber = 4;
    private ulong hops_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Hops {
      get { return hops_; }
      set {
        hops_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Traversal);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Traversal other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Doc, other.Doc)) return false;
      if(!traversalPath_.Equals(other.traversalPath_)) return false;
      if (Depth != other.Depth) return false;
      if (Hops != other.Hops) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (doc_ != null) hash ^= Doc.GetHashCode();
      hash ^= traversalPath_.GetHashCode();
      if (Depth != 0UL) hash ^= Depth.GetHashCode();
      if (Hops != 0UL) hash ^= Hops.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (doc_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Doc);
      }
      traversalPath_.WriteTo(output, _repeated_traversalPath_codec);
      if (Depth != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(Depth);
      }
      if (Hops != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(Hops);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (doc_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Doc);
      }
      size += traversalPath_.CalculateSize(_repeated_traversalPath_codec);
      if (Depth != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Depth);
      }
      if (Hops != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Hops);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Traversal other) {
      if (other == null) {
        return;
      }
      if (other.doc_ != null) {
        if (doc_ == null) {
          doc_ = new global::Api.Doc();
        }
        Doc.MergeFrom(other.Doc);
      }
      traversalPath_.Add(other.traversalPath_);
      if (other.Depth != 0UL) {
        Depth = other.Depth;
      }
      if (other.Hops != 0UL) {
        Hops = other.Hops;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (doc_ == null) {
              doc_ = new global::Api.Doc();
            }
            input.ReadMessage(doc_);
            break;
          }
          case 18: {
            traversalPath_.AddEntriesFrom(input, _repeated_traversalPath_codec);
            break;
          }
          case 24: {
            Depth = input.ReadUInt64();
            break;
          }
          case 32: {
            Hops = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Traversals : pb::IMessage<Traversals> {
    private static readonly pb::MessageParser<Traversals> _parser = new pb::MessageParser<Traversals>(() => new Traversals());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Traversals> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.GraphikReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Traversals() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Traversals(Traversals other) : this() {
      traversals_ = other.traversals_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Traversals Clone() {
      return new Traversals(this);
    }

    /// <summary>Field number for the "traversals" field.</summary>
    public const int Traversals_FieldNumber = 1;
    private static readonly pb::FieldCodec<global::Api.Traversal> _repeated_traversals_codec
        = pb::FieldCodec.ForMessage(10, global::Api.Traversal.Parser);
    private readonly pbc::RepeatedField<global::Api.Traversal> traversals_ = new pbc::RepeatedField<global::Api.Traversal>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Api.Traversal> Traversals_ {
      get { return traversals_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Traversals);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Traversals other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!traversals_.Equals(other.traversals_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= traversals_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      traversals_.WriteTo(output, _repeated_traversals_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += traversals_.CalculateSize(_repeated_traversals_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Traversals other) {
      if (other == null) {
        return;
      }
      traversals_.Add(other.traversals_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            traversals_.AddEntriesFrom(input, _repeated_traversals_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Docs is an array of docs
  /// </summary>
  public sealed partial class Docs : pb::IMessage<Docs> {
    private static readonly pb::MessageParser<Docs> _parser = new pb::MessageParser<Docs>(() => new Docs());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Docs> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.GraphikReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Docs() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Docs(Docs other) : this() {
      docs_ = other.docs_.Clone();
      seekNext_ = other.seekNext_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Docs Clone() {
      return new Docs(this);
    }

    /// <summary>Field number for the "docs" field.</summary>
    public const int Docs_FieldNumber = 1;
    private static readonly pb::FieldCodec<global::Api.Doc> _repeated_docs_codec
        = pb::FieldCodec.ForMessage(10, global::Api.Doc.Parser);
    private readonly pbc::RepeatedField<global::Api.Doc> docs_ = new pbc::RepeatedField<global::Api.Doc>();
    /// <summary>
    /// docs is an array of docs
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Api.Doc> Docs_ {
      get { return docs_; }
    }

    /// <summary>Field number for the "seek_next" field.</summary>
    public const int SeekNextFieldNumber = 2;
    private string seekNext_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SeekNext {
      get { return seekNext_; }
      set {
        seekNext_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Docs);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Docs other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!docs_.Equals(other.docs_)) return false;
      if (SeekNext != other.SeekNext) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= docs_.GetHashCode();
      if (SeekNext.Length != 0) hash ^= SeekNext.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      docs_.WriteTo(output, _repeated_docs_codec);
      if (SeekNext.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SeekNext);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += docs_.CalculateSize(_repeated_docs_codec);
      if (SeekNext.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SeekNext);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Docs other) {
      if (other == null) {
        return;
      }
      docs_.Add(other.docs_);
      if (other.SeekNext.Length != 0) {
        SeekNext = other.SeekNext;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            docs_.AddEntriesFrom(input, _repeated_docs_codec);
            break;
          }
          case 18: {
            SeekNext = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Connection is a graph primitive that represents a relationship between two docs
  /// </summary>
  public sealed partial class Connection : pb::IMessage<Connection> {
    private static readonly pb::MessageParser<Connection> _parser = new pb::MessageParser<Connection>(() => new Connection());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Connection> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.GraphikReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Connection() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Connection(Connection other) : this() {
      ref_ = other.ref_ != null ? other.ref_.Clone() : null;
      attributes_ = other.attributes_ != null ? other.attributes_.Clone() : null;
      directed_ = other.directed_;
      from_ = other.from_ != null ? other.from_.Clone() : null;
      to_ = other.to_ != null ? other.to_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Connection Clone() {
      return new Connection(this);
    }

    /// <summary>Field number for the "ref" field.</summary>
    public const int RefFieldNumber = 1;
    private global::Api.Ref ref_;
    /// <summary>
    /// ref is the ref to the connection
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.Ref Ref {
      get { return ref_; }
      set {
        ref_ = value;
      }
    }

    /// <summary>Field number for the "attributes" field.</summary>
    public const int AttributesFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Struct attributes_;
    /// <summary>
    /// attributes are k/v pairs
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Struct Attributes {
      get { return attributes_; }
      set {
        attributes_ = value;
      }
    }

    /// <summary>Field number for the "directed" field.</summary>
    public const int DirectedFieldNumber = 3;
    private bool directed_;
    /// <summary>
    /// directed is false if the connection is bi-directional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Directed {
      get { return directed_; }
      set {
        directed_ = value;
      }
    }

    /// <summary>Field number for the "from" field.</summary>
    public const int FromFieldNumber = 4;
    private global::Api.Ref from_;
    /// <summary>
    /// from is the doc ref that is the source of the connection
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.Ref From {
      get { return from_; }
      set {
        from_ = value;
      }
    }

    /// <summary>Field number for the "to" field.</summary>
    public const int ToFieldNumber = 5;
    private global::Api.Ref to_;
    /// <summary>
    /// to is the doc ref that is the destination of the connection
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.Ref To {
      get { return to_; }
      set {
        to_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Connection);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Connection other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Ref, other.Ref)) return false;
      if (!object.Equals(Attributes, other.Attributes)) return false;
      if (Directed != other.Directed) return false;
      if (!object.Equals(From, other.From)) return false;
      if (!object.Equals(To, other.To)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ref_ != null) hash ^= Ref.GetHashCode();
      if (attributes_ != null) hash ^= Attributes.GetHashCode();
      if (Directed != false) hash ^= Directed.GetHashCode();
      if (from_ != null) hash ^= From.GetHashCode();
      if (to_ != null) hash ^= To.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ref_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Ref);
      }
      if (attributes_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Attributes);
      }
      if (Directed != false) {
        output.WriteRawTag(24);
        output.WriteBool(Directed);
      }
      if (from_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(From);
      }
      if (to_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(To);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ref_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ref);
      }
      if (attributes_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Attributes);
      }
      if (Directed != false) {
        size += 1 + 1;
      }
      if (from_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(From);
      }
      if (to_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(To);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Connection other) {
      if (other == null) {
        return;
      }
      if (other.ref_ != null) {
        if (ref_ == null) {
          ref_ = new global::Api.Ref();
        }
        Ref.MergeFrom(other.Ref);
      }
      if (other.attributes_ != null) {
        if (attributes_ == null) {
          attributes_ = new global::Google.Protobuf.WellKnownTypes.Struct();
        }
        Attributes.MergeFrom(other.Attributes);
      }
      if (other.Directed != false) {
        Directed = other.Directed;
      }
      if (other.from_ != null) {
        if (from_ == null) {
          from_ = new global::Api.Ref();
        }
        From.MergeFrom(other.From);
      }
      if (other.to_ != null) {
        if (to_ == null) {
          to_ = new global::Api.Ref();
        }
        To.MergeFrom(other.To);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (ref_ == null) {
              ref_ = new global::Api.Ref();
            }
            input.ReadMessage(ref_);
            break;
          }
          case 18: {
            if (attributes_ == null) {
              attributes_ = new global::Google.Protobuf.WellKnownTypes.Struct();
            }
            input.ReadMessage(attributes_);
            break;
          }
          case 24: {
            Directed = input.ReadBool();
            break;
          }
          case 34: {
            if (from_ == null) {
              from_ = new global::Api.Ref();
            }
            input.ReadMessage(from_);
            break;
          }
          case 42: {
            if (to_ == null) {
              to_ = new global::Api.Ref();
            }
            input.ReadMessage(to_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// ConnectionConstructor is used to create an Connection
  /// </summary>
  public sealed partial class ConnectionConstructor : pb::IMessage<ConnectionConstructor> {
    private static readonly pb::MessageParser<ConnectionConstructor> _parser = new pb::MessageParser<ConnectionConstructor>(() => new ConnectionConstructor());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConnectionConstructor> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.GraphikReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConnectionConstructor() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConnectionConstructor(ConnectionConstructor other) : this() {
      ref_ = other.ref_ != null ? other.ref_.Clone() : null;
      attributes_ = other.attributes_ != null ? other.attributes_.Clone() : null;
      directed_ = other.directed_;
      from_ = other.from_ != null ? other.from_.Clone() : null;
      to_ = other.to_ != null ? other.to_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConnectionConstructor Clone() {
      return new ConnectionConstructor(this);
    }

    /// <summary>Field number for the "ref" field.</summary>
    public const int RefFieldNumber = 1;
    private global::Api.RefConstructor ref_;
    /// <summary>
    /// ref is the ref to the new Connection. If an id isn't present, one will be generated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.RefConstructor Ref {
      get { return ref_; }
      set {
        ref_ = value;
      }
    }

    /// <summary>Field number for the "attributes" field.</summary>
    public const int AttributesFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Struct attributes_;
    /// <summary>
    /// attributes are k/v pairs
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Struct Attributes {
      get { return attributes_; }
      set {
        attributes_ = value;
      }
    }

    /// <summary>Field number for the "directed" field.</summary>
    public const int DirectedFieldNumber = 4;
    private bool directed_;
    /// <summary>
    /// directed is false if the connection is bi-directional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Directed {
      get { return directed_; }
      set {
        directed_ = value;
      }
    }

    /// <summary>Field number for the "from" field.</summary>
    public const int FromFieldNumber = 5;
    private global::Api.Ref from_;
    /// <summary>
    /// from is the doc ref that is the root of the connection
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.Ref From {
      get { return from_; }
      set {
        from_ = value;
      }
    }

    /// <summary>Field number for the "to" field.</summary>
    public const int ToFieldNumber = 6;
    private global::Api.Ref to_;
    /// <summary>
    /// to is the doc ref that is the destination of the connection
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.Ref To {
      get { return to_; }
      set {
        to_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConnectionConstructor);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConnectionConstructor other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Ref, other.Ref)) return false;
      if (!object.Equals(Attributes, other.Attributes)) return false;
      if (Directed != other.Directed) return false;
      if (!object.Equals(From, other.From)) return false;
      if (!object.Equals(To, other.To)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ref_ != null) hash ^= Ref.GetHashCode();
      if (attributes_ != null) hash ^= Attributes.GetHashCode();
      if (Directed != false) hash ^= Directed.GetHashCode();
      if (from_ != null) hash ^= From.GetHashCode();
      if (to_ != null) hash ^= To.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ref_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Ref);
      }
      if (attributes_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Attributes);
      }
      if (Directed != false) {
        output.WriteRawTag(32);
        output.WriteBool(Directed);
      }
      if (from_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(From);
      }
      if (to_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(To);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ref_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ref);
      }
      if (attributes_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Attributes);
      }
      if (Directed != false) {
        size += 1 + 1;
      }
      if (from_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(From);
      }
      if (to_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(To);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConnectionConstructor other) {
      if (other == null) {
        return;
      }
      if (other.ref_ != null) {
        if (ref_ == null) {
          ref_ = new global::Api.RefConstructor();
        }
        Ref.MergeFrom(other.Ref);
      }
      if (other.attributes_ != null) {
        if (attributes_ == null) {
          attributes_ = new global::Google.Protobuf.WellKnownTypes.Struct();
        }
        Attributes.MergeFrom(other.Attributes);
      }
      if (other.Directed != false) {
        Directed = other.Directed;
      }
      if (other.from_ != null) {
        if (from_ == null) {
          from_ = new global::Api.Ref();
        }
        From.MergeFrom(other.From);
      }
      if (other.to_ != null) {
        if (to_ == null) {
          to_ = new global::Api.Ref();
        }
        To.MergeFrom(other.To);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (ref_ == null) {
              ref_ = new global::Api.RefConstructor();
            }
            input.ReadMessage(ref_);
            break;
          }
          case 26: {
            if (attributes_ == null) {
              attributes_ = new global::Google.Protobuf.WellKnownTypes.Struct();
            }
            input.ReadMessage(attributes_);
            break;
          }
          case 32: {
            Directed = input.ReadBool();
            break;
          }
          case 42: {
            if (from_ == null) {
              from_ = new global::Api.Ref();
            }
            input.ReadMessage(from_);
            break;
          }
          case 50: {
            if (to_ == null) {
              to_ = new global::Api.Ref();
            }
            input.ReadMessage(to_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SearchConnectFilter : pb::IMessage<SearchConnectFilter> {
    private static readonly pb::MessageParser<SearchConnectFilter> _parser = new pb::MessageParser<SearchConnectFilter>(() => new SearchConnectFilter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SearchConnectFilter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.GraphikReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchConnectFilter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchConnectFilter(SearchConnectFilter other) : this() {
      filter_ = other.filter_ != null ? other.filter_.Clone() : null;
      gtype_ = other.gtype_;
      attributes_ = other.attributes_ != null ? other.attributes_.Clone() : null;
      directed_ = other.directed_;
      from_ = other.from_ != null ? other.from_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchConnectFilter Clone() {
      return new SearchConnectFilter(this);
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 1;
    private global::Api.Filter filter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.Filter Filter {
      get { return filter_; }
      set {
        filter_ = value;
      }
    }

    /// <summary>Field number for the "gtype" field.</summary>
    public const int GtypeFieldNumber = 2;
    private string gtype_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Gtype {
      get { return gtype_; }
      set {
        gtype_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "attributes" field.</summary>
    public const int AttributesFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Struct attributes_;
    /// <summary>
    /// attributes are k/v pairs
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Struct Attributes {
      get { return attributes_; }
      set {
        attributes_ = value;
      }
    }

    /// <summary>Field number for the "directed" field.</summary>
    public const int DirectedFieldNumber = 4;
    private bool directed_;
    /// <summary>
    /// directed is false if the connection is bi-directional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Directed {
      get { return directed_; }
      set {
        directed_ = value;
      }
    }

    /// <summary>Field number for the "from" field.</summary>
    public const int FromFieldNumber = 5;
    private global::Api.Ref from_;
    /// <summary>
    /// from is the doc ref that is the root of the connection
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.Ref From {
      get { return from_; }
      set {
        from_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SearchConnectFilter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SearchConnectFilter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Filter, other.Filter)) return false;
      if (Gtype != other.Gtype) return false;
      if (!object.Equals(Attributes, other.Attributes)) return false;
      if (Directed != other.Directed) return false;
      if (!object.Equals(From, other.From)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (filter_ != null) hash ^= Filter.GetHashCode();
      if (Gtype.Length != 0) hash ^= Gtype.GetHashCode();
      if (attributes_ != null) hash ^= Attributes.GetHashCode();
      if (Directed != false) hash ^= Directed.GetHashCode();
      if (from_ != null) hash ^= From.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (filter_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Filter);
      }
      if (Gtype.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Gtype);
      }
      if (attributes_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Attributes);
      }
      if (Directed != false) {
        output.WriteRawTag(32);
        output.WriteBool(Directed);
      }
      if (from_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(From);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (filter_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Filter);
      }
      if (Gtype.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Gtype);
      }
      if (attributes_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Attributes);
      }
      if (Directed != false) {
        size += 1 + 1;
      }
      if (from_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(From);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SearchConnectFilter other) {
      if (other == null) {
        return;
      }
      if (other.filter_ != null) {
        if (filter_ == null) {
          filter_ = new global::Api.Filter();
        }
        Filter.MergeFrom(other.Filter);
      }
      if (other.Gtype.Length != 0) {
        Gtype = other.Gtype;
      }
      if (other.attributes_ != null) {
        if (attributes_ == null) {
          attributes_ = new global::Google.Protobuf.WellKnownTypes.Struct();
        }
        Attributes.MergeFrom(other.Attributes);
      }
      if (other.Directed != false) {
        Directed = other.Directed;
      }
      if (other.from_ != null) {
        if (from_ == null) {
          from_ = new global::Api.Ref();
        }
        From.MergeFrom(other.From);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (filter_ == null) {
              filter_ = new global::Api.Filter();
            }
            input.ReadMessage(filter_);
            break;
          }
          case 18: {
            Gtype = input.ReadString();
            break;
          }
          case 26: {
            if (attributes_ == null) {
              attributes_ = new global::Google.Protobuf.WellKnownTypes.Struct();
            }
            input.ReadMessage(attributes_);
            break;
          }
          case 32: {
            Directed = input.ReadBool();
            break;
          }
          case 42: {
            if (from_ == null) {
              from_ = new global::Api.Ref();
            }
            input.ReadMessage(from_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SearchConnectMeFilter : pb::IMessage<SearchConnectMeFilter> {
    private static readonly pb::MessageParser<SearchConnectMeFilter> _parser = new pb::MessageParser<SearchConnectMeFilter>(() => new SearchConnectMeFilter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SearchConnectMeFilter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.GraphikReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchConnectMeFilter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchConnectMeFilter(SearchConnectMeFilter other) : this() {
      filter_ = other.filter_ != null ? other.filter_.Clone() : null;
      gtype_ = other.gtype_;
      attributes_ = other.attributes_ != null ? other.attributes_.Clone() : null;
      directed_ = other.directed_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchConnectMeFilter Clone() {
      return new SearchConnectMeFilter(this);
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 1;
    private global::Api.Filter filter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.Filter Filter {
      get { return filter_; }
      set {
        filter_ = value;
      }
    }

    /// <summary>Field number for the "gtype" field.</summary>
    public const int GtypeFieldNumber = 2;
    private string gtype_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Gtype {
      get { return gtype_; }
      set {
        gtype_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "attributes" field.</summary>
    public const int AttributesFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Struct attributes_;
    /// <summary>
    /// attributes are k/v pairs
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Struct Attributes {
      get { return attributes_; }
      set {
        attributes_ = value;
      }
    }

    /// <summary>Field number for the "directed" field.</summary>
    public const int DirectedFieldNumber = 4;
    private bool directed_;
    /// <summary>
    /// directed is false if the connection is bi-directional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Directed {
      get { return directed_; }
      set {
        directed_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SearchConnectMeFilter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SearchConnectMeFilter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Filter, other.Filter)) return false;
      if (Gtype != other.Gtype) return false;
      if (!object.Equals(Attributes, other.Attributes)) return false;
      if (Directed != other.Directed) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (filter_ != null) hash ^= Filter.GetHashCode();
      if (Gtype.Length != 0) hash ^= Gtype.GetHashCode();
      if (attributes_ != null) hash ^= Attributes.GetHashCode();
      if (Directed != false) hash ^= Directed.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (filter_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Filter);
      }
      if (Gtype.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Gtype);
      }
      if (attributes_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Attributes);
      }
      if (Directed != false) {
        output.WriteRawTag(32);
        output.WriteBool(Directed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (filter_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Filter);
      }
      if (Gtype.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Gtype);
      }
      if (attributes_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Attributes);
      }
      if (Directed != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SearchConnectMeFilter other) {
      if (other == null) {
        return;
      }
      if (other.filter_ != null) {
        if (filter_ == null) {
          filter_ = new global::Api.Filter();
        }
        Filter.MergeFrom(other.Filter);
      }
      if (other.Gtype.Length != 0) {
        Gtype = other.Gtype;
      }
      if (other.attributes_ != null) {
        if (attributes_ == null) {
          attributes_ = new global::Google.Protobuf.WellKnownTypes.Struct();
        }
        Attributes.MergeFrom(other.Attributes);
      }
      if (other.Directed != false) {
        Directed = other.Directed;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (filter_ == null) {
              filter_ = new global::Api.Filter();
            }
            input.ReadMessage(filter_);
            break;
          }
          case 18: {
            Gtype = input.ReadString();
            break;
          }
          case 26: {
            if (attributes_ == null) {
              attributes_ = new global::Google.Protobuf.WellKnownTypes.Struct();
            }
            input.ReadMessage(attributes_);
            break;
          }
          case 32: {
            Directed = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// ConnectionConstructors is an array of ConnectionConstructor
  /// </summary>
  public sealed partial class ConnectionConstructors : pb::IMessage<ConnectionConstructors> {
    private static readonly pb::MessageParser<ConnectionConstructors> _parser = new pb::MessageParser<ConnectionConstructors>(() => new ConnectionConstructors());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConnectionConstructors> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.GraphikReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConnectionConstructors() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConnectionConstructors(ConnectionConstructors other) : this() {
      connections_ = other.connections_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConnectionConstructors Clone() {
      return new ConnectionConstructors(this);
    }

    /// <summary>Field number for the "connections" field.</summary>
    public const int ConnectionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Api.ConnectionConstructor> _repeated_connections_codec
        = pb::FieldCodec.ForMessage(10, global::Api.ConnectionConstructor.Parser);
    private readonly pbc::RepeatedField<global::Api.ConnectionConstructor> connections_ = new pbc::RepeatedField<global::Api.ConnectionConstructor>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Api.ConnectionConstructor> Connections {
      get { return connections_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConnectionConstructors);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConnectionConstructors other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!connections_.Equals(other.connections_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= connections_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      connections_.WriteTo(output, _repeated_connections_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += connections_.CalculateSize(_repeated_connections_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConnectionConstructors other) {
      if (other == null) {
        return;
      }
      connections_.Add(other.connections_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            connections_.AddEntriesFrom(input, _repeated_connections_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Connections is an array of Connection
  /// </summary>
  public sealed partial class Connections : pb::IMessage<Connections> {
    private static readonly pb::MessageParser<Connections> _parser = new pb::MessageParser<Connections>(() => new Connections());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Connections> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.GraphikReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Connections() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Connections(Connections other) : this() {
      connections_ = other.connections_.Clone();
      seekNext_ = other.seekNext_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Connections Clone() {
      return new Connections(this);
    }

    /// <summary>Field number for the "connections" field.</summary>
    public const int Connections_FieldNumber = 1;
    private static readonly pb::FieldCodec<global::Api.Connection> _repeated_connections_codec
        = pb::FieldCodec.ForMessage(10, global::Api.Connection.Parser);
    private readonly pbc::RepeatedField<global::Api.Connection> connections_ = new pbc::RepeatedField<global::Api.Connection>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Api.Connection> Connections_ {
      get { return connections_; }
    }

    /// <summary>Field number for the "seek_next" field.</summary>
    public const int SeekNextFieldNumber = 2;
    private string seekNext_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SeekNext {
      get { return seekNext_; }
      set {
        seekNext_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Connections);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Connections other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!connections_.Equals(other.connections_)) return false;
      if (SeekNext != other.SeekNext) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= connections_.GetHashCode();
      if (SeekNext.Length != 0) hash ^= SeekNext.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      connections_.WriteTo(output, _repeated_connections_codec);
      if (SeekNext.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SeekNext);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += connections_.CalculateSize(_repeated_connections_codec);
      if (SeekNext.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SeekNext);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Connections other) {
      if (other == null) {
        return;
      }
      connections_.Add(other.connections_);
      if (other.SeekNext.Length != 0) {
        SeekNext = other.SeekNext;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            connections_.AddEntriesFrom(input, _repeated_connections_codec);
            break;
          }
          case 18: {
            SeekNext = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// ConnectFilter is used to fetch connections related to a single noted
  /// </summary>
  public sealed partial class ConnectFilter : pb::IMessage<ConnectFilter> {
    private static readonly pb::MessageParser<ConnectFilter> _parser = new pb::MessageParser<ConnectFilter>(() => new ConnectFilter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConnectFilter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.GraphikReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConnectFilter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConnectFilter(ConnectFilter other) : this() {
      docRef_ = other.docRef_ != null ? other.docRef_.Clone() : null;
      gtype_ = other.gtype_;
      expression_ = other.expression_;
      limit_ = other.limit_;
      sort_ = other.sort_;
      seek_ = other.seek_;
      reverse_ = other.reverse_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConnectFilter Clone() {
      return new ConnectFilter(this);
    }

    /// <summary>Field number for the "doc_ref" field.</summary>
    public const int DocRefFieldNumber = 1;
    private global::Api.Ref docRef_;
    /// <summary>
    /// doc_ref is the ref to the target doc. (validator.field) = {msg_exists : true}]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.Ref DocRef {
      get { return docRef_; }
      set {
        docRef_ = value;
      }
    }

    /// <summary>Field number for the "gtype" field.</summary>
    public const int GtypeFieldNumber = 2;
    private string gtype_ = "";
    /// <summary>
    /// gtype is the type of connections to return. (validator.field) = {regex : "^.{1,225}$"}
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Gtype {
      get { return gtype_; }
      set {
        gtype_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "expression" field.</summary>
    public const int ExpressionFieldNumber = 3;
    private string expression_ = "";
    /// <summary>
    /// expression is a CEL expression used to filter connections/modes
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Expression {
      get { return expression_; }
      set {
        expression_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 4;
    private ulong limit_;
    /// <summary>
    /// limit is the maximum number of items to return. (validator.field) = {int_gt : 0}
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    /// <summary>Field number for the "sort" field.</summary>
    public const int SortFieldNumber = 5;
    private string sort_ = "";
    /// <summary>
    /// custom sorting of the results. (validator.field) = {regex : "((^|, )(|ref.gid|ref.gtype|^attributes.(.*)))+$"}
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Sort {
      get { return sort_; }
      set {
        sort_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "seek" field.</summary>
    public const int SeekFieldNumber = 6;
    private string seek_ = "";
    /// <summary>
    /// seek to a specific key for pagination
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Seek {
      get { return seek_; }
      set {
        seek_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "reverse" field.</summary>
    public const int ReverseFieldNumber = 7;
    private bool reverse_;
    /// <summary>
    /// reverse the results
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Reverse {
      get { return reverse_; }
      set {
        reverse_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConnectFilter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConnectFilter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DocRef, other.DocRef)) return false;
      if (Gtype != other.Gtype) return false;
      if (Expression != other.Expression) return false;
      if (Limit != other.Limit) return false;
      if (Sort != other.Sort) return false;
      if (Seek != other.Seek) return false;
      if (Reverse != other.Reverse) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (docRef_ != null) hash ^= DocRef.GetHashCode();
      if (Gtype.Length != 0) hash ^= Gtype.GetHashCode();
      if (Expression.Length != 0) hash ^= Expression.GetHashCode();
      if (Limit != 0UL) hash ^= Limit.GetHashCode();
      if (Sort.Length != 0) hash ^= Sort.GetHashCode();
      if (Seek.Length != 0) hash ^= Seek.GetHashCode();
      if (Reverse != false) hash ^= Reverse.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (docRef_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DocRef);
      }
      if (Gtype.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Gtype);
      }
      if (Expression.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Expression);
      }
      if (Limit != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(Limit);
      }
      if (Sort.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Sort);
      }
      if (Seek.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Seek);
      }
      if (Reverse != false) {
        output.WriteRawTag(56);
        output.WriteBool(Reverse);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (docRef_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DocRef);
      }
      if (Gtype.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Gtype);
      }
      if (Expression.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Expression);
      }
      if (Limit != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Limit);
      }
      if (Sort.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Sort);
      }
      if (Seek.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Seek);
      }
      if (Reverse != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConnectFilter other) {
      if (other == null) {
        return;
      }
      if (other.docRef_ != null) {
        if (docRef_ == null) {
          docRef_ = new global::Api.Ref();
        }
        DocRef.MergeFrom(other.DocRef);
      }
      if (other.Gtype.Length != 0) {
        Gtype = other.Gtype;
      }
      if (other.Expression.Length != 0) {
        Expression = other.Expression;
      }
      if (other.Limit != 0UL) {
        Limit = other.Limit;
      }
      if (other.Sort.Length != 0) {
        Sort = other.Sort;
      }
      if (other.Seek.Length != 0) {
        Seek = other.Seek;
      }
      if (other.Reverse != false) {
        Reverse = other.Reverse;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (docRef_ == null) {
              docRef_ = new global::Api.Ref();
            }
            input.ReadMessage(docRef_);
            break;
          }
          case 18: {
            Gtype = input.ReadString();
            break;
          }
          case 26: {
            Expression = input.ReadString();
            break;
          }
          case 32: {
            Limit = input.ReadUInt64();
            break;
          }
          case 42: {
            Sort = input.ReadString();
            break;
          }
          case 50: {
            Seek = input.ReadString();
            break;
          }
          case 56: {
            Reverse = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Filter is a generic filter using Common Expression Language
  /// </summary>
  public sealed partial class Filter : pb::IMessage<Filter> {
    private static readonly pb::MessageParser<Filter> _parser = new pb::MessageParser<Filter>(() => new Filter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Filter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.GraphikReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Filter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Filter(Filter other) : this() {
      gtype_ = other.gtype_;
      expression_ = other.expression_;
      limit_ = other.limit_;
      sort_ = other.sort_;
      seek_ = other.seek_;
      reverse_ = other.reverse_;
      index_ = other.index_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Filter Clone() {
      return new Filter(this);
    }

    /// <summary>Field number for the "gtype" field.</summary>
    public const int GtypeFieldNumber = 1;
    private string gtype_ = "";
    /// <summary>
    /// gtype is the doc/connection type to be filtered
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Gtype {
      get { return gtype_; }
      set {
        gtype_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "expression" field.</summary>
    public const int ExpressionFieldNumber = 2;
    private string expression_ = "";
    /// <summary>
    /// expression is a CEL expression used to filter connections/modes
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Expression {
      get { return expression_; }
      set {
        expression_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 3;
    private ulong limit_;
    /// <summary>
    /// limit is the maximum number of items to return
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    /// <summary>Field number for the "sort" field.</summary>
    public const int SortFieldNumber = 4;
    private string sort_ = "";
    /// <summary>
    /// custom sorting of the results.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Sort {
      get { return sort_; }
      set {
        sort_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "seek" field.</summary>
    public const int SeekFieldNumber = 5;
    private string seek_ = "";
    /// <summary>
    /// seek to a specific key for pagination
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Seek {
      get { return seek_; }
      set {
        seek_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "reverse" field.</summary>
    public const int ReverseFieldNumber = 6;
    private bool reverse_;
    /// <summary>
    /// reverse the results
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Reverse {
      get { return reverse_; }
      set {
        reverse_ = value;
      }
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 7;
    private string index_ = "";
    /// <summary>
    /// search in a specific index
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Index {
      get { return index_; }
      set {
        index_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Filter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Filter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Gtype != other.Gtype) return false;
      if (Expression != other.Expression) return false;
      if (Limit != other.Limit) return false;
      if (Sort != other.Sort) return false;
      if (Seek != other.Seek) return false;
      if (Reverse != other.Reverse) return false;
      if (Index != other.Index) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Gtype.Length != 0) hash ^= Gtype.GetHashCode();
      if (Expression.Length != 0) hash ^= Expression.GetHashCode();
      if (Limit != 0UL) hash ^= Limit.GetHashCode();
      if (Sort.Length != 0) hash ^= Sort.GetHashCode();
      if (Seek.Length != 0) hash ^= Seek.GetHashCode();
      if (Reverse != false) hash ^= Reverse.GetHashCode();
      if (Index.Length != 0) hash ^= Index.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Gtype.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Gtype);
      }
      if (Expression.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Expression);
      }
      if (Limit != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(Limit);
      }
      if (Sort.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Sort);
      }
      if (Seek.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Seek);
      }
      if (Reverse != false) {
        output.WriteRawTag(48);
        output.WriteBool(Reverse);
      }
      if (Index.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Index);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Gtype.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Gtype);
      }
      if (Expression.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Expression);
      }
      if (Limit != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Limit);
      }
      if (Sort.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Sort);
      }
      if (Seek.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Seek);
      }
      if (Reverse != false) {
        size += 1 + 1;
      }
      if (Index.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Index);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Filter other) {
      if (other == null) {
        return;
      }
      if (other.Gtype.Length != 0) {
        Gtype = other.Gtype;
      }
      if (other.Expression.Length != 0) {
        Expression = other.Expression;
      }
      if (other.Limit != 0UL) {
        Limit = other.Limit;
      }
      if (other.Sort.Length != 0) {
        Sort = other.Sort;
      }
      if (other.Seek.Length != 0) {
        Seek = other.Seek;
      }
      if (other.Reverse != false) {
        Reverse = other.Reverse;
      }
      if (other.Index.Length != 0) {
        Index = other.Index;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Gtype = input.ReadString();
            break;
          }
          case 18: {
            Expression = input.ReadString();
            break;
          }
          case 24: {
            Limit = input.ReadUInt64();
            break;
          }
          case 34: {
            Sort = input.ReadString();
            break;
          }
          case 42: {
            Seek = input.ReadString();
            break;
          }
          case 48: {
            Reverse = input.ReadBool();
            break;
          }
          case 58: {
            Index = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AggFilter : pb::IMessage<AggFilter> {
    private static readonly pb::MessageParser<AggFilter> _parser = new pb::MessageParser<AggFilter>(() => new AggFilter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AggFilter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.GraphikReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AggFilter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AggFilter(AggFilter other) : this() {
      filter_ = other.filter_ != null ? other.filter_.Clone() : null;
      aggregate_ = other.aggregate_;
      field_ = other.field_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AggFilter Clone() {
      return new AggFilter(this);
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 1;
    private global::Api.Filter filter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.Filter Filter {
      get { return filter_; }
      set {
        filter_ = value;
      }
    }

    /// <summary>Field number for the "aggregate" field.</summary>
    public const int AggregateFieldNumber = 2;
    private global::Api.Aggregate aggregate_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.Aggregate Aggregate {
      get { return aggregate_; }
      set {
        aggregate_ = value;
      }
    }

    /// <summary>Field number for the "field" field.</summary>
    public const int FieldFieldNumber = 3;
    private string field_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Field {
      get { return field_; }
      set {
        field_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AggFilter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AggFilter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Filter, other.Filter)) return false;
      if (Aggregate != other.Aggregate) return false;
      if (Field != other.Field) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (filter_ != null) hash ^= Filter.GetHashCode();
      if (Aggregate != 0) hash ^= Aggregate.GetHashCode();
      if (Field.Length != 0) hash ^= Field.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (filter_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Filter);
      }
      if (Aggregate != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Aggregate);
      }
      if (Field.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Field);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (filter_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Filter);
      }
      if (Aggregate != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Aggregate);
      }
      if (Field.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Field);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AggFilter other) {
      if (other == null) {
        return;
      }
      if (other.filter_ != null) {
        if (filter_ == null) {
          filter_ = new global::Api.Filter();
        }
        Filter.MergeFrom(other.Filter);
      }
      if (other.Aggregate != 0) {
        Aggregate = other.Aggregate;
      }
      if (other.Field.Length != 0) {
        Field = other.Field;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (filter_ == null) {
              filter_ = new global::Api.Filter();
            }
            input.ReadMessage(filter_);
            break;
          }
          case 16: {
            aggregate_ = (global::Api.Aggregate) input.ReadEnum();
            break;
          }
          case 26: {
            Field = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TraverseFilter : pb::IMessage<TraverseFilter> {
    private static readonly pb::MessageParser<TraverseFilter> _parser = new pb::MessageParser<TraverseFilter>(() => new TraverseFilter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TraverseFilter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.GraphikReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TraverseFilter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TraverseFilter(TraverseFilter other) : this() {
      root_ = other.root_ != null ? other.root_.Clone() : null;
      docExpression_ = other.docExpression_;
      connectionExpression_ = other.connectionExpression_;
      limit_ = other.limit_;
      sort_ = other.sort_;
      reverse_ = other.reverse_;
      algorithm_ = other.algorithm_;
      maxDepth_ = other.maxDepth_;
      maxHops_ = other.maxHops_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TraverseFilter Clone() {
      return new TraverseFilter(this);
    }

    /// <summary>Field number for the "root" field.</summary>
    public const int RootFieldNumber = 1;
    private global::Api.Ref root_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.Ref Root {
      get { return root_; }
      set {
        root_ = value;
      }
    }

    /// <summary>Field number for the "doc_expression" field.</summary>
    public const int DocExpressionFieldNumber = 2;
    private string docExpression_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DocExpression {
      get { return docExpression_; }
      set {
        docExpression_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "connection_expression" field.</summary>
    public const int ConnectionExpressionFieldNumber = 3;
    private string connectionExpression_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConnectionExpression {
      get { return connectionExpression_; }
      set {
        connectionExpression_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 4;
    private ulong limit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    /// <summary>Field number for the "sort" field.</summary>
    public const int SortFieldNumber = 5;
    private string sort_ = "";
    /// <summary>
    /// custom sorting of the results. (validator.field) = {regex : "((^|, )(|ref.gid|ref.gtype|^attributes.(.*)))+$"}
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Sort {
      get { return sort_; }
      set {
        sort_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "reverse" field.</summary>
    public const int ReverseFieldNumber = 6;
    private bool reverse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Reverse {
      get { return reverse_; }
      set {
        reverse_ = value;
      }
    }

    /// <summary>Field number for the "algorithm" field.</summary>
    public const int AlgorithmFieldNumber = 7;
    private global::Api.Algorithm algorithm_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.Algorithm Algorithm {
      get { return algorithm_; }
      set {
        algorithm_ = value;
      }
    }

    /// <summary>Field number for the "max_depth" field.</summary>
    public const int MaxDepthFieldNumber = 8;
    private ulong maxDepth_;
    /// <summary>
    /// maximum degree/depth of nodes to be visited during traversal
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong MaxDepth {
      get { return maxDepth_; }
      set {
        maxDepth_ = value;
      }
    }

    /// <summary>Field number for the "max_hops" field.</summary>
    public const int MaxHopsFieldNumber = 9;
    private ulong maxHops_;
    /// <summary>
    /// maximum number of nodes to be visited during traversal
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong MaxHops {
      get { return maxHops_; }
      set {
        maxHops_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TraverseFilter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TraverseFilter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Root, other.Root)) return false;
      if (DocExpression != other.DocExpression) return false;
      if (ConnectionExpression != other.ConnectionExpression) return false;
      if (Limit != other.Limit) return false;
      if (Sort != other.Sort) return false;
      if (Reverse != other.Reverse) return false;
      if (Algorithm != other.Algorithm) return false;
      if (MaxDepth != other.MaxDepth) return false;
      if (MaxHops != other.MaxHops) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (root_ != null) hash ^= Root.GetHashCode();
      if (DocExpression.Length != 0) hash ^= DocExpression.GetHashCode();
      if (ConnectionExpression.Length != 0) hash ^= ConnectionExpression.GetHashCode();
      if (Limit != 0UL) hash ^= Limit.GetHashCode();
      if (Sort.Length != 0) hash ^= Sort.GetHashCode();
      if (Reverse != false) hash ^= Reverse.GetHashCode();
      if (Algorithm != 0) hash ^= Algorithm.GetHashCode();
      if (MaxDepth != 0UL) hash ^= MaxDepth.GetHashCode();
      if (MaxHops != 0UL) hash ^= MaxHops.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (root_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Root);
      }
      if (DocExpression.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DocExpression);
      }
      if (ConnectionExpression.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ConnectionExpression);
      }
      if (Limit != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(Limit);
      }
      if (Sort.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Sort);
      }
      if (Reverse != false) {
        output.WriteRawTag(48);
        output.WriteBool(Reverse);
      }
      if (Algorithm != 0) {
        output.WriteRawTag(56);
        output.WriteEnum((int) Algorithm);
      }
      if (MaxDepth != 0UL) {
        output.WriteRawTag(64);
        output.WriteUInt64(MaxDepth);
      }
      if (MaxHops != 0UL) {
        output.WriteRawTag(72);
        output.WriteUInt64(MaxHops);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (root_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Root);
      }
      if (DocExpression.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DocExpression);
      }
      if (ConnectionExpression.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConnectionExpression);
      }
      if (Limit != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Limit);
      }
      if (Sort.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Sort);
      }
      if (Reverse != false) {
        size += 1 + 1;
      }
      if (Algorithm != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Algorithm);
      }
      if (MaxDepth != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MaxDepth);
      }
      if (MaxHops != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MaxHops);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TraverseFilter other) {
      if (other == null) {
        return;
      }
      if (other.root_ != null) {
        if (root_ == null) {
          root_ = new global::Api.Ref();
        }
        Root.MergeFrom(other.Root);
      }
      if (other.DocExpression.Length != 0) {
        DocExpression = other.DocExpression;
      }
      if (other.ConnectionExpression.Length != 0) {
        ConnectionExpression = other.ConnectionExpression;
      }
      if (other.Limit != 0UL) {
        Limit = other.Limit;
      }
      if (other.Sort.Length != 0) {
        Sort = other.Sort;
      }
      if (other.Reverse != false) {
        Reverse = other.Reverse;
      }
      if (other.Algorithm != 0) {
        Algorithm = other.Algorithm;
      }
      if (other.MaxDepth != 0UL) {
        MaxDepth = other.MaxDepth;
      }
      if (other.MaxHops != 0UL) {
        MaxHops = other.MaxHops;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (root_ == null) {
              root_ = new global::Api.Ref();
            }
            input.ReadMessage(root_);
            break;
          }
          case 18: {
            DocExpression = input.ReadString();
            break;
          }
          case 26: {
            ConnectionExpression = input.ReadString();
            break;
          }
          case 32: {
            Limit = input.ReadUInt64();
            break;
          }
          case 42: {
            Sort = input.ReadString();
            break;
          }
          case 48: {
            Reverse = input.ReadBool();
            break;
          }
          case 56: {
            algorithm_ = (global::Api.Algorithm) input.ReadEnum();
            break;
          }
          case 64: {
            MaxDepth = input.ReadUInt64();
            break;
          }
          case 72: {
            MaxHops = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TraverseMeFilter : pb::IMessage<TraverseMeFilter> {
    private static readonly pb::MessageParser<TraverseMeFilter> _parser = new pb::MessageParser<TraverseMeFilter>(() => new TraverseMeFilter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TraverseMeFilter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.GraphikReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TraverseMeFilter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TraverseMeFilter(TraverseMeFilter other) : this() {
      docExpression_ = other.docExpression_;
      connectionExpression_ = other.connectionExpression_;
      limit_ = other.limit_;
      sort_ = other.sort_;
      reverse_ = other.reverse_;
      algorithm_ = other.algorithm_;
      maxDepth_ = other.maxDepth_;
      maxHops_ = other.maxHops_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TraverseMeFilter Clone() {
      return new TraverseMeFilter(this);
    }

    /// <summary>Field number for the "doc_expression" field.</summary>
    public const int DocExpressionFieldNumber = 1;
    private string docExpression_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DocExpression {
      get { return docExpression_; }
      set {
        docExpression_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "connection_expression" field.</summary>
    public const int ConnectionExpressionFieldNumber = 2;
    private string connectionExpression_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConnectionExpression {
      get { return connectionExpression_; }
      set {
        connectionExpression_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 3;
    private ulong limit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    /// <summary>Field number for the "sort" field.</summary>
    public const int SortFieldNumber = 4;
    private string sort_ = "";
    /// <summary>
    /// custom sorting of the results. (validator.field) = {regex : "((^|, )(|ref.gid|ref.gtype|^attributes.(.*)))+$"}
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Sort {
      get { return sort_; }
      set {
        sort_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "reverse" field.</summary>
    public const int ReverseFieldNumber = 5;
    private bool reverse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Reverse {
      get { return reverse_; }
      set {
        reverse_ = value;
      }
    }

    /// <summary>Field number for the "algorithm" field.</summary>
    public const int AlgorithmFieldNumber = 6;
    private global::Api.Algorithm algorithm_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.Algorithm Algorithm {
      get { return algorithm_; }
      set {
        algorithm_ = value;
      }
    }

    /// <summary>Field number for the "max_depth" field.</summary>
    public const int MaxDepthFieldNumber = 7;
    private ulong maxDepth_;
    /// <summary>
    /// maximum degree/depth of nodes to be visited during traversal
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong MaxDepth {
      get { return maxDepth_; }
      set {
        maxDepth_ = value;
      }
    }

    /// <summary>Field number for the "max_hops" field.</summary>
    public const int MaxHopsFieldNumber = 8;
    private ulong maxHops_;
    /// <summary>
    /// maximum number of nodes to be visited during traversal
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong MaxHops {
      get { return maxHops_; }
      set {
        maxHops_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TraverseMeFilter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TraverseMeFilter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DocExpression != other.DocExpression) return false;
      if (ConnectionExpression != other.ConnectionExpression) return false;
      if (Limit != other.Limit) return false;
      if (Sort != other.Sort) return false;
      if (Reverse != other.Reverse) return false;
      if (Algorithm != other.Algorithm) return false;
      if (MaxDepth != other.MaxDepth) return false;
      if (MaxHops != other.MaxHops) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DocExpression.Length != 0) hash ^= DocExpression.GetHashCode();
      if (ConnectionExpression.Length != 0) hash ^= ConnectionExpression.GetHashCode();
      if (Limit != 0UL) hash ^= Limit.GetHashCode();
      if (Sort.Length != 0) hash ^= Sort.GetHashCode();
      if (Reverse != false) hash ^= Reverse.GetHashCode();
      if (Algorithm != 0) hash ^= Algorithm.GetHashCode();
      if (MaxDepth != 0UL) hash ^= MaxDepth.GetHashCode();
      if (MaxHops != 0UL) hash ^= MaxHops.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DocExpression.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DocExpression);
      }
      if (ConnectionExpression.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ConnectionExpression);
      }
      if (Limit != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(Limit);
      }
      if (Sort.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Sort);
      }
      if (Reverse != false) {
        output.WriteRawTag(40);
        output.WriteBool(Reverse);
      }
      if (Algorithm != 0) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Algorithm);
      }
      if (MaxDepth != 0UL) {
        output.WriteRawTag(56);
        output.WriteUInt64(MaxDepth);
      }
      if (MaxHops != 0UL) {
        output.WriteRawTag(64);
        output.WriteUInt64(MaxHops);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DocExpression.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DocExpression);
      }
      if (ConnectionExpression.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConnectionExpression);
      }
      if (Limit != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Limit);
      }
      if (Sort.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Sort);
      }
      if (Reverse != false) {
        size += 1 + 1;
      }
      if (Algorithm != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Algorithm);
      }
      if (MaxDepth != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MaxDepth);
      }
      if (MaxHops != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MaxHops);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TraverseMeFilter other) {
      if (other == null) {
        return;
      }
      if (other.DocExpression.Length != 0) {
        DocExpression = other.DocExpression;
      }
      if (other.ConnectionExpression.Length != 0) {
        ConnectionExpression = other.ConnectionExpression;
      }
      if (other.Limit != 0UL) {
        Limit = other.Limit;
      }
      if (other.Sort.Length != 0) {
        Sort = other.Sort;
      }
      if (other.Reverse != false) {
        Reverse = other.Reverse;
      }
      if (other.Algorithm != 0) {
        Algorithm = other.Algorithm;
      }
      if (other.MaxDepth != 0UL) {
        MaxDepth = other.MaxDepth;
      }
      if (other.MaxHops != 0UL) {
        MaxHops = other.MaxHops;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DocExpression = input.ReadString();
            break;
          }
          case 18: {
            ConnectionExpression = input.ReadString();
            break;
          }
          case 24: {
            Limit = input.ReadUInt64();
            break;
          }
          case 34: {
            Sort = input.ReadString();
            break;
          }
          case 40: {
            Reverse = input.ReadBool();
            break;
          }
          case 48: {
            algorithm_ = (global::Api.Algorithm) input.ReadEnum();
            break;
          }
          case 56: {
            MaxDepth = input.ReadUInt64();
            break;
          }
          case 64: {
            MaxHops = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class IndexConstructor : pb::IMessage<IndexConstructor> {
    private static readonly pb::MessageParser<IndexConstructor> _parser = new pb::MessageParser<IndexConstructor>(() => new IndexConstructor());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IndexConstructor> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.GraphikReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IndexConstructor() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IndexConstructor(IndexConstructor other) : this() {
      name_ = other.name_;
      gtype_ = other.gtype_;
      expression_ = other.expression_;
      docs_ = other.docs_;
      connections_ = other.connections_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IndexConstructor Clone() {
      return new IndexConstructor(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gtype" field.</summary>
    public const int GtypeFieldNumber = 3;
    private string gtype_ = "";
    /// <summary>
    /// gtype is the doc/connection type to be filtered
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Gtype {
      get { return gtype_; }
      set {
        gtype_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "expression" field.</summary>
    public const int ExpressionFieldNumber = 4;
    private string expression_ = "";
    /// <summary>
    /// expression is a CEL expression used to filter connections/modes
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Expression {
      get { return expression_; }
      set {
        expression_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "docs" field.</summary>
    public const int DocsFieldNumber = 6;
    private bool docs_;
    /// <summary>
    /// if docs is true, this index will be applied to documents. Either docs or connections may be true, but not both.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Docs {
      get { return docs_; }
      set {
        docs_ = value;
      }
    }

    /// <summary>Field number for the "connections" field.</summary>
    public const int ConnectionsFieldNumber = 7;
    private bool connections_;
    /// <summary>
    /// if docs is true, this index will be applied to connections. Either docs or connections may be true, but not both.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Connections {
      get { return connections_; }
      set {
        connections_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IndexConstructor);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IndexConstructor other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Gtype != other.Gtype) return false;
      if (Expression != other.Expression) return false;
      if (Docs != other.Docs) return false;
      if (Connections != other.Connections) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Gtype.Length != 0) hash ^= Gtype.GetHashCode();
      if (Expression.Length != 0) hash ^= Expression.GetHashCode();
      if (Docs != false) hash ^= Docs.GetHashCode();
      if (Connections != false) hash ^= Connections.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Gtype.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Gtype);
      }
      if (Expression.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Expression);
      }
      if (Docs != false) {
        output.WriteRawTag(48);
        output.WriteBool(Docs);
      }
      if (Connections != false) {
        output.WriteRawTag(56);
        output.WriteBool(Connections);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Gtype.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Gtype);
      }
      if (Expression.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Expression);
      }
      if (Docs != false) {
        size += 1 + 1;
      }
      if (Connections != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IndexConstructor other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Gtype.Length != 0) {
        Gtype = other.Gtype;
      }
      if (other.Expression.Length != 0) {
        Expression = other.Expression;
      }
      if (other.Docs != false) {
        Docs = other.Docs;
      }
      if (other.Connections != false) {
        Connections = other.Connections;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Gtype = input.ReadString();
            break;
          }
          case 34: {
            Expression = input.ReadString();
            break;
          }
          case 48: {
            Docs = input.ReadBool();
            break;
          }
          case 56: {
            Connections = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AuthTarget : pb::IMessage<AuthTarget> {
    private static readonly pb::MessageParser<AuthTarget> _parser = new pb::MessageParser<AuthTarget>(() => new AuthTarget());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AuthTarget> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.GraphikReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthTarget() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthTarget(AuthTarget other) : this() {
      user_ = other.user_ != null ? other.user_.Clone() : null;
      target_ = other.target_ != null ? other.target_.Clone() : null;
      peer_ = other.peer_;
      headers_ = other.headers_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthTarget Clone() {
      return new AuthTarget(this);
    }

    /// <summary>Field number for the "user" field.</summary>
    public const int UserFieldNumber = 1;
    private global::Api.Doc user_;
    /// <summary>
    /// user is the user making the request
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.Doc User {
      get { return user_; }
      set {
        user_ = value;
      }
    }

    /// <summary>Field number for the "target" field.</summary>
    public const int TargetFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Struct target_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Struct Target {
      get { return target_; }
      set {
        target_ = value;
      }
    }

    /// <summary>Field number for the "peer" field.</summary>
    public const int PeerFieldNumber = 3;
    private string peer_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Peer {
      get { return peer_; }
      set {
        peer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "headers" field.</summary>
    public const int HeadersFieldNumber = 4;
    private static readonly pbc::MapField<string, string>.Codec _map_headers_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 34);
    private readonly pbc::MapField<string, string> headers_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Headers {
      get { return headers_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AuthTarget);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AuthTarget other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(User, other.User)) return false;
      if (!object.Equals(Target, other.Target)) return false;
      if (Peer != other.Peer) return false;
      if (!Headers.Equals(other.Headers)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (user_ != null) hash ^= User.GetHashCode();
      if (target_ != null) hash ^= Target.GetHashCode();
      if (Peer.Length != 0) hash ^= Peer.GetHashCode();
      hash ^= Headers.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (user_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(User);
      }
      if (target_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Target);
      }
      if (Peer.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Peer);
      }
      headers_.WriteTo(output, _map_headers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (user_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
      }
      if (target_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Target);
      }
      if (Peer.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Peer);
      }
      size += headers_.CalculateSize(_map_headers_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AuthTarget other) {
      if (other == null) {
        return;
      }
      if (other.user_ != null) {
        if (user_ == null) {
          user_ = new global::Api.Doc();
        }
        User.MergeFrom(other.User);
      }
      if (other.target_ != null) {
        if (target_ == null) {
          target_ = new global::Google.Protobuf.WellKnownTypes.Struct();
        }
        Target.MergeFrom(other.Target);
      }
      if (other.Peer.Length != 0) {
        Peer = other.Peer;
      }
      headers_.Add(other.headers_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (user_ == null) {
              user_ = new global::Api.Doc();
            }
            input.ReadMessage(user_);
            break;
          }
          case 18: {
            if (target_ == null) {
              target_ = new global::Google.Protobuf.WellKnownTypes.Struct();
            }
            input.ReadMessage(target_);
            break;
          }
          case 26: {
            Peer = input.ReadString();
            break;
          }
          case 34: {
            headers_.AddEntriesFrom(input, _map_headers_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Authorizer : pb::IMessage<Authorizer> {
    private static readonly pb::MessageParser<Authorizer> _parser = new pb::MessageParser<Authorizer>(() => new Authorizer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Authorizer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.GraphikReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Authorizer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Authorizer(Authorizer other) : this() {
      name_ = other.name_;
      method_ = other.method_;
      expression_ = other.expression_;
      targetRequests_ = other.targetRequests_;
      targetResponses_ = other.targetResponses_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Authorizer Clone() {
      return new Authorizer(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// name is the unique name of the authorizer
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "method" field.</summary>
    public const int MethodFieldNumber = 2;
    private string method_ = "";
    /// <summary>
    /// method is the rpc method that will invoke the authorizer
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Method {
      get { return method_; }
      set {
        method_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "expression" field.</summary>
    public const int ExpressionFieldNumber = 3;
    private string expression_ = "";
    /// <summary>
    /// expression is the boolean CEL expression that evaluates either the request or response body
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Expression {
      get { return expression_; }
      set {
        expression_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "target_requests" field.</summary>
    public const int TargetRequestsFieldNumber = 4;
    private bool targetRequests_;
    /// <summary>
    /// target_responses sets the authorizer to evaluate request bodies
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool TargetRequests {
      get { return targetRequests_; }
      set {
        targetRequests_ = value;
      }
    }

    /// <summary>Field number for the "target_responses" field.</summary>
    public const int TargetResponsesFieldNumber = 5;
    private bool targetResponses_;
    /// <summary>
    /// target_responses sets the authorizer to evaluate response bodies
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool TargetResponses {
      get { return targetResponses_; }
      set {
        targetResponses_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Authorizer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Authorizer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Method != other.Method) return false;
      if (Expression != other.Expression) return false;
      if (TargetRequests != other.TargetRequests) return false;
      if (TargetResponses != other.TargetResponses) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Method.Length != 0) hash ^= Method.GetHashCode();
      if (Expression.Length != 0) hash ^= Expression.GetHashCode();
      if (TargetRequests != false) hash ^= TargetRequests.GetHashCode();
      if (TargetResponses != false) hash ^= TargetResponses.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Method.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Method);
      }
      if (Expression.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Expression);
      }
      if (TargetRequests != false) {
        output.WriteRawTag(32);
        output.WriteBool(TargetRequests);
      }
      if (TargetResponses != false) {
        output.WriteRawTag(40);
        output.WriteBool(TargetResponses);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Method.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Method);
      }
      if (Expression.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Expression);
      }
      if (TargetRequests != false) {
        size += 1 + 1;
      }
      if (TargetResponses != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Authorizer other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Method.Length != 0) {
        Method = other.Method;
      }
      if (other.Expression.Length != 0) {
        Expression = other.Expression;
      }
      if (other.TargetRequests != false) {
        TargetRequests = other.TargetRequests;
      }
      if (other.TargetResponses != false) {
        TargetResponses = other.TargetResponses;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Method = input.ReadString();
            break;
          }
          case 26: {
            Expression = input.ReadString();
            break;
          }
          case 32: {
            TargetRequests = input.ReadBool();
            break;
          }
          case 40: {
            TargetResponses = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Authorizers : pb::IMessage<Authorizers> {
    private static readonly pb::MessageParser<Authorizers> _parser = new pb::MessageParser<Authorizers>(() => new Authorizers());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Authorizers> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.GraphikReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Authorizers() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Authorizers(Authorizers other) : this() {
      authorizers_ = other.authorizers_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Authorizers Clone() {
      return new Authorizers(this);
    }

    /// <summary>Field number for the "authorizers" field.</summary>
    public const int Authorizers_FieldNumber = 1;
    private static readonly pb::FieldCodec<global::Api.Authorizer> _repeated_authorizers_codec
        = pb::FieldCodec.ForMessage(10, global::Api.Authorizer.Parser);
    private readonly pbc::RepeatedField<global::Api.Authorizer> authorizers_ = new pbc::RepeatedField<global::Api.Authorizer>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Api.Authorizer> Authorizers_ {
      get { return authorizers_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Authorizers);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Authorizers other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!authorizers_.Equals(other.authorizers_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= authorizers_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      authorizers_.WriteTo(output, _repeated_authorizers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += authorizers_.CalculateSize(_repeated_authorizers_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Authorizers other) {
      if (other == null) {
        return;
      }
      authorizers_.Add(other.authorizers_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            authorizers_.AddEntriesFrom(input, _repeated_authorizers_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TypeValidator : pb::IMessage<TypeValidator> {
    private static readonly pb::MessageParser<TypeValidator> _parser = new pb::MessageParser<TypeValidator>(() => new TypeValidator());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TypeValidator> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.GraphikReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypeValidator() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypeValidator(TypeValidator other) : this() {
      name_ = other.name_;
      gtype_ = other.gtype_;
      expression_ = other.expression_;
      targetDocs_ = other.targetDocs_;
      targetConnections_ = other.targetConnections_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypeValidator Clone() {
      return new TypeValidator(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gtype" field.</summary>
    public const int GtypeFieldNumber = 2;
    private string gtype_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Gtype {
      get { return gtype_; }
      set {
        gtype_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "expression" field.</summary>
    public const int ExpressionFieldNumber = 3;
    private string expression_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Expression {
      get { return expression_; }
      set {
        expression_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "target_docs" field.</summary>
    public const int TargetDocsFieldNumber = 4;
    private bool targetDocs_;
    /// <summary>
    /// if target_docs is true, this validator will be applied to documents.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool TargetDocs {
      get { return targetDocs_; }
      set {
        targetDocs_ = value;
      }
    }

    /// <summary>Field number for the "target_connections" field.</summary>
    public const int TargetConnectionsFieldNumber = 5;
    private bool targetConnections_;
    /// <summary>
    /// if target_connections is true, this validator will be applied to connections.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool TargetConnections {
      get { return targetConnections_; }
      set {
        targetConnections_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TypeValidator);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TypeValidator other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Gtype != other.Gtype) return false;
      if (Expression != other.Expression) return false;
      if (TargetDocs != other.TargetDocs) return false;
      if (TargetConnections != other.TargetConnections) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Gtype.Length != 0) hash ^= Gtype.GetHashCode();
      if (Expression.Length != 0) hash ^= Expression.GetHashCode();
      if (TargetDocs != false) hash ^= TargetDocs.GetHashCode();
      if (TargetConnections != false) hash ^= TargetConnections.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Gtype.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Gtype);
      }
      if (Expression.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Expression);
      }
      if (TargetDocs != false) {
        output.WriteRawTag(32);
        output.WriteBool(TargetDocs);
      }
      if (TargetConnections != false) {
        output.WriteRawTag(40);
        output.WriteBool(TargetConnections);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Gtype.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Gtype);
      }
      if (Expression.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Expression);
      }
      if (TargetDocs != false) {
        size += 1 + 1;
      }
      if (TargetConnections != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TypeValidator other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Gtype.Length != 0) {
        Gtype = other.Gtype;
      }
      if (other.Expression.Length != 0) {
        Expression = other.Expression;
      }
      if (other.TargetDocs != false) {
        TargetDocs = other.TargetDocs;
      }
      if (other.TargetConnections != false) {
        TargetConnections = other.TargetConnections;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Gtype = input.ReadString();
            break;
          }
          case 26: {
            Expression = input.ReadString();
            break;
          }
          case 32: {
            TargetDocs = input.ReadBool();
            break;
          }
          case 40: {
            TargetConnections = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TypeValidators : pb::IMessage<TypeValidators> {
    private static readonly pb::MessageParser<TypeValidators> _parser = new pb::MessageParser<TypeValidators>(() => new TypeValidators());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TypeValidators> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.GraphikReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypeValidators() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypeValidators(TypeValidators other) : this() {
      validators_ = other.validators_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypeValidators Clone() {
      return new TypeValidators(this);
    }

    /// <summary>Field number for the "validators" field.</summary>
    public const int ValidatorsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Api.TypeValidator> _repeated_validators_codec
        = pb::FieldCodec.ForMessage(10, global::Api.TypeValidator.Parser);
    private readonly pbc::RepeatedField<global::Api.TypeValidator> validators_ = new pbc::RepeatedField<global::Api.TypeValidator>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Api.TypeValidator> Validators {
      get { return validators_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TypeValidators);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TypeValidators other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!validators_.Equals(other.validators_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= validators_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      validators_.WriteTo(output, _repeated_validators_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += validators_.CalculateSize(_repeated_validators_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TypeValidators other) {
      if (other == null) {
        return;
      }
      validators_.Add(other.validators_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            validators_.AddEntriesFrom(input, _repeated_validators_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Index : pb::IMessage<Index> {
    private static readonly pb::MessageParser<Index> _parser = new pb::MessageParser<Index>(() => new Index());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Index> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.GraphikReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Index() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Index(Index other) : this() {
      name_ = other.name_;
      gtype_ = other.gtype_;
      expression_ = other.expression_;
      docs_ = other.docs_;
      connections_ = other.connections_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Index Clone() {
      return new Index(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gtype" field.</summary>
    public const int GtypeFieldNumber = 3;
    private string gtype_ = "";
    /// <summary>
    /// gtype is the doc/connection type to be filtered
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Gtype {
      get { return gtype_; }
      set {
        gtype_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "expression" field.</summary>
    public const int ExpressionFieldNumber = 4;
    private string expression_ = "";
    /// <summary>
    /// expression is a CEL expression used to filter connections/modes
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Expression {
      get { return expression_; }
      set {
        expression_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "docs" field.</summary>
    public const int DocsFieldNumber = 6;
    private bool docs_;
    /// <summary>
    /// if docs is true, this index will be applied to documents. Either docs or connections may be true, but not both.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Docs {
      get { return docs_; }
      set {
        docs_ = value;
      }
    }

    /// <summary>Field number for the "connections" field.</summary>
    public const int ConnectionsFieldNumber = 7;
    private bool connections_;
    /// <summary>
    /// if docs is true, this index will be applied to connections. Either docs or connections may be true, but not both.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Connections {
      get { return connections_; }
      set {
        connections_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Index);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Index other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Gtype != other.Gtype) return false;
      if (Expression != other.Expression) return false;
      if (Docs != other.Docs) return false;
      if (Connections != other.Connections) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Gtype.Length != 0) hash ^= Gtype.GetHashCode();
      if (Expression.Length != 0) hash ^= Expression.GetHashCode();
      if (Docs != false) hash ^= Docs.GetHashCode();
      if (Connections != false) hash ^= Connections.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Gtype.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Gtype);
      }
      if (Expression.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Expression);
      }
      if (Docs != false) {
        output.WriteRawTag(48);
        output.WriteBool(Docs);
      }
      if (Connections != false) {
        output.WriteRawTag(56);
        output.WriteBool(Connections);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Gtype.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Gtype);
      }
      if (Expression.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Expression);
      }
      if (Docs != false) {
        size += 1 + 1;
      }
      if (Connections != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Index other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Gtype.Length != 0) {
        Gtype = other.Gtype;
      }
      if (other.Expression.Length != 0) {
        Expression = other.Expression;
      }
      if (other.Docs != false) {
        Docs = other.Docs;
      }
      if (other.Connections != false) {
        Connections = other.Connections;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Gtype = input.ReadString();
            break;
          }
          case 34: {
            Expression = input.ReadString();
            break;
          }
          case 48: {
            Docs = input.ReadBool();
            break;
          }
          case 56: {
            Connections = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Indexes : pb::IMessage<Indexes> {
    private static readonly pb::MessageParser<Indexes> _parser = new pb::MessageParser<Indexes>(() => new Indexes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Indexes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.GraphikReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Indexes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Indexes(Indexes other) : this() {
      indexes_ = other.indexes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Indexes Clone() {
      return new Indexes(this);
    }

    /// <summary>Field number for the "indexes" field.</summary>
    public const int Indexes_FieldNumber = 1;
    private static readonly pb::FieldCodec<global::Api.Index> _repeated_indexes_codec
        = pb::FieldCodec.ForMessage(10, global::Api.Index.Parser);
    private readonly pbc::RepeatedField<global::Api.Index> indexes_ = new pbc::RepeatedField<global::Api.Index>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Api.Index> Indexes_ {
      get { return indexes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Indexes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Indexes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!indexes_.Equals(other.indexes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= indexes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      indexes_.WriteTo(output, _repeated_indexes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += indexes_.CalculateSize(_repeated_indexes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Indexes other) {
      if (other == null) {
        return;
      }
      indexes_.Add(other.indexes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            indexes_.AddEntriesFrom(input, _repeated_indexes_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Trigger : pb::IMessage<Trigger> {
    private static readonly pb::MessageParser<Trigger> _parser = new pb::MessageParser<Trigger>(() => new Trigger());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Trigger> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.GraphikReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Trigger() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Trigger(Trigger other) : this() {
      name_ = other.name_;
      gtype_ = other.gtype_;
      expression_ = other.expression_;
      trigger_ = other.trigger_;
      targetDocs_ = other.targetDocs_;
      targetConnections_ = other.targetConnections_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Trigger Clone() {
      return new Trigger(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// name is the unique name of the authorizer
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gtype" field.</summary>
    public const int GtypeFieldNumber = 2;
    private string gtype_ = "";
    /// <summary>
    /// gtype is the type of doc/connection will invoke the trigger
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Gtype {
      get { return gtype_; }
      set {
        gtype_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "expression" field.</summary>
    public const int ExpressionFieldNumber = 3;
    private string expression_ = "";
    /// <summary>
    /// expression is the boolean CEL expression that evaluates the doc to determine whether the trigger should be executed
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Expression {
      get { return expression_; }
      set {
        expression_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "trigger" field.</summary>
    public const int Trigger_FieldNumber = 4;
    private string trigger_ = "";
    /// <summary>
    /// trigger is the map CEL expression that mutates the doc/connection before it is stored
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Trigger_ {
      get { return trigger_; }
      set {
        trigger_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "target_docs" field.</summary>
    public const int TargetDocsFieldNumber = 5;
    private bool targetDocs_;
    /// <summary>
    /// if target_docs is true, this trigger will be applied to documents.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool TargetDocs {
      get { return targetDocs_; }
      set {
        targetDocs_ = value;
      }
    }

    /// <summary>Field number for the "target_connections" field.</summary>
    public const int TargetConnectionsFieldNumber = 6;
    private bool targetConnections_;
    /// <summary>
    /// if target_connections is true, this trigger will be applied to connections.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool TargetConnections {
      get { return targetConnections_; }
      set {
        targetConnections_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Trigger);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Trigger other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Gtype != other.Gtype) return false;
      if (Expression != other.Expression) return false;
      if (Trigger_ != other.Trigger_) return false;
      if (TargetDocs != other.TargetDocs) return false;
      if (TargetConnections != other.TargetConnections) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Gtype.Length != 0) hash ^= Gtype.GetHashCode();
      if (Expression.Length != 0) hash ^= Expression.GetHashCode();
      if (Trigger_.Length != 0) hash ^= Trigger_.GetHashCode();
      if (TargetDocs != false) hash ^= TargetDocs.GetHashCode();
      if (TargetConnections != false) hash ^= TargetConnections.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Gtype.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Gtype);
      }
      if (Expression.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Expression);
      }
      if (Trigger_.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Trigger_);
      }
      if (TargetDocs != false) {
        output.WriteRawTag(40);
        output.WriteBool(TargetDocs);
      }
      if (TargetConnections != false) {
        output.WriteRawTag(48);
        output.WriteBool(TargetConnections);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Gtype.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Gtype);
      }
      if (Expression.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Expression);
      }
      if (Trigger_.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Trigger_);
      }
      if (TargetDocs != false) {
        size += 1 + 1;
      }
      if (TargetConnections != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Trigger other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Gtype.Length != 0) {
        Gtype = other.Gtype;
      }
      if (other.Expression.Length != 0) {
        Expression = other.Expression;
      }
      if (other.Trigger_.Length != 0) {
        Trigger_ = other.Trigger_;
      }
      if (other.TargetDocs != false) {
        TargetDocs = other.TargetDocs;
      }
      if (other.TargetConnections != false) {
        TargetConnections = other.TargetConnections;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Gtype = input.ReadString();
            break;
          }
          case 26: {
            Expression = input.ReadString();
            break;
          }
          case 34: {
            Trigger_ = input.ReadString();
            break;
          }
          case 40: {
            TargetDocs = input.ReadBool();
            break;
          }
          case 48: {
            TargetConnections = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Triggers : pb::IMessage<Triggers> {
    private static readonly pb::MessageParser<Triggers> _parser = new pb::MessageParser<Triggers>(() => new Triggers());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Triggers> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.GraphikReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Triggers() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Triggers(Triggers other) : this() {
      triggers_ = other.triggers_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Triggers Clone() {
      return new Triggers(this);
    }

    /// <summary>Field number for the "triggers" field.</summary>
    public const int Triggers_FieldNumber = 1;
    private static readonly pb::FieldCodec<global::Api.Trigger> _repeated_triggers_codec
        = pb::FieldCodec.ForMessage(10, global::Api.Trigger.Parser);
    private readonly pbc::RepeatedField<global::Api.Trigger> triggers_ = new pbc::RepeatedField<global::Api.Trigger>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Api.Trigger> Triggers_ {
      get { return triggers_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Triggers);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Triggers other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!triggers_.Equals(other.triggers_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= triggers_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      triggers_.WriteTo(output, _repeated_triggers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += triggers_.CalculateSize(_repeated_triggers_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Triggers other) {
      if (other == null) {
        return;
      }
      triggers_.Add(other.triggers_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            triggers_.AddEntriesFrom(input, _repeated_triggers_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// StreamFilter is used to filter messages in a pubsub channel
  /// </summary>
  public sealed partial class StreamFilter : pb::IMessage<StreamFilter> {
    private static readonly pb::MessageParser<StreamFilter> _parser = new pb::MessageParser<StreamFilter>(() => new StreamFilter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StreamFilter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.GraphikReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamFilter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamFilter(StreamFilter other) : this() {
      channel_ = other.channel_;
      expression_ = other.expression_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamFilter Clone() {
      return new StreamFilter(this);
    }

    /// <summary>Field number for the "channel" field.</summary>
    public const int ChannelFieldNumber = 1;
    private string channel_ = "";
    /// <summary>
    /// channel is the target channel to filter from
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Channel {
      get { return channel_; }
      set {
        channel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "expression" field.</summary>
    public const int ExpressionFieldNumber = 2;
    private string expression_ = "";
    /// <summary>
    /// expression is CEL expression used to filter messages
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Expression {
      get { return expression_; }
      set {
        expression_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StreamFilter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StreamFilter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Channel != other.Channel) return false;
      if (Expression != other.Expression) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Channel.Length != 0) hash ^= Channel.GetHashCode();
      if (Expression.Length != 0) hash ^= Expression.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Channel.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Channel);
      }
      if (Expression.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Expression);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Channel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Channel);
      }
      if (Expression.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Expression);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StreamFilter other) {
      if (other == null) {
        return;
      }
      if (other.Channel.Length != 0) {
        Channel = other.Channel;
      }
      if (other.Expression.Length != 0) {
        Expression = other.Expression;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Channel = input.ReadString();
            break;
          }
          case 18: {
            Expression = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Graph is an array of docs and connections
  /// </summary>
  public sealed partial class Graph : pb::IMessage<Graph> {
    private static readonly pb::MessageParser<Graph> _parser = new pb::MessageParser<Graph>(() => new Graph());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Graph> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.GraphikReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Graph() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Graph(Graph other) : this() {
      docs_ = other.docs_ != null ? other.docs_.Clone() : null;
      connections_ = other.connections_ != null ? other.connections_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Graph Clone() {
      return new Graph(this);
    }

    /// <summary>Field number for the "docs" field.</summary>
    public const int DocsFieldNumber = 1;
    private global::Api.Docs docs_;
    /// <summary>
    /// docs are docs present in the graph
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.Docs Docs {
      get { return docs_; }
      set {
        docs_ = value;
      }
    }

    /// <summary>Field number for the "connections" field.</summary>
    public const int ConnectionsFieldNumber = 2;
    private global::Api.Connections connections_;
    /// <summary>
    /// connections are connections present in the graph
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.Connections Connections {
      get { return connections_; }
      set {
        connections_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Graph);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Graph other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Docs, other.Docs)) return false;
      if (!object.Equals(Connections, other.Connections)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (docs_ != null) hash ^= Docs.GetHashCode();
      if (connections_ != null) hash ^= Connections.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (docs_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Docs);
      }
      if (connections_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Connections);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (docs_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Docs);
      }
      if (connections_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Connections);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Graph other) {
      if (other == null) {
        return;
      }
      if (other.docs_ != null) {
        if (docs_ == null) {
          docs_ = new global::Api.Docs();
        }
        Docs.MergeFrom(other.Docs);
      }
      if (other.connections_ != null) {
        if (connections_ == null) {
          connections_ = new global::Api.Connections();
        }
        Connections.MergeFrom(other.Connections);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (docs_ == null) {
              docs_ = new global::Api.Docs();
            }
            input.ReadMessage(docs_);
            break;
          }
          case 18: {
            if (connections_ == null) {
              connections_ = new global::Api.Connections();
            }
            input.ReadMessage(connections_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Flags : pb::IMessage<Flags> {
    private static readonly pb::MessageParser<Flags> _parser = new pb::MessageParser<Flags>(() => new Flags());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Flags> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.GraphikReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Flags() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Flags(Flags other) : this() {
      openIdDiscovery_ = other.openIdDiscovery_;
      storagePath_ = other.storagePath_;
      metrics_ = other.metrics_;
      allowHeaders_ = other.allowHeaders_.Clone();
      allowMethods_ = other.allowMethods_.Clone();
      allowOrigins_ = other.allowOrigins_.Clone();
      rootUsers_ = other.rootUsers_.Clone();
      tlsCert_ = other.tlsCert_;
      tlsKey_ = other.tlsKey_;
      playgroundClientId_ = other.playgroundClientId_;
      playgroundClientSecret_ = other.playgroundClientSecret_;
      playgroundRedirect_ = other.playgroundRedirect_;
      requireRequestAuthorizers_ = other.requireRequestAuthorizers_;
      requireResponseAuthorizers_ = other.requireResponseAuthorizers_;
      joinRaft_ = other.joinRaft_;
      raftPeerId_ = other.raftPeerId_;
      listenPort_ = other.listenPort_;
      raftSecret_ = other.raftSecret_;
      debug_ = other.debug_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Flags Clone() {
      return new Flags(this);
    }

    /// <summary>Field number for the "open_id_discovery" field.</summary>
    public const int OpenIdDiscoveryFieldNumber = 1;
    private string openIdDiscovery_ = "";
    /// <summary>
    /// open id connect discovery uri ex: https://accounts.google.com/.well-known/openid-configuration (env: GRAPHIK_OPEN_ID)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OpenIdDiscovery {
      get { return openIdDiscovery_; }
      set {
        openIdDiscovery_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "storage_path" field.</summary>
    public const int StoragePathFieldNumber = 2;
    private string storagePath_ = "";
    /// <summary>
    /// persistant storage ref (env: GRAPHIK_STORAGE_PATH)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StoragePath {
      get { return storagePath_; }
      set {
        storagePath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "metrics" field.</summary>
    public const int MetricsFieldNumber = 3;
    private bool metrics_;
    /// <summary>
    /// enable prometheus &amp; pprof metrics (emv: GRAPHIK_METRICS = true)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Metrics {
      get { return metrics_; }
      set {
        metrics_ = value;
      }
    }

    /// <summary>Field number for the "allow_headers" field.</summary>
    public const int AllowHeadersFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_allowHeaders_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> allowHeaders_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// cors allow headers (env: GRAPHIK_ALLOW_HEADERS)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> AllowHeaders {
      get { return allowHeaders_; }
    }

    /// <summary>Field number for the "allow_methods" field.</summary>
    public const int AllowMethodsFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _repeated_allowMethods_codec
        = pb::FieldCodec.ForString(50);
    private readonly pbc::RepeatedField<string> allowMethods_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// cors allow methods (env: GRAPHIK_ALLOW_METHODS)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> AllowMethods {
      get { return allowMethods_; }
    }

    /// <summary>Field number for the "allow_origins" field.</summary>
    public const int AllowOriginsFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _repeated_allowOrigins_codec
        = pb::FieldCodec.ForString(58);
    private readonly pbc::RepeatedField<string> allowOrigins_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// cors allow origins (env: GRAPHIK_ALLOW_ORIGINS)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> AllowOrigins {
      get { return allowOrigins_; }
    }

    /// <summary>Field number for the "root_users" field.</summary>
    public const int RootUsersFieldNumber = 8;
    private static readonly pb::FieldCodec<string> _repeated_rootUsers_codec
        = pb::FieldCodec.ForString(66);
    private readonly pbc::RepeatedField<string> rootUsers_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// root user is a list of email addresses that bypass authorizers. (env: GRAPHIK_ROOT_USERS)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> RootUsers {
      get { return rootUsers_; }
    }

    /// <summary>Field number for the "tls_cert" field.</summary>
    public const int TlsCertFieldNumber = 9;
    private string tlsCert_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TlsCert {
      get { return tlsCert_; }
      set {
        tlsCert_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tls_key" field.</summary>
    public const int TlsKeyFieldNumber = 10;
    private string tlsKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TlsKey {
      get { return tlsKey_; }
      set {
        tlsKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "playground_client_id" field.</summary>
    public const int PlaygroundClientIdFieldNumber = 11;
    private string playgroundClientId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlaygroundClientId {
      get { return playgroundClientId_; }
      set {
        playgroundClientId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "playground_client_secret" field.</summary>
    public const int PlaygroundClientSecretFieldNumber = 12;
    private string playgroundClientSecret_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlaygroundClientSecret {
      get { return playgroundClientSecret_; }
      set {
        playgroundClientSecret_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "playground_redirect" field.</summary>
    public const int PlaygroundRedirectFieldNumber = 13;
    private string playgroundRedirect_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlaygroundRedirect {
      get { return playgroundRedirect_; }
      set {
        playgroundRedirect_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "require_request_authorizers" field.</summary>
    public const int RequireRequestAuthorizersFieldNumber = 15;
    private bool requireRequestAuthorizers_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool RequireRequestAuthorizers {
      get { return requireRequestAuthorizers_; }
      set {
        requireRequestAuthorizers_ = value;
      }
    }

    /// <summary>Field number for the "require_response_authorizers" field.</summary>
    public const int RequireResponseAuthorizersFieldNumber = 16;
    private bool requireResponseAuthorizers_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool RequireResponseAuthorizers {
      get { return requireResponseAuthorizers_; }
      set {
        requireResponseAuthorizers_ = value;
      }
    }

    /// <summary>Field number for the "join_raft" field.</summary>
    public const int JoinRaftFieldNumber = 17;
    private string joinRaft_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JoinRaft {
      get { return joinRaft_; }
      set {
        joinRaft_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "raft_peer_id" field.</summary>
    public const int RaftPeerIdFieldNumber = 18;
    private string raftPeerId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RaftPeerId {
      get { return raftPeerId_; }
      set {
        raftPeerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "listen_port" field.</summary>
    public const int ListenPortFieldNumber = 19;
    private long listenPort_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ListenPort {
      get { return listenPort_; }
      set {
        listenPort_ = value;
      }
    }

    /// <summary>Field number for the "raft_secret" field.</summary>
    public const int RaftSecretFieldNumber = 20;
    private string raftSecret_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RaftSecret {
      get { return raftSecret_; }
      set {
        raftSecret_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "debug" field.</summary>
    public const int DebugFieldNumber = 21;
    private bool debug_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Debug {
      get { return debug_; }
      set {
        debug_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Flags);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Flags other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OpenIdDiscovery != other.OpenIdDiscovery) return false;
      if (StoragePath != other.StoragePath) return false;
      if (Metrics != other.Metrics) return false;
      if(!allowHeaders_.Equals(other.allowHeaders_)) return false;
      if(!allowMethods_.Equals(other.allowMethods_)) return false;
      if(!allowOrigins_.Equals(other.allowOrigins_)) return false;
      if(!rootUsers_.Equals(other.rootUsers_)) return false;
      if (TlsCert != other.TlsCert) return false;
      if (TlsKey != other.TlsKey) return false;
      if (PlaygroundClientId != other.PlaygroundClientId) return false;
      if (PlaygroundClientSecret != other.PlaygroundClientSecret) return false;
      if (PlaygroundRedirect != other.PlaygroundRedirect) return false;
      if (RequireRequestAuthorizers != other.RequireRequestAuthorizers) return false;
      if (RequireResponseAuthorizers != other.RequireResponseAuthorizers) return false;
      if (JoinRaft != other.JoinRaft) return false;
      if (RaftPeerId != other.RaftPeerId) return false;
      if (ListenPort != other.ListenPort) return false;
      if (RaftSecret != other.RaftSecret) return false;
      if (Debug != other.Debug) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OpenIdDiscovery.Length != 0) hash ^= OpenIdDiscovery.GetHashCode();
      if (StoragePath.Length != 0) hash ^= StoragePath.GetHashCode();
      if (Metrics != false) hash ^= Metrics.GetHashCode();
      hash ^= allowHeaders_.GetHashCode();
      hash ^= allowMethods_.GetHashCode();
      hash ^= allowOrigins_.GetHashCode();
      hash ^= rootUsers_.GetHashCode();
      if (TlsCert.Length != 0) hash ^= TlsCert.GetHashCode();
      if (TlsKey.Length != 0) hash ^= TlsKey.GetHashCode();
      if (PlaygroundClientId.Length != 0) hash ^= PlaygroundClientId.GetHashCode();
      if (PlaygroundClientSecret.Length != 0) hash ^= PlaygroundClientSecret.GetHashCode();
      if (PlaygroundRedirect.Length != 0) hash ^= PlaygroundRedirect.GetHashCode();
      if (RequireRequestAuthorizers != false) hash ^= RequireRequestAuthorizers.GetHashCode();
      if (RequireResponseAuthorizers != false) hash ^= RequireResponseAuthorizers.GetHashCode();
      if (JoinRaft.Length != 0) hash ^= JoinRaft.GetHashCode();
      if (RaftPeerId.Length != 0) hash ^= RaftPeerId.GetHashCode();
      if (ListenPort != 0L) hash ^= ListenPort.GetHashCode();
      if (RaftSecret.Length != 0) hash ^= RaftSecret.GetHashCode();
      if (Debug != false) hash ^= Debug.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OpenIdDiscovery.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(OpenIdDiscovery);
      }
      if (StoragePath.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(StoragePath);
      }
      if (Metrics != false) {
        output.WriteRawTag(24);
        output.WriteBool(Metrics);
      }
      allowHeaders_.WriteTo(output, _repeated_allowHeaders_codec);
      allowMethods_.WriteTo(output, _repeated_allowMethods_codec);
      allowOrigins_.WriteTo(output, _repeated_allowOrigins_codec);
      rootUsers_.WriteTo(output, _repeated_rootUsers_codec);
      if (TlsCert.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(TlsCert);
      }
      if (TlsKey.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(TlsKey);
      }
      if (PlaygroundClientId.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(PlaygroundClientId);
      }
      if (PlaygroundClientSecret.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(PlaygroundClientSecret);
      }
      if (PlaygroundRedirect.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(PlaygroundRedirect);
      }
      if (RequireRequestAuthorizers != false) {
        output.WriteRawTag(120);
        output.WriteBool(RequireRequestAuthorizers);
      }
      if (RequireResponseAuthorizers != false) {
        output.WriteRawTag(128, 1);
        output.WriteBool(RequireResponseAuthorizers);
      }
      if (JoinRaft.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(JoinRaft);
      }
      if (RaftPeerId.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(RaftPeerId);
      }
      if (ListenPort != 0L) {
        output.WriteRawTag(152, 1);
        output.WriteInt64(ListenPort);
      }
      if (RaftSecret.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(RaftSecret);
      }
      if (Debug != false) {
        output.WriteRawTag(168, 1);
        output.WriteBool(Debug);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OpenIdDiscovery.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OpenIdDiscovery);
      }
      if (StoragePath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StoragePath);
      }
      if (Metrics != false) {
        size += 1 + 1;
      }
      size += allowHeaders_.CalculateSize(_repeated_allowHeaders_codec);
      size += allowMethods_.CalculateSize(_repeated_allowMethods_codec);
      size += allowOrigins_.CalculateSize(_repeated_allowOrigins_codec);
      size += rootUsers_.CalculateSize(_repeated_rootUsers_codec);
      if (TlsCert.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TlsCert);
      }
      if (TlsKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TlsKey);
      }
      if (PlaygroundClientId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlaygroundClientId);
      }
      if (PlaygroundClientSecret.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlaygroundClientSecret);
      }
      if (PlaygroundRedirect.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlaygroundRedirect);
      }
      if (RequireRequestAuthorizers != false) {
        size += 1 + 1;
      }
      if (RequireResponseAuthorizers != false) {
        size += 2 + 1;
      }
      if (JoinRaft.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(JoinRaft);
      }
      if (RaftPeerId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(RaftPeerId);
      }
      if (ListenPort != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(ListenPort);
      }
      if (RaftSecret.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(RaftSecret);
      }
      if (Debug != false) {
        size += 2 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Flags other) {
      if (other == null) {
        return;
      }
      if (other.OpenIdDiscovery.Length != 0) {
        OpenIdDiscovery = other.OpenIdDiscovery;
      }
      if (other.StoragePath.Length != 0) {
        StoragePath = other.StoragePath;
      }
      if (other.Metrics != false) {
        Metrics = other.Metrics;
      }
      allowHeaders_.Add(other.allowHeaders_);
      allowMethods_.Add(other.allowMethods_);
      allowOrigins_.Add(other.allowOrigins_);
      rootUsers_.Add(other.rootUsers_);
      if (other.TlsCert.Length != 0) {
        TlsCert = other.TlsCert;
      }
      if (other.TlsKey.Length != 0) {
        TlsKey = other.TlsKey;
      }
      if (other.PlaygroundClientId.Length != 0) {
        PlaygroundClientId = other.PlaygroundClientId;
      }
      if (other.PlaygroundClientSecret.Length != 0) {
        PlaygroundClientSecret = other.PlaygroundClientSecret;
      }
      if (other.PlaygroundRedirect.Length != 0) {
        PlaygroundRedirect = other.PlaygroundRedirect;
      }
      if (other.RequireRequestAuthorizers != false) {
        RequireRequestAuthorizers = other.RequireRequestAuthorizers;
      }
      if (other.RequireResponseAuthorizers != false) {
        RequireResponseAuthorizers = other.RequireResponseAuthorizers;
      }
      if (other.JoinRaft.Length != 0) {
        JoinRaft = other.JoinRaft;
      }
      if (other.RaftPeerId.Length != 0) {
        RaftPeerId = other.RaftPeerId;
      }
      if (other.ListenPort != 0L) {
        ListenPort = other.ListenPort;
      }
      if (other.RaftSecret.Length != 0) {
        RaftSecret = other.RaftSecret;
      }
      if (other.Debug != false) {
        Debug = other.Debug;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OpenIdDiscovery = input.ReadString();
            break;
          }
          case 18: {
            StoragePath = input.ReadString();
            break;
          }
          case 24: {
            Metrics = input.ReadBool();
            break;
          }
          case 42: {
            allowHeaders_.AddEntriesFrom(input, _repeated_allowHeaders_codec);
            break;
          }
          case 50: {
            allowMethods_.AddEntriesFrom(input, _repeated_allowMethods_codec);
            break;
          }
          case 58: {
            allowOrigins_.AddEntriesFrom(input, _repeated_allowOrigins_codec);
            break;
          }
          case 66: {
            rootUsers_.AddEntriesFrom(input, _repeated_rootUsers_codec);
            break;
          }
          case 74: {
            TlsCert = input.ReadString();
            break;
          }
          case 82: {
            TlsKey = input.ReadString();
            break;
          }
          case 90: {
            PlaygroundClientId = input.ReadString();
            break;
          }
          case 98: {
            PlaygroundClientSecret = input.ReadString();
            break;
          }
          case 106: {
            PlaygroundRedirect = input.ReadString();
            break;
          }
          case 120: {
            RequireRequestAuthorizers = input.ReadBool();
            break;
          }
          case 128: {
            RequireResponseAuthorizers = input.ReadBool();
            break;
          }
          case 138: {
            JoinRaft = input.ReadString();
            break;
          }
          case 146: {
            RaftPeerId = input.ReadString();
            break;
          }
          case 152: {
            ListenPort = input.ReadInt64();
            break;
          }
          case 162: {
            RaftSecret = input.ReadString();
            break;
          }
          case 168: {
            Debug = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Boolean is a simple boolean value
  /// </summary>
  public sealed partial class Boolean : pb::IMessage<Boolean> {
    private static readonly pb::MessageParser<Boolean> _parser = new pb::MessageParser<Boolean>(() => new Boolean());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Boolean> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.GraphikReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Boolean() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Boolean(Boolean other) : this() {
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Boolean Clone() {
      return new Boolean(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private bool value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Boolean);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Boolean other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Value != false) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Value != false) {
        output.WriteRawTag(8);
        output.WriteBool(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Value != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Boolean other) {
      if (other == null) {
        return;
      }
      if (other.Value != false) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Value = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Number is a simple double/float64 value
  /// </summary>
  public sealed partial class Number : pb::IMessage<Number> {
    private static readonly pb::MessageParser<Number> _parser = new pb::MessageParser<Number>(() => new Number());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Number> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.GraphikReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Number() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Number(Number other) : this() {
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Number Clone() {
      return new Number(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private double value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Number);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Number other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Value, other.Value)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Value != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Value);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Value != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Value != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Number other) {
      if (other == null) {
        return;
      }
      if (other.Value != 0D) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Value = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// ExistsFilter is used as input into all Exists(boolean) related queries.
  /// </summary>
  public sealed partial class ExistsFilter : pb::IMessage<ExistsFilter> {
    private static readonly pb::MessageParser<ExistsFilter> _parser = new pb::MessageParser<ExistsFilter>(() => new ExistsFilter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExistsFilter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.GraphikReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExistsFilter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExistsFilter(ExistsFilter other) : this() {
      gtype_ = other.gtype_;
      expression_ = other.expression_;
      seek_ = other.seek_;
      reverse_ = other.reverse_;
      index_ = other.index_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExistsFilter Clone() {
      return new ExistsFilter(this);
    }

    /// <summary>Field number for the "gtype" field.</summary>
    public const int GtypeFieldNumber = 1;
    private string gtype_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Gtype {
      get { return gtype_; }
      set {
        gtype_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "expression" field.</summary>
    public const int ExpressionFieldNumber = 2;
    private string expression_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Expression {
      get { return expression_; }
      set {
        expression_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "seek" field.</summary>
    public const int SeekFieldNumber = 3;
    private string seek_ = "";
    /// <summary>
    /// seek to a specific key for pagination
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Seek {
      get { return seek_; }
      set {
        seek_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "reverse" field.</summary>
    public const int ReverseFieldNumber = 4;
    private bool reverse_;
    /// <summary>
    /// reverse the results
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Reverse {
      get { return reverse_; }
      set {
        reverse_ = value;
      }
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 5;
    private string index_ = "";
    /// <summary>
    /// search in a specific index
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Index {
      get { return index_; }
      set {
        index_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExistsFilter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExistsFilter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Gtype != other.Gtype) return false;
      if (Expression != other.Expression) return false;
      if (Seek != other.Seek) return false;
      if (Reverse != other.Reverse) return false;
      if (Index != other.Index) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Gtype.Length != 0) hash ^= Gtype.GetHashCode();
      if (Expression.Length != 0) hash ^= Expression.GetHashCode();
      if (Seek.Length != 0) hash ^= Seek.GetHashCode();
      if (Reverse != false) hash ^= Reverse.GetHashCode();
      if (Index.Length != 0) hash ^= Index.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Gtype.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Gtype);
      }
      if (Expression.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Expression);
      }
      if (Seek.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Seek);
      }
      if (Reverse != false) {
        output.WriteRawTag(32);
        output.WriteBool(Reverse);
      }
      if (Index.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Index);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Gtype.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Gtype);
      }
      if (Expression.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Expression);
      }
      if (Seek.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Seek);
      }
      if (Reverse != false) {
        size += 1 + 1;
      }
      if (Index.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Index);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExistsFilter other) {
      if (other == null) {
        return;
      }
      if (other.Gtype.Length != 0) {
        Gtype = other.Gtype;
      }
      if (other.Expression.Length != 0) {
        Expression = other.Expression;
      }
      if (other.Seek.Length != 0) {
        Seek = other.Seek;
      }
      if (other.Reverse != false) {
        Reverse = other.Reverse;
      }
      if (other.Index.Length != 0) {
        Index = other.Index;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Gtype = input.ReadString();
            break;
          }
          case 18: {
            Expression = input.ReadString();
            break;
          }
          case 26: {
            Seek = input.ReadString();
            break;
          }
          case 32: {
            Reverse = input.ReadBool();
            break;
          }
          case 42: {
            Index = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Edit patches the attributes of a Doc or Connection
  /// </summary>
  public sealed partial class Edit : pb::IMessage<Edit> {
    private static readonly pb::MessageParser<Edit> _parser = new pb::MessageParser<Edit>(() => new Edit());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Edit> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.GraphikReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Edit() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Edit(Edit other) : this() {
      ref_ = other.ref_ != null ? other.ref_.Clone() : null;
      attributes_ = other.attributes_ != null ? other.attributes_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Edit Clone() {
      return new Edit(this);
    }

    /// <summary>Field number for the "ref" field.</summary>
    public const int RefFieldNumber = 1;
    private global::Api.Ref ref_;
    /// <summary>
    /// ref is the ref to the target doc/connection to patch
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.Ref Ref {
      get { return ref_; }
      set {
        ref_ = value;
      }
    }

    /// <summary>Field number for the "attributes" field.</summary>
    public const int AttributesFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Struct attributes_;
    /// <summary>
    /// attributes are k/v pairs used to overwrite k/v pairs on a doc/connection
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Struct Attributes {
      get { return attributes_; }
      set {
        attributes_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Edit);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Edit other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Ref, other.Ref)) return false;
      if (!object.Equals(Attributes, other.Attributes)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ref_ != null) hash ^= Ref.GetHashCode();
      if (attributes_ != null) hash ^= Attributes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ref_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Ref);
      }
      if (attributes_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Attributes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ref_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ref);
      }
      if (attributes_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Attributes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Edit other) {
      if (other == null) {
        return;
      }
      if (other.ref_ != null) {
        if (ref_ == null) {
          ref_ = new global::Api.Ref();
        }
        Ref.MergeFrom(other.Ref);
      }
      if (other.attributes_ != null) {
        if (attributes_ == null) {
          attributes_ = new global::Google.Protobuf.WellKnownTypes.Struct();
        }
        Attributes.MergeFrom(other.Attributes);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (ref_ == null) {
              ref_ = new global::Api.Ref();
            }
            input.ReadMessage(ref_);
            break;
          }
          case 18: {
            if (attributes_ == null) {
              attributes_ = new global::Google.Protobuf.WellKnownTypes.Struct();
            }
            input.ReadMessage(attributes_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// EditFilter is used to patch/edit docs/connections
  /// </summary>
  public sealed partial class EditFilter : pb::IMessage<EditFilter> {
    private static readonly pb::MessageParser<EditFilter> _parser = new pb::MessageParser<EditFilter>(() => new EditFilter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EditFilter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.GraphikReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EditFilter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EditFilter(EditFilter other) : this() {
      filter_ = other.filter_ != null ? other.filter_.Clone() : null;
      attributes_ = other.attributes_ != null ? other.attributes_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EditFilter Clone() {
      return new EditFilter(this);
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 1;
    private global::Api.Filter filter_;
    /// <summary>
    /// filter is used to filter docs/connections to patch
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.Filter Filter {
      get { return filter_; }
      set {
        filter_ = value;
      }
    }

    /// <summary>Field number for the "attributes" field.</summary>
    public const int AttributesFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Struct attributes_;
    /// <summary>
    /// attributes are k/v pairs used to overwrite k/v pairs on all docs/connections that pass the filter
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Struct Attributes {
      get { return attributes_; }
      set {
        attributes_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EditFilter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EditFilter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Filter, other.Filter)) return false;
      if (!object.Equals(Attributes, other.Attributes)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (filter_ != null) hash ^= Filter.GetHashCode();
      if (attributes_ != null) hash ^= Attributes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (filter_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Filter);
      }
      if (attributes_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Attributes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (filter_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Filter);
      }
      if (attributes_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Attributes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EditFilter other) {
      if (other == null) {
        return;
      }
      if (other.filter_ != null) {
        if (filter_ == null) {
          filter_ = new global::Api.Filter();
        }
        Filter.MergeFrom(other.Filter);
      }
      if (other.attributes_ != null) {
        if (attributes_ == null) {
          attributes_ = new global::Google.Protobuf.WellKnownTypes.Struct();
        }
        Attributes.MergeFrom(other.Attributes);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (filter_ == null) {
              filter_ = new global::Api.Filter();
            }
            input.ReadMessage(filter_);
            break;
          }
          case 18: {
            if (attributes_ == null) {
              attributes_ = new global::Google.Protobuf.WellKnownTypes.Struct();
            }
            input.ReadMessage(attributes_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Pong returns PONG if the server is healthy
  /// </summary>
  public sealed partial class Pong : pb::IMessage<Pong> {
    private static readonly pb::MessageParser<Pong> _parser = new pb::MessageParser<Pong>(() => new Pong());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Pong> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.GraphikReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Pong() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Pong(Pong other) : this() {
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Pong Clone() {
      return new Pong(this);
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 1;
    private string message_ = "";
    /// <summary>
    /// message returns PONG if healthy
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Pong);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Pong other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Message.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Pong other) {
      if (other == null) {
        return;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// OutboundMessage is a message to be published to a pubsub channel
  /// </summary>
  public sealed partial class OutboundMessage : pb::IMessage<OutboundMessage> {
    private static readonly pb::MessageParser<OutboundMessage> _parser = new pb::MessageParser<OutboundMessage>(() => new OutboundMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OutboundMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.GraphikReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OutboundMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OutboundMessage(OutboundMessage other) : this() {
      channel_ = other.channel_;
      data_ = other.data_ != null ? other.data_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OutboundMessage Clone() {
      return new OutboundMessage(this);
    }

    /// <summary>Field number for the "channel" field.</summary>
    public const int ChannelFieldNumber = 1;
    private string channel_ = "";
    /// <summary>
    /// channel is the target channel to send the message to
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Channel {
      get { return channel_; }
      set {
        channel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Struct data_;
    /// <summary>
    /// data is the data to send with the message
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Struct Data {
      get { return data_; }
      set {
        data_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OutboundMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OutboundMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Channel != other.Channel) return false;
      if (!object.Equals(Data, other.Data)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Channel.Length != 0) hash ^= Channel.GetHashCode();
      if (data_ != null) hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Channel.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Channel);
      }
      if (data_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Channel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Channel);
      }
      if (data_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Data);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OutboundMessage other) {
      if (other == null) {
        return;
      }
      if (other.Channel.Length != 0) {
        Channel = other.Channel;
      }
      if (other.data_ != null) {
        if (data_ == null) {
          data_ = new global::Google.Protobuf.WellKnownTypes.Struct();
        }
        Data.MergeFrom(other.Data);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Channel = input.ReadString();
            break;
          }
          case 18: {
            if (data_ == null) {
              data_ = new global::Google.Protobuf.WellKnownTypes.Struct();
            }
            input.ReadMessage(data_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Message is received on PubSub subscriptions
  /// </summary>
  public sealed partial class Message : pb::IMessage<Message> {
    private static readonly pb::MessageParser<Message> _parser = new pb::MessageParser<Message>(() => new Message());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Message> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.GraphikReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Message() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Message(Message other) : this() {
      channel_ = other.channel_;
      data_ = other.data_ != null ? other.data_.Clone() : null;
      user_ = other.user_ != null ? other.user_.Clone() : null;
      timestamp_ = other.timestamp_ != null ? other.timestamp_.Clone() : null;
      method_ = other.method_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Message Clone() {
      return new Message(this);
    }

    /// <summary>Field number for the "channel" field.</summary>
    public const int ChannelFieldNumber = 1;
    private string channel_ = "";
    /// <summary>
    /// channel is the channel the message was sent to
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Channel {
      get { return channel_; }
      set {
        channel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Struct data_;
    /// <summary>
    /// data is the data sent with the message
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Struct Data {
      get { return data_; }
      set {
        data_ = value;
      }
    }

    /// <summary>Field number for the "user" field.</summary>
    public const int UserFieldNumber = 3;
    private global::Api.Ref user_;
    /// <summary>
    /// user is the sender that triggered/sent the message
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.Ref User {
      get { return user_; }
      set {
        user_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timestamp_;
    /// <summary>
    /// timestamp is when the message was sent
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "method" field.</summary>
    public const int MethodFieldNumber = 5;
    private string method_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Method {
      get { return method_; }
      set {
        method_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Message);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Message other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Channel != other.Channel) return false;
      if (!object.Equals(Data, other.Data)) return false;
      if (!object.Equals(User, other.User)) return false;
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      if (Method != other.Method) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Channel.Length != 0) hash ^= Channel.GetHashCode();
      if (data_ != null) hash ^= Data.GetHashCode();
      if (user_ != null) hash ^= User.GetHashCode();
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      if (Method.Length != 0) hash ^= Method.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Channel.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Channel);
      }
      if (data_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Data);
      }
      if (user_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(User);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Timestamp);
      }
      if (Method.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Method);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Channel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Channel);
      }
      if (data_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Data);
      }
      if (user_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
      }
      if (timestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      if (Method.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Method);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Message other) {
      if (other == null) {
        return;
      }
      if (other.Channel.Length != 0) {
        Channel = other.Channel;
      }
      if (other.data_ != null) {
        if (data_ == null) {
          data_ = new global::Google.Protobuf.WellKnownTypes.Struct();
        }
        Data.MergeFrom(other.Data);
      }
      if (other.user_ != null) {
        if (user_ == null) {
          user_ = new global::Api.Ref();
        }
        User.MergeFrom(other.User);
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          timestamp_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
      if (other.Method.Length != 0) {
        Method = other.Method;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Channel = input.ReadString();
            break;
          }
          case 18: {
            if (data_ == null) {
              data_ = new global::Google.Protobuf.WellKnownTypes.Struct();
            }
            input.ReadMessage(data_);
            break;
          }
          case 26: {
            if (user_ == null) {
              user_ = new global::Api.Ref();
            }
            input.ReadMessage(user_);
            break;
          }
          case 34: {
            if (timestamp_ == null) {
              timestamp_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(timestamp_);
            break;
          }
          case 42: {
            Method = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Schema returns registered connection &amp; doc types
  /// </summary>
  public sealed partial class Schema : pb::IMessage<Schema> {
    private static readonly pb::MessageParser<Schema> _parser = new pb::MessageParser<Schema>(() => new Schema());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Schema> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.GraphikReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Schema() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Schema(Schema other) : this() {
      connectionTypes_ = other.connectionTypes_.Clone();
      docTypes_ = other.docTypes_.Clone();
      authorizers_ = other.authorizers_ != null ? other.authorizers_.Clone() : null;
      validators_ = other.validators_ != null ? other.validators_.Clone() : null;
      indexes_ = other.indexes_ != null ? other.indexes_.Clone() : null;
      triggers_ = other.triggers_ != null ? other.triggers_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Schema Clone() {
      return new Schema(this);
    }

    /// <summary>Field number for the "connection_types" field.</summary>
    public const int ConnectionTypesFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_connectionTypes_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> connectionTypes_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// connection_types are the types of connections in the graph
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ConnectionTypes {
      get { return connectionTypes_; }
    }

    /// <summary>Field number for the "doc_types" field.</summary>
    public const int DocTypesFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_docTypes_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> docTypes_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// doc_types are the types of docs in the graph
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> DocTypes {
      get { return docTypes_; }
    }

    /// <summary>Field number for the "authorizers" field.</summary>
    public const int AuthorizersFieldNumber = 3;
    private global::Api.Authorizers authorizers_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.Authorizers Authorizers {
      get { return authorizers_; }
      set {
        authorizers_ = value;
      }
    }

    /// <summary>Field number for the "validators" field.</summary>
    public const int ValidatorsFieldNumber = 4;
    private global::Api.TypeValidators validators_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.TypeValidators Validators {
      get { return validators_; }
      set {
        validators_ = value;
      }
    }

    /// <summary>Field number for the "indexes" field.</summary>
    public const int IndexesFieldNumber = 5;
    private global::Api.Indexes indexes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.Indexes Indexes {
      get { return indexes_; }
      set {
        indexes_ = value;
      }
    }

    /// <summary>Field number for the "triggers" field.</summary>
    public const int TriggersFieldNumber = 6;
    private global::Api.Triggers triggers_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.Triggers Triggers {
      get { return triggers_; }
      set {
        triggers_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Schema);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Schema other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!connectionTypes_.Equals(other.connectionTypes_)) return false;
      if(!docTypes_.Equals(other.docTypes_)) return false;
      if (!object.Equals(Authorizers, other.Authorizers)) return false;
      if (!object.Equals(Validators, other.Validators)) return false;
      if (!object.Equals(Indexes, other.Indexes)) return false;
      if (!object.Equals(Triggers, other.Triggers)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= connectionTypes_.GetHashCode();
      hash ^= docTypes_.GetHashCode();
      if (authorizers_ != null) hash ^= Authorizers.GetHashCode();
      if (validators_ != null) hash ^= Validators.GetHashCode();
      if (indexes_ != null) hash ^= Indexes.GetHashCode();
      if (triggers_ != null) hash ^= Triggers.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      connectionTypes_.WriteTo(output, _repeated_connectionTypes_codec);
      docTypes_.WriteTo(output, _repeated_docTypes_codec);
      if (authorizers_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Authorizers);
      }
      if (validators_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Validators);
      }
      if (indexes_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Indexes);
      }
      if (triggers_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Triggers);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += connectionTypes_.CalculateSize(_repeated_connectionTypes_codec);
      size += docTypes_.CalculateSize(_repeated_docTypes_codec);
      if (authorizers_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Authorizers);
      }
      if (validators_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Validators);
      }
      if (indexes_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Indexes);
      }
      if (triggers_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Triggers);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Schema other) {
      if (other == null) {
        return;
      }
      connectionTypes_.Add(other.connectionTypes_);
      docTypes_.Add(other.docTypes_);
      if (other.authorizers_ != null) {
        if (authorizers_ == null) {
          authorizers_ = new global::Api.Authorizers();
        }
        Authorizers.MergeFrom(other.Authorizers);
      }
      if (other.validators_ != null) {
        if (validators_ == null) {
          validators_ = new global::Api.TypeValidators();
        }
        Validators.MergeFrom(other.Validators);
      }
      if (other.indexes_ != null) {
        if (indexes_ == null) {
          indexes_ = new global::Api.Indexes();
        }
        Indexes.MergeFrom(other.Indexes);
      }
      if (other.triggers_ != null) {
        if (triggers_ == null) {
          triggers_ = new global::Api.Triggers();
        }
        Triggers.MergeFrom(other.Triggers);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            connectionTypes_.AddEntriesFrom(input, _repeated_connectionTypes_codec);
            break;
          }
          case 18: {
            docTypes_.AddEntriesFrom(input, _repeated_docTypes_codec);
            break;
          }
          case 26: {
            if (authorizers_ == null) {
              authorizers_ = new global::Api.Authorizers();
            }
            input.ReadMessage(authorizers_);
            break;
          }
          case 34: {
            if (validators_ == null) {
              validators_ = new global::Api.TypeValidators();
            }
            input.ReadMessage(validators_);
            break;
          }
          case 42: {
            if (indexes_ == null) {
              indexes_ = new global::Api.Indexes();
            }
            input.ReadMessage(indexes_);
            break;
          }
          case 50: {
            if (triggers_ == null) {
              triggers_ = new global::Api.Triggers();
            }
            input.ReadMessage(triggers_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ExprFilter : pb::IMessage<ExprFilter> {
    private static readonly pb::MessageParser<ExprFilter> _parser = new pb::MessageParser<ExprFilter>(() => new ExprFilter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExprFilter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.GraphikReflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExprFilter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExprFilter(ExprFilter other) : this() {
      expression_ = other.expression_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExprFilter Clone() {
      return new ExprFilter(this);
    }

    /// <summary>Field number for the "expression" field.</summary>
    public const int ExpressionFieldNumber = 1;
    private string expression_ = "";
    /// <summary>
    /// expression is a CEL expression used to filter connections/nodes
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Expression {
      get { return expression_; }
      set {
        expression_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExprFilter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExprFilter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Expression != other.Expression) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Expression.Length != 0) hash ^= Expression.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Expression.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Expression);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Expression.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Expression);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExprFilter other) {
      if (other == null) {
        return;
      }
      if (other.Expression.Length != 0) {
        Expression = other.Expression;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Expression = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RaftCommand : pb::IMessage<RaftCommand> {
    private static readonly pb::MessageParser<RaftCommand> _parser = new pb::MessageParser<RaftCommand>(() => new RaftCommand());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RaftCommand> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.GraphikReflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RaftCommand() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RaftCommand(RaftCommand other) : this() {
      user_ = other.user_ != null ? other.user_.Clone() : null;
      method_ = other.method_;
      setDocs_ = other.setDocs_.Clone();
      setConnections_ = other.setConnections_.Clone();
      delDocs_ = other.delDocs_.Clone();
      delConnections_ = other.delConnections_.Clone();
      setIndexes_ = other.setIndexes_ != null ? other.setIndexes_.Clone() : null;
      setAuthorizers_ = other.setAuthorizers_ != null ? other.setAuthorizers_.Clone() : null;
      setTypeValidators_ = other.setTypeValidators_ != null ? other.setTypeValidators_.Clone() : null;
      sendMessage_ = other.sendMessage_ != null ? other.sendMessage_.Clone() : null;
      setTriggers_ = other.setTriggers_ != null ? other.setTriggers_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RaftCommand Clone() {
      return new RaftCommand(this);
    }

    /// <summary>Field number for the "user" field.</summary>
    public const int UserFieldNumber = 1;
    private global::Api.Doc user_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.Doc User {
      get { return user_; }
      set {
        user_ = value;
      }
    }

    /// <summary>Field number for the "method" field.</summary>
    public const int MethodFieldNumber = 2;
    private string method_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Method {
      get { return method_; }
      set {
        method_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "set_docs" field.</summary>
    public const int SetDocsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Api.Doc> _repeated_setDocs_codec
        = pb::FieldCodec.ForMessage(26, global::Api.Doc.Parser);
    private readonly pbc::RepeatedField<global::Api.Doc> setDocs_ = new pbc::RepeatedField<global::Api.Doc>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Api.Doc> SetDocs {
      get { return setDocs_; }
    }

    /// <summary>Field number for the "set_connections" field.</summary>
    public const int SetConnectionsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Api.Connection> _repeated_setConnections_codec
        = pb::FieldCodec.ForMessage(34, global::Api.Connection.Parser);
    private readonly pbc::RepeatedField<global::Api.Connection> setConnections_ = new pbc::RepeatedField<global::Api.Connection>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Api.Connection> SetConnections {
      get { return setConnections_; }
    }

    /// <summary>Field number for the "del_docs" field.</summary>
    public const int DelDocsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Api.Ref> _repeated_delDocs_codec
        = pb::FieldCodec.ForMessage(42, global::Api.Ref.Parser);
    private readonly pbc::RepeatedField<global::Api.Ref> delDocs_ = new pbc::RepeatedField<global::Api.Ref>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Api.Ref> DelDocs {
      get { return delDocs_; }
    }

    /// <summary>Field number for the "del_connections" field.</summary>
    public const int DelConnectionsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Api.Ref> _repeated_delConnections_codec
        = pb::FieldCodec.ForMessage(50, global::Api.Ref.Parser);
    private readonly pbc::RepeatedField<global::Api.Ref> delConnections_ = new pbc::RepeatedField<global::Api.Ref>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Api.Ref> DelConnections {
      get { return delConnections_; }
    }

    /// <summary>Field number for the "set_indexes" field.</summary>
    public const int SetIndexesFieldNumber = 7;
    private global::Api.Indexes setIndexes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.Indexes SetIndexes {
      get { return setIndexes_; }
      set {
        setIndexes_ = value;
      }
    }

    /// <summary>Field number for the "set_authorizers" field.</summary>
    public const int SetAuthorizersFieldNumber = 8;
    private global::Api.Authorizers setAuthorizers_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.Authorizers SetAuthorizers {
      get { return setAuthorizers_; }
      set {
        setAuthorizers_ = value;
      }
    }

    /// <summary>Field number for the "set_type_validators" field.</summary>
    public const int SetTypeValidatorsFieldNumber = 9;
    private global::Api.TypeValidators setTypeValidators_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.TypeValidators SetTypeValidators {
      get { return setTypeValidators_; }
      set {
        setTypeValidators_ = value;
      }
    }

    /// <summary>Field number for the "send_message" field.</summary>
    public const int SendMessageFieldNumber = 10;
    private global::Api.Message sendMessage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.Message SendMessage {
      get { return sendMessage_; }
      set {
        sendMessage_ = value;
      }
    }

    /// <summary>Field number for the "set_triggers" field.</summary>
    public const int SetTriggersFieldNumber = 11;
    private global::Api.Triggers setTriggers_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.Triggers SetTriggers {
      get { return setTriggers_; }
      set {
        setTriggers_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RaftCommand);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RaftCommand other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(User, other.User)) return false;
      if (Method != other.Method) return false;
      if(!setDocs_.Equals(other.setDocs_)) return false;
      if(!setConnections_.Equals(other.setConnections_)) return false;
      if(!delDocs_.Equals(other.delDocs_)) return false;
      if(!delConnections_.Equals(other.delConnections_)) return false;
      if (!object.Equals(SetIndexes, other.SetIndexes)) return false;
      if (!object.Equals(SetAuthorizers, other.SetAuthorizers)) return false;
      if (!object.Equals(SetTypeValidators, other.SetTypeValidators)) return false;
      if (!object.Equals(SendMessage, other.SendMessage)) return false;
      if (!object.Equals(SetTriggers, other.SetTriggers)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (user_ != null) hash ^= User.GetHashCode();
      if (Method.Length != 0) hash ^= Method.GetHashCode();
      hash ^= setDocs_.GetHashCode();
      hash ^= setConnections_.GetHashCode();
      hash ^= delDocs_.GetHashCode();
      hash ^= delConnections_.GetHashCode();
      if (setIndexes_ != null) hash ^= SetIndexes.GetHashCode();
      if (setAuthorizers_ != null) hash ^= SetAuthorizers.GetHashCode();
      if (setTypeValidators_ != null) hash ^= SetTypeValidators.GetHashCode();
      if (sendMessage_ != null) hash ^= SendMessage.GetHashCode();
      if (setTriggers_ != null) hash ^= SetTriggers.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (user_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(User);
      }
      if (Method.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Method);
      }
      setDocs_.WriteTo(output, _repeated_setDocs_codec);
      setConnections_.WriteTo(output, _repeated_setConnections_codec);
      delDocs_.WriteTo(output, _repeated_delDocs_codec);
      delConnections_.WriteTo(output, _repeated_delConnections_codec);
      if (setIndexes_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(SetIndexes);
      }
      if (setAuthorizers_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(SetAuthorizers);
      }
      if (setTypeValidators_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(SetTypeValidators);
      }
      if (sendMessage_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(SendMessage);
      }
      if (setTriggers_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(SetTriggers);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (user_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
      }
      if (Method.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Method);
      }
      size += setDocs_.CalculateSize(_repeated_setDocs_codec);
      size += setConnections_.CalculateSize(_repeated_setConnections_codec);
      size += delDocs_.CalculateSize(_repeated_delDocs_codec);
      size += delConnections_.CalculateSize(_repeated_delConnections_codec);
      if (setIndexes_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SetIndexes);
      }
      if (setAuthorizers_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SetAuthorizers);
      }
      if (setTypeValidators_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SetTypeValidators);
      }
      if (sendMessage_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SendMessage);
      }
      if (setTriggers_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SetTriggers);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RaftCommand other) {
      if (other == null) {
        return;
      }
      if (other.user_ != null) {
        if (user_ == null) {
          user_ = new global::Api.Doc();
        }
        User.MergeFrom(other.User);
      }
      if (other.Method.Length != 0) {
        Method = other.Method;
      }
      setDocs_.Add(other.setDocs_);
      setConnections_.Add(other.setConnections_);
      delDocs_.Add(other.delDocs_);
      delConnections_.Add(other.delConnections_);
      if (other.setIndexes_ != null) {
        if (setIndexes_ == null) {
          setIndexes_ = new global::Api.Indexes();
        }
        SetIndexes.MergeFrom(other.SetIndexes);
      }
      if (other.setAuthorizers_ != null) {
        if (setAuthorizers_ == null) {
          setAuthorizers_ = new global::Api.Authorizers();
        }
        SetAuthorizers.MergeFrom(other.SetAuthorizers);
      }
      if (other.setTypeValidators_ != null) {
        if (setTypeValidators_ == null) {
          setTypeValidators_ = new global::Api.TypeValidators();
        }
        SetTypeValidators.MergeFrom(other.SetTypeValidators);
      }
      if (other.sendMessage_ != null) {
        if (sendMessage_ == null) {
          sendMessage_ = new global::Api.Message();
        }
        SendMessage.MergeFrom(other.SendMessage);
      }
      if (other.setTriggers_ != null) {
        if (setTriggers_ == null) {
          setTriggers_ = new global::Api.Triggers();
        }
        SetTriggers.MergeFrom(other.SetTriggers);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (user_ == null) {
              user_ = new global::Api.Doc();
            }
            input.ReadMessage(user_);
            break;
          }
          case 18: {
            Method = input.ReadString();
            break;
          }
          case 26: {
            setDocs_.AddEntriesFrom(input, _repeated_setDocs_codec);
            break;
          }
          case 34: {
            setConnections_.AddEntriesFrom(input, _repeated_setConnections_codec);
            break;
          }
          case 42: {
            delDocs_.AddEntriesFrom(input, _repeated_delDocs_codec);
            break;
          }
          case 50: {
            delConnections_.AddEntriesFrom(input, _repeated_delConnections_codec);
            break;
          }
          case 58: {
            if (setIndexes_ == null) {
              setIndexes_ = new global::Api.Indexes();
            }
            input.ReadMessage(setIndexes_);
            break;
          }
          case 66: {
            if (setAuthorizers_ == null) {
              setAuthorizers_ = new global::Api.Authorizers();
            }
            input.ReadMessage(setAuthorizers_);
            break;
          }
          case 74: {
            if (setTypeValidators_ == null) {
              setTypeValidators_ = new global::Api.TypeValidators();
            }
            input.ReadMessage(setTypeValidators_);
            break;
          }
          case 82: {
            if (sendMessage_ == null) {
              sendMessage_ = new global::Api.Message();
            }
            input.ReadMessage(sendMessage_);
            break;
          }
          case 90: {
            if (setTriggers_ == null) {
              setTriggers_ = new global::Api.Triggers();
            }
            input.ReadMessage(setTriggers_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Peer : pb::IMessage<Peer> {
    private static readonly pb::MessageParser<Peer> _parser = new pb::MessageParser<Peer>(() => new Peer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Peer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.GraphikReflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Peer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Peer(Peer other) : this() {
      nodeId_ = other.nodeId_;
      addr_ = other.addr_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Peer Clone() {
      return new Peer(this);
    }

    /// <summary>Field number for the "node_id" field.</summary>
    public const int NodeIdFieldNumber = 1;
    private string nodeId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NodeId {
      get { return nodeId_; }
      set {
        nodeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "addr" field.</summary>
    public const int AddrFieldNumber = 2;
    private string addr_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Addr {
      get { return addr_; }
      set {
        addr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Peer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Peer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NodeId != other.NodeId) return false;
      if (Addr != other.Addr) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NodeId.Length != 0) hash ^= NodeId.GetHashCode();
      if (Addr.Length != 0) hash ^= Addr.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NodeId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NodeId);
      }
      if (Addr.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Addr);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NodeId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NodeId);
      }
      if (Addr.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Addr);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Peer other) {
      if (other == null) {
        return;
      }
      if (other.NodeId.Length != 0) {
        NodeId = other.NodeId;
      }
      if (other.Addr.Length != 0) {
        Addr = other.Addr;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            NodeId = input.ReadString();
            break;
          }
          case 18: {
            Addr = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RaftState : pb::IMessage<RaftState> {
    private static readonly pb::MessageParser<RaftState> _parser = new pb::MessageParser<RaftState>(() => new RaftState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RaftState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.GraphikReflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RaftState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RaftState(RaftState other) : this() {
      leader_ = other.leader_;
      membership_ = other.membership_;
      peers_ = other.peers_.Clone();
      stats_ = other.stats_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RaftState Clone() {
      return new RaftState(this);
    }

    /// <summary>Field number for the "leader" field.</summary>
    public const int LeaderFieldNumber = 1;
    private string leader_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Leader {
      get { return leader_; }
      set {
        leader_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "membership" field.</summary>
    public const int MembershipFieldNumber = 2;
    private global::Api.Membership membership_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.Membership Membership {
      get { return membership_; }
      set {
        membership_ = value;
      }
    }

    /// <summary>Field number for the "peers" field.</summary>
    public const int PeersFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Api.Peer> _repeated_peers_codec
        = pb::FieldCodec.ForMessage(26, global::Api.Peer.Parser);
    private readonly pbc::RepeatedField<global::Api.Peer> peers_ = new pbc::RepeatedField<global::Api.Peer>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Api.Peer> Peers {
      get { return peers_; }
    }

    /// <summary>Field number for the "stats" field.</summary>
    public const int StatsFieldNumber = 4;
    private static readonly pbc::MapField<string, string>.Codec _map_stats_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 34);
    private readonly pbc::MapField<string, string> stats_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Stats {
      get { return stats_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RaftState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RaftState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Leader != other.Leader) return false;
      if (Membership != other.Membership) return false;
      if(!peers_.Equals(other.peers_)) return false;
      if (!Stats.Equals(other.Stats)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Leader.Length != 0) hash ^= Leader.GetHashCode();
      if (Membership != 0) hash ^= Membership.GetHashCode();
      hash ^= peers_.GetHashCode();
      hash ^= Stats.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Leader.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Leader);
      }
      if (Membership != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Membership);
      }
      peers_.WriteTo(output, _repeated_peers_codec);
      stats_.WriteTo(output, _map_stats_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Leader.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Leader);
      }
      if (Membership != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Membership);
      }
      size += peers_.CalculateSize(_repeated_peers_codec);
      size += stats_.CalculateSize(_map_stats_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RaftState other) {
      if (other == null) {
        return;
      }
      if (other.Leader.Length != 0) {
        Leader = other.Leader;
      }
      if (other.Membership != 0) {
        Membership = other.Membership;
      }
      peers_.Add(other.peers_);
      stats_.Add(other.stats_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Leader = input.ReadString();
            break;
          }
          case 16: {
            membership_ = (global::Api.Membership) input.ReadEnum();
            break;
          }
          case 26: {
            peers_.AddEntriesFrom(input, _repeated_peers_codec);
            break;
          }
          case 34: {
            stats_.AddEntriesFrom(input, _map_stats_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
