/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_struct_pb = require('google-protobuf/google/protobuf/struct_pb.js');
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
var google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb.js');
var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
var github_com_mwitkow_go$proto$validators_validator_pb = require('../github.com/mwitkow/go-proto-validators/validator_pb.js');
goog.exportSymbol('proto.api.Change', null, global);
goog.exportSymbol('proto.api.ChannelFilter', null, global);
goog.exportSymbol('proto.api.Connection', null, global);
goog.exportSymbol('proto.api.ConnectionChange', null, global);
goog.exportSymbol('proto.api.ConnectionConstructor', null, global);
goog.exportSymbol('proto.api.ConnectionConstructors', null, global);
goog.exportSymbol('proto.api.ConnectionDetail', null, global);
goog.exportSymbol('proto.api.ConnectionDetails', null, global);
goog.exportSymbol('proto.api.ConnectionFilter', null, global);
goog.exportSymbol('proto.api.Connections', null, global);
goog.exportSymbol('proto.api.Doc', null, global);
goog.exportSymbol('proto.api.DocChange', null, global);
goog.exportSymbol('proto.api.DocConstructor', null, global);
goog.exportSymbol('proto.api.DocConstructors', null, global);
goog.exportSymbol('proto.api.DocDetail', null, global);
goog.exportSymbol('proto.api.DocDetailFilter', null, global);
goog.exportSymbol('proto.api.DocDetails', null, global);
goog.exportSymbol('proto.api.Docs', null, global);
goog.exportSymbol('proto.api.ExpressionFilter', null, global);
goog.exportSymbol('proto.api.Filter', null, global);
goog.exportSymbol('proto.api.Graph', null, global);
goog.exportSymbol('proto.api.MeFilter', null, global);
goog.exportSymbol('proto.api.Message', null, global);
goog.exportSymbol('proto.api.Metadata', null, global);
goog.exportSymbol('proto.api.OutboundMessage', null, global);
goog.exportSymbol('proto.api.Patch', null, global);
goog.exportSymbol('proto.api.PatchFilter', null, global);
goog.exportSymbol('proto.api.Path', null, global);
goog.exportSymbol('proto.api.Paths', null, global);
goog.exportSymbol('proto.api.Pong', null, global);
goog.exportSymbol('proto.api.Request', null, global);
goog.exportSymbol('proto.api.Schema', null, global);
goog.exportSymbol('proto.api.SubGraphFilter', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.Path = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.Path, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.Path.displayName = 'proto.api.Path';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.Path.prototype.toObject = function(opt_includeInstance) {
  return proto.api.Path.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.Path} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Path.toObject = function(includeInstance, msg) {
  var f, obj = {
    gtype: jspb.Message.getFieldWithDefault(msg, 1, ""),
    gid: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.Path}
 */
proto.api.Path.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.Path;
  return proto.api.Path.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.Path} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.Path}
 */
proto.api.Path.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGtype(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setGid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.Path.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.Path.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.Path} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Path.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGtype();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getGid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string gtype = 1;
 * @return {string}
 */
proto.api.Path.prototype.getGtype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.api.Path.prototype.setGtype = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string gid = 2;
 * @return {string}
 */
proto.api.Path.prototype.getGid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.api.Path.prototype.setGid = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.Metadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.Metadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.Metadata.displayName = 'proto.api.Metadata';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.Metadata.prototype.toObject = function(opt_includeInstance) {
  return proto.api.Metadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.Metadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Metadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    createdAt: (f = msg.getCreatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updatedAt: (f = msg.getUpdatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    createdBy: (f = msg.getCreatedBy()) && proto.api.Path.toObject(includeInstance, f),
    updatedBy: (f = msg.getUpdatedBy()) && proto.api.Path.toObject(includeInstance, f),
    sequence: jspb.Message.getFieldWithDefault(msg, 5, 0),
    version: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.Metadata}
 */
proto.api.Metadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.Metadata;
  return proto.api.Metadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.Metadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.Metadata}
 */
proto.api.Metadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdatedAt(value);
      break;
    case 3:
      var value = new proto.api.Path;
      reader.readMessage(value,proto.api.Path.deserializeBinaryFromReader);
      msg.setCreatedBy(value);
      break;
    case 4:
      var value = new proto.api.Path;
      reader.readMessage(value,proto.api.Path.deserializeBinaryFromReader);
      msg.setUpdatedBy(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSequence(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.Metadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.Metadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.Metadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Metadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdatedAt();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getCreatedBy();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.api.Path.serializeBinaryToWriter
    );
  }
  f = message.getUpdatedBy();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.api.Path.serializeBinaryToWriter
    );
  }
  f = message.getSequence();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getVersion();
  if (f !== 0) {
    writer.writeUint64(
      6,
      f
    );
  }
};


/**
 * optional google.protobuf.Timestamp created_at = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.api.Metadata.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.api.Metadata.prototype.setCreatedAt = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.Metadata.prototype.clearCreatedAt = function() {
  this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Metadata.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Timestamp updated_at = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.api.Metadata.prototype.getUpdatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.api.Metadata.prototype.setUpdatedAt = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.api.Metadata.prototype.clearUpdatedAt = function() {
  this.setUpdatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Metadata.prototype.hasUpdatedAt = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Path created_by = 3;
 * @return {?proto.api.Path}
 */
proto.api.Metadata.prototype.getCreatedBy = function() {
  return /** @type{?proto.api.Path} */ (
    jspb.Message.getWrapperField(this, proto.api.Path, 3));
};


/** @param {?proto.api.Path|undefined} value */
proto.api.Metadata.prototype.setCreatedBy = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.api.Metadata.prototype.clearCreatedBy = function() {
  this.setCreatedBy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Metadata.prototype.hasCreatedBy = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Path updated_by = 4;
 * @return {?proto.api.Path}
 */
proto.api.Metadata.prototype.getUpdatedBy = function() {
  return /** @type{?proto.api.Path} */ (
    jspb.Message.getWrapperField(this, proto.api.Path, 4));
};


/** @param {?proto.api.Path|undefined} value */
proto.api.Metadata.prototype.setUpdatedBy = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.api.Metadata.prototype.clearUpdatedBy = function() {
  this.setUpdatedBy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Metadata.prototype.hasUpdatedBy = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint64 sequence = 5;
 * @return {number}
 */
proto.api.Metadata.prototype.getSequence = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.api.Metadata.prototype.setSequence = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint64 version = 6;
 * @return {number}
 */
proto.api.Metadata.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.api.Metadata.prototype.setVersion = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.Paths = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.Paths.repeatedFields_, null);
};
goog.inherits(proto.api.Paths, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.Paths.displayName = 'proto.api.Paths';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.Paths.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.Paths.prototype.toObject = function(opt_includeInstance) {
  return proto.api.Paths.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.Paths} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Paths.toObject = function(includeInstance, msg) {
  var f, obj = {
    pathsList: jspb.Message.toObjectList(msg.getPathsList(),
    proto.api.Path.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.Paths}
 */
proto.api.Paths.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.Paths;
  return proto.api.Paths.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.Paths} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.Paths}
 */
proto.api.Paths.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.Path;
      reader.readMessage(value,proto.api.Path.deserializeBinaryFromReader);
      msg.addPaths(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.Paths.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.Paths.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.Paths} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Paths.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPathsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.api.Path.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Path paths = 1;
 * @return {!Array<!proto.api.Path>}
 */
proto.api.Paths.prototype.getPathsList = function() {
  return /** @type{!Array<!proto.api.Path>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.Path, 1));
};


/** @param {!Array<!proto.api.Path>} value */
proto.api.Paths.prototype.setPathsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.api.Path=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.Path}
 */
proto.api.Paths.prototype.addPaths = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.api.Path, opt_index);
};


proto.api.Paths.prototype.clearPathsList = function() {
  this.setPathsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.Doc = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.Doc, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.Doc.displayName = 'proto.api.Doc';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.Doc.prototype.toObject = function(opt_includeInstance) {
  return proto.api.Doc.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.Doc} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Doc.toObject = function(includeInstance, msg) {
  var f, obj = {
    path: (f = msg.getPath()) && proto.api.Path.toObject(includeInstance, f),
    attributes: (f = msg.getAttributes()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f),
    metadata: (f = msg.getMetadata()) && proto.api.Metadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.Doc}
 */
proto.api.Doc.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.Doc;
  return proto.api.Doc.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.Doc} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.Doc}
 */
proto.api.Doc.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.Path;
      reader.readMessage(value,proto.api.Path.deserializeBinaryFromReader);
      msg.setPath(value);
      break;
    case 2:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setAttributes(value);
      break;
    case 3:
      var value = new proto.api.Metadata;
      reader.readMessage(value,proto.api.Metadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.Doc.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.Doc.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.Doc} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Doc.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPath();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api.Path.serializeBinaryToWriter
    );
  }
  f = message.getAttributes();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.api.Metadata.serializeBinaryToWriter
    );
  }
};


/**
 * optional Path path = 1;
 * @return {?proto.api.Path}
 */
proto.api.Doc.prototype.getPath = function() {
  return /** @type{?proto.api.Path} */ (
    jspb.Message.getWrapperField(this, proto.api.Path, 1));
};


/** @param {?proto.api.Path|undefined} value */
proto.api.Doc.prototype.setPath = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.Doc.prototype.clearPath = function() {
  this.setPath(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Doc.prototype.hasPath = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Struct attributes = 2;
 * @return {?proto.google.protobuf.Struct}
 */
proto.api.Doc.prototype.getAttributes = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 2));
};


/** @param {?proto.google.protobuf.Struct|undefined} value */
proto.api.Doc.prototype.setAttributes = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.api.Doc.prototype.clearAttributes = function() {
  this.setAttributes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Doc.prototype.hasAttributes = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Metadata metadata = 3;
 * @return {?proto.api.Metadata}
 */
proto.api.Doc.prototype.getMetadata = function() {
  return /** @type{?proto.api.Metadata} */ (
    jspb.Message.getWrapperField(this, proto.api.Metadata, 3));
};


/** @param {?proto.api.Metadata|undefined} value */
proto.api.Doc.prototype.setMetadata = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.api.Doc.prototype.clearMetadata = function() {
  this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Doc.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.DocConstructor = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.DocConstructor, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.DocConstructor.displayName = 'proto.api.DocConstructor';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.DocConstructor.prototype.toObject = function(opt_includeInstance) {
  return proto.api.DocConstructor.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.DocConstructor} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.DocConstructor.toObject = function(includeInstance, msg) {
  var f, obj = {
    path: (f = msg.getPath()) && proto.api.Path.toObject(includeInstance, f),
    attributes: (f = msg.getAttributes()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.DocConstructor}
 */
proto.api.DocConstructor.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.DocConstructor;
  return proto.api.DocConstructor.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.DocConstructor} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.DocConstructor}
 */
proto.api.DocConstructor.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.Path;
      reader.readMessage(value,proto.api.Path.deserializeBinaryFromReader);
      msg.setPath(value);
      break;
    case 3:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setAttributes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.DocConstructor.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.DocConstructor.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.DocConstructor} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.DocConstructor.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPath();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api.Path.serializeBinaryToWriter
    );
  }
  f = message.getAttributes();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
};


/**
 * optional Path path = 1;
 * @return {?proto.api.Path}
 */
proto.api.DocConstructor.prototype.getPath = function() {
  return /** @type{?proto.api.Path} */ (
    jspb.Message.getWrapperField(this, proto.api.Path, 1));
};


/** @param {?proto.api.Path|undefined} value */
proto.api.DocConstructor.prototype.setPath = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.DocConstructor.prototype.clearPath = function() {
  this.setPath(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.DocConstructor.prototype.hasPath = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Struct attributes = 3;
 * @return {?proto.google.protobuf.Struct}
 */
proto.api.DocConstructor.prototype.getAttributes = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 3));
};


/** @param {?proto.google.protobuf.Struct|undefined} value */
proto.api.DocConstructor.prototype.setAttributes = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.api.DocConstructor.prototype.clearAttributes = function() {
  this.setAttributes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.DocConstructor.prototype.hasAttributes = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.DocConstructors = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.DocConstructors.repeatedFields_, null);
};
goog.inherits(proto.api.DocConstructors, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.DocConstructors.displayName = 'proto.api.DocConstructors';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.DocConstructors.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.DocConstructors.prototype.toObject = function(opt_includeInstance) {
  return proto.api.DocConstructors.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.DocConstructors} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.DocConstructors.toObject = function(includeInstance, msg) {
  var f, obj = {
    docsList: jspb.Message.toObjectList(msg.getDocsList(),
    proto.api.DocConstructor.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.DocConstructors}
 */
proto.api.DocConstructors.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.DocConstructors;
  return proto.api.DocConstructors.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.DocConstructors} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.DocConstructors}
 */
proto.api.DocConstructors.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.DocConstructor;
      reader.readMessage(value,proto.api.DocConstructor.deserializeBinaryFromReader);
      msg.addDocs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.DocConstructors.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.DocConstructors.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.DocConstructors} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.DocConstructors.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDocsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.api.DocConstructor.serializeBinaryToWriter
    );
  }
};


/**
 * repeated DocConstructor docs = 1;
 * @return {!Array<!proto.api.DocConstructor>}
 */
proto.api.DocConstructors.prototype.getDocsList = function() {
  return /** @type{!Array<!proto.api.DocConstructor>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.DocConstructor, 1));
};


/** @param {!Array<!proto.api.DocConstructor>} value */
proto.api.DocConstructors.prototype.setDocsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.api.DocConstructor=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.DocConstructor}
 */
proto.api.DocConstructors.prototype.addDocs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.api.DocConstructor, opt_index);
};


proto.api.DocConstructors.prototype.clearDocsList = function() {
  this.setDocsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.Docs = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.Docs.repeatedFields_, null);
};
goog.inherits(proto.api.Docs, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.Docs.displayName = 'proto.api.Docs';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.Docs.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.Docs.prototype.toObject = function(opt_includeInstance) {
  return proto.api.Docs.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.Docs} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Docs.toObject = function(includeInstance, msg) {
  var f, obj = {
    docsList: jspb.Message.toObjectList(msg.getDocsList(),
    proto.api.Doc.toObject, includeInstance),
    seekNext: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.Docs}
 */
proto.api.Docs.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.Docs;
  return proto.api.Docs.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.Docs} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.Docs}
 */
proto.api.Docs.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.Doc;
      reader.readMessage(value,proto.api.Doc.deserializeBinaryFromReader);
      msg.addDocs(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSeekNext(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.Docs.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.Docs.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.Docs} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Docs.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDocsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.api.Doc.serializeBinaryToWriter
    );
  }
  f = message.getSeekNext();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * repeated Doc docs = 1;
 * @return {!Array<!proto.api.Doc>}
 */
proto.api.Docs.prototype.getDocsList = function() {
  return /** @type{!Array<!proto.api.Doc>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.Doc, 1));
};


/** @param {!Array<!proto.api.Doc>} value */
proto.api.Docs.prototype.setDocsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.api.Doc=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.Doc}
 */
proto.api.Docs.prototype.addDocs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.api.Doc, opt_index);
};


proto.api.Docs.prototype.clearDocsList = function() {
  this.setDocsList([]);
};


/**
 * optional string seek_next = 2;
 * @return {string}
 */
proto.api.Docs.prototype.getSeekNext = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.api.Docs.prototype.setSeekNext = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.DocDetail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.DocDetail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.DocDetail.displayName = 'proto.api.DocDetail';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.DocDetail.prototype.toObject = function(opt_includeInstance) {
  return proto.api.DocDetail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.DocDetail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.DocDetail.toObject = function(includeInstance, msg) {
  var f, obj = {
    path: (f = msg.getPath()) && proto.api.Path.toObject(includeInstance, f),
    attributes: (f = msg.getAttributes()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f),
    connectionsFrom: (f = msg.getConnectionsFrom()) && proto.api.ConnectionDetails.toObject(includeInstance, f),
    connectionsTo: (f = msg.getConnectionsTo()) && proto.api.ConnectionDetails.toObject(includeInstance, f),
    metadata: (f = msg.getMetadata()) && proto.api.Metadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.DocDetail}
 */
proto.api.DocDetail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.DocDetail;
  return proto.api.DocDetail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.DocDetail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.DocDetail}
 */
proto.api.DocDetail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.Path;
      reader.readMessage(value,proto.api.Path.deserializeBinaryFromReader);
      msg.setPath(value);
      break;
    case 2:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setAttributes(value);
      break;
    case 3:
      var value = new proto.api.ConnectionDetails;
      reader.readMessage(value,proto.api.ConnectionDetails.deserializeBinaryFromReader);
      msg.setConnectionsFrom(value);
      break;
    case 4:
      var value = new proto.api.ConnectionDetails;
      reader.readMessage(value,proto.api.ConnectionDetails.deserializeBinaryFromReader);
      msg.setConnectionsTo(value);
      break;
    case 5:
      var value = new proto.api.Metadata;
      reader.readMessage(value,proto.api.Metadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.DocDetail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.DocDetail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.DocDetail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.DocDetail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPath();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api.Path.serializeBinaryToWriter
    );
  }
  f = message.getAttributes();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
  f = message.getConnectionsFrom();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.api.ConnectionDetails.serializeBinaryToWriter
    );
  }
  f = message.getConnectionsTo();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.api.ConnectionDetails.serializeBinaryToWriter
    );
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.api.Metadata.serializeBinaryToWriter
    );
  }
};


/**
 * optional Path path = 1;
 * @return {?proto.api.Path}
 */
proto.api.DocDetail.prototype.getPath = function() {
  return /** @type{?proto.api.Path} */ (
    jspb.Message.getWrapperField(this, proto.api.Path, 1));
};


/** @param {?proto.api.Path|undefined} value */
proto.api.DocDetail.prototype.setPath = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.DocDetail.prototype.clearPath = function() {
  this.setPath(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.DocDetail.prototype.hasPath = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Struct attributes = 2;
 * @return {?proto.google.protobuf.Struct}
 */
proto.api.DocDetail.prototype.getAttributes = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 2));
};


/** @param {?proto.google.protobuf.Struct|undefined} value */
proto.api.DocDetail.prototype.setAttributes = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.api.DocDetail.prototype.clearAttributes = function() {
  this.setAttributes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.DocDetail.prototype.hasAttributes = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ConnectionDetails connections_from = 3;
 * @return {?proto.api.ConnectionDetails}
 */
proto.api.DocDetail.prototype.getConnectionsFrom = function() {
  return /** @type{?proto.api.ConnectionDetails} */ (
    jspb.Message.getWrapperField(this, proto.api.ConnectionDetails, 3));
};


/** @param {?proto.api.ConnectionDetails|undefined} value */
proto.api.DocDetail.prototype.setConnectionsFrom = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.api.DocDetail.prototype.clearConnectionsFrom = function() {
  this.setConnectionsFrom(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.DocDetail.prototype.hasConnectionsFrom = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ConnectionDetails connections_to = 4;
 * @return {?proto.api.ConnectionDetails}
 */
proto.api.DocDetail.prototype.getConnectionsTo = function() {
  return /** @type{?proto.api.ConnectionDetails} */ (
    jspb.Message.getWrapperField(this, proto.api.ConnectionDetails, 4));
};


/** @param {?proto.api.ConnectionDetails|undefined} value */
proto.api.DocDetail.prototype.setConnectionsTo = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.api.DocDetail.prototype.clearConnectionsTo = function() {
  this.setConnectionsTo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.DocDetail.prototype.hasConnectionsTo = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Metadata metadata = 5;
 * @return {?proto.api.Metadata}
 */
proto.api.DocDetail.prototype.getMetadata = function() {
  return /** @type{?proto.api.Metadata} */ (
    jspb.Message.getWrapperField(this, proto.api.Metadata, 5));
};


/** @param {?proto.api.Metadata|undefined} value */
proto.api.DocDetail.prototype.setMetadata = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.api.DocDetail.prototype.clearMetadata = function() {
  this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.DocDetail.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.DocDetails = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.DocDetails.repeatedFields_, null);
};
goog.inherits(proto.api.DocDetails, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.DocDetails.displayName = 'proto.api.DocDetails';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.DocDetails.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.DocDetails.prototype.toObject = function(opt_includeInstance) {
  return proto.api.DocDetails.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.DocDetails} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.DocDetails.toObject = function(includeInstance, msg) {
  var f, obj = {
    docDetailsList: jspb.Message.toObjectList(msg.getDocDetailsList(),
    proto.api.DocDetail.toObject, includeInstance),
    seekNext: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.DocDetails}
 */
proto.api.DocDetails.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.DocDetails;
  return proto.api.DocDetails.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.DocDetails} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.DocDetails}
 */
proto.api.DocDetails.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.DocDetail;
      reader.readMessage(value,proto.api.DocDetail.deserializeBinaryFromReader);
      msg.addDocDetails(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSeekNext(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.DocDetails.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.DocDetails.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.DocDetails} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.DocDetails.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDocDetailsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.api.DocDetail.serializeBinaryToWriter
    );
  }
  f = message.getSeekNext();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * repeated DocDetail doc_details = 1;
 * @return {!Array<!proto.api.DocDetail>}
 */
proto.api.DocDetails.prototype.getDocDetailsList = function() {
  return /** @type{!Array<!proto.api.DocDetail>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.DocDetail, 1));
};


/** @param {!Array<!proto.api.DocDetail>} value */
proto.api.DocDetails.prototype.setDocDetailsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.api.DocDetail=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.DocDetail}
 */
proto.api.DocDetails.prototype.addDocDetails = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.api.DocDetail, opt_index);
};


proto.api.DocDetails.prototype.clearDocDetailsList = function() {
  this.setDocDetailsList([]);
};


/**
 * optional string seek_next = 2;
 * @return {string}
 */
proto.api.DocDetails.prototype.getSeekNext = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.api.DocDetails.prototype.setSeekNext = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.DocDetailFilter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.DocDetailFilter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.DocDetailFilter.displayName = 'proto.api.DocDetailFilter';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.DocDetailFilter.prototype.toObject = function(opt_includeInstance) {
  return proto.api.DocDetailFilter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.DocDetailFilter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.DocDetailFilter.toObject = function(includeInstance, msg) {
  var f, obj = {
    path: (f = msg.getPath()) && proto.api.Path.toObject(includeInstance, f),
    fromConnections: (f = msg.getFromConnections()) && proto.api.Filter.toObject(includeInstance, f),
    toConnections: (f = msg.getToConnections()) && proto.api.Filter.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.DocDetailFilter}
 */
proto.api.DocDetailFilter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.DocDetailFilter;
  return proto.api.DocDetailFilter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.DocDetailFilter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.DocDetailFilter}
 */
proto.api.DocDetailFilter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.Path;
      reader.readMessage(value,proto.api.Path.deserializeBinaryFromReader);
      msg.setPath(value);
      break;
    case 2:
      var value = new proto.api.Filter;
      reader.readMessage(value,proto.api.Filter.deserializeBinaryFromReader);
      msg.setFromConnections(value);
      break;
    case 3:
      var value = new proto.api.Filter;
      reader.readMessage(value,proto.api.Filter.deserializeBinaryFromReader);
      msg.setToConnections(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.DocDetailFilter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.DocDetailFilter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.DocDetailFilter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.DocDetailFilter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPath();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api.Path.serializeBinaryToWriter
    );
  }
  f = message.getFromConnections();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.api.Filter.serializeBinaryToWriter
    );
  }
  f = message.getToConnections();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.api.Filter.serializeBinaryToWriter
    );
  }
};


/**
 * optional Path path = 1;
 * @return {?proto.api.Path}
 */
proto.api.DocDetailFilter.prototype.getPath = function() {
  return /** @type{?proto.api.Path} */ (
    jspb.Message.getWrapperField(this, proto.api.Path, 1));
};


/** @param {?proto.api.Path|undefined} value */
proto.api.DocDetailFilter.prototype.setPath = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.DocDetailFilter.prototype.clearPath = function() {
  this.setPath(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.DocDetailFilter.prototype.hasPath = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Filter from_connections = 2;
 * @return {?proto.api.Filter}
 */
proto.api.DocDetailFilter.prototype.getFromConnections = function() {
  return /** @type{?proto.api.Filter} */ (
    jspb.Message.getWrapperField(this, proto.api.Filter, 2));
};


/** @param {?proto.api.Filter|undefined} value */
proto.api.DocDetailFilter.prototype.setFromConnections = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.api.DocDetailFilter.prototype.clearFromConnections = function() {
  this.setFromConnections(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.DocDetailFilter.prototype.hasFromConnections = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Filter to_connections = 3;
 * @return {?proto.api.Filter}
 */
proto.api.DocDetailFilter.prototype.getToConnections = function() {
  return /** @type{?proto.api.Filter} */ (
    jspb.Message.getWrapperField(this, proto.api.Filter, 3));
};


/** @param {?proto.api.Filter|undefined} value */
proto.api.DocDetailFilter.prototype.setToConnections = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.api.DocDetailFilter.prototype.clearToConnections = function() {
  this.setToConnections(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.DocDetailFilter.prototype.hasToConnections = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.Connection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.Connection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.Connection.displayName = 'proto.api.Connection';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.Connection.prototype.toObject = function(opt_includeInstance) {
  return proto.api.Connection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.Connection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Connection.toObject = function(includeInstance, msg) {
  var f, obj = {
    path: (f = msg.getPath()) && proto.api.Path.toObject(includeInstance, f),
    attributes: (f = msg.getAttributes()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f),
    directed: jspb.Message.getFieldWithDefault(msg, 3, false),
    from: (f = msg.getFrom()) && proto.api.Path.toObject(includeInstance, f),
    to: (f = msg.getTo()) && proto.api.Path.toObject(includeInstance, f),
    metadata: (f = msg.getMetadata()) && proto.api.Metadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.Connection}
 */
proto.api.Connection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.Connection;
  return proto.api.Connection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.Connection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.Connection}
 */
proto.api.Connection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.Path;
      reader.readMessage(value,proto.api.Path.deserializeBinaryFromReader);
      msg.setPath(value);
      break;
    case 2:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setAttributes(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDirected(value);
      break;
    case 4:
      var value = new proto.api.Path;
      reader.readMessage(value,proto.api.Path.deserializeBinaryFromReader);
      msg.setFrom(value);
      break;
    case 5:
      var value = new proto.api.Path;
      reader.readMessage(value,proto.api.Path.deserializeBinaryFromReader);
      msg.setTo(value);
      break;
    case 6:
      var value = new proto.api.Metadata;
      reader.readMessage(value,proto.api.Metadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.Connection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.Connection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.Connection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Connection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPath();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api.Path.serializeBinaryToWriter
    );
  }
  f = message.getAttributes();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
  f = message.getDirected();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getFrom();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.api.Path.serializeBinaryToWriter
    );
  }
  f = message.getTo();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.api.Path.serializeBinaryToWriter
    );
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.api.Metadata.serializeBinaryToWriter
    );
  }
};


/**
 * optional Path path = 1;
 * @return {?proto.api.Path}
 */
proto.api.Connection.prototype.getPath = function() {
  return /** @type{?proto.api.Path} */ (
    jspb.Message.getWrapperField(this, proto.api.Path, 1));
};


/** @param {?proto.api.Path|undefined} value */
proto.api.Connection.prototype.setPath = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.Connection.prototype.clearPath = function() {
  this.setPath(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Connection.prototype.hasPath = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Struct attributes = 2;
 * @return {?proto.google.protobuf.Struct}
 */
proto.api.Connection.prototype.getAttributes = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 2));
};


/** @param {?proto.google.protobuf.Struct|undefined} value */
proto.api.Connection.prototype.setAttributes = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.api.Connection.prototype.clearAttributes = function() {
  this.setAttributes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Connection.prototype.hasAttributes = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool directed = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.api.Connection.prototype.getDirected = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.api.Connection.prototype.setDirected = function(value) {
  jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional Path from = 4;
 * @return {?proto.api.Path}
 */
proto.api.Connection.prototype.getFrom = function() {
  return /** @type{?proto.api.Path} */ (
    jspb.Message.getWrapperField(this, proto.api.Path, 4));
};


/** @param {?proto.api.Path|undefined} value */
proto.api.Connection.prototype.setFrom = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.api.Connection.prototype.clearFrom = function() {
  this.setFrom(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Connection.prototype.hasFrom = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Path to = 5;
 * @return {?proto.api.Path}
 */
proto.api.Connection.prototype.getTo = function() {
  return /** @type{?proto.api.Path} */ (
    jspb.Message.getWrapperField(this, proto.api.Path, 5));
};


/** @param {?proto.api.Path|undefined} value */
proto.api.Connection.prototype.setTo = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.api.Connection.prototype.clearTo = function() {
  this.setTo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Connection.prototype.hasTo = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Metadata metadata = 6;
 * @return {?proto.api.Metadata}
 */
proto.api.Connection.prototype.getMetadata = function() {
  return /** @type{?proto.api.Metadata} */ (
    jspb.Message.getWrapperField(this, proto.api.Metadata, 6));
};


/** @param {?proto.api.Metadata|undefined} value */
proto.api.Connection.prototype.setMetadata = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.api.Connection.prototype.clearMetadata = function() {
  this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Connection.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.ConnectionConstructor = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.ConnectionConstructor, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.ConnectionConstructor.displayName = 'proto.api.ConnectionConstructor';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.ConnectionConstructor.prototype.toObject = function(opt_includeInstance) {
  return proto.api.ConnectionConstructor.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.ConnectionConstructor} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.ConnectionConstructor.toObject = function(includeInstance, msg) {
  var f, obj = {
    path: (f = msg.getPath()) && proto.api.Path.toObject(includeInstance, f),
    attributes: (f = msg.getAttributes()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f),
    directed: jspb.Message.getFieldWithDefault(msg, 4, false),
    from: (f = msg.getFrom()) && proto.api.Path.toObject(includeInstance, f),
    to: (f = msg.getTo()) && proto.api.Path.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.ConnectionConstructor}
 */
proto.api.ConnectionConstructor.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.ConnectionConstructor;
  return proto.api.ConnectionConstructor.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.ConnectionConstructor} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.ConnectionConstructor}
 */
proto.api.ConnectionConstructor.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.Path;
      reader.readMessage(value,proto.api.Path.deserializeBinaryFromReader);
      msg.setPath(value);
      break;
    case 3:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setAttributes(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDirected(value);
      break;
    case 5:
      var value = new proto.api.Path;
      reader.readMessage(value,proto.api.Path.deserializeBinaryFromReader);
      msg.setFrom(value);
      break;
    case 6:
      var value = new proto.api.Path;
      reader.readMessage(value,proto.api.Path.deserializeBinaryFromReader);
      msg.setTo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.ConnectionConstructor.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.ConnectionConstructor.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.ConnectionConstructor} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.ConnectionConstructor.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPath();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api.Path.serializeBinaryToWriter
    );
  }
  f = message.getAttributes();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
  f = message.getDirected();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getFrom();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.api.Path.serializeBinaryToWriter
    );
  }
  f = message.getTo();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.api.Path.serializeBinaryToWriter
    );
  }
};


/**
 * optional Path path = 1;
 * @return {?proto.api.Path}
 */
proto.api.ConnectionConstructor.prototype.getPath = function() {
  return /** @type{?proto.api.Path} */ (
    jspb.Message.getWrapperField(this, proto.api.Path, 1));
};


/** @param {?proto.api.Path|undefined} value */
proto.api.ConnectionConstructor.prototype.setPath = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.ConnectionConstructor.prototype.clearPath = function() {
  this.setPath(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.ConnectionConstructor.prototype.hasPath = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Struct attributes = 3;
 * @return {?proto.google.protobuf.Struct}
 */
proto.api.ConnectionConstructor.prototype.getAttributes = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 3));
};


/** @param {?proto.google.protobuf.Struct|undefined} value */
proto.api.ConnectionConstructor.prototype.setAttributes = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.api.ConnectionConstructor.prototype.clearAttributes = function() {
  this.setAttributes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.ConnectionConstructor.prototype.hasAttributes = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool directed = 4;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.api.ConnectionConstructor.prototype.getDirected = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));
};


/** @param {boolean} value */
proto.api.ConnectionConstructor.prototype.setDirected = function(value) {
  jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional Path from = 5;
 * @return {?proto.api.Path}
 */
proto.api.ConnectionConstructor.prototype.getFrom = function() {
  return /** @type{?proto.api.Path} */ (
    jspb.Message.getWrapperField(this, proto.api.Path, 5));
};


/** @param {?proto.api.Path|undefined} value */
proto.api.ConnectionConstructor.prototype.setFrom = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.api.ConnectionConstructor.prototype.clearFrom = function() {
  this.setFrom(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.ConnectionConstructor.prototype.hasFrom = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Path to = 6;
 * @return {?proto.api.Path}
 */
proto.api.ConnectionConstructor.prototype.getTo = function() {
  return /** @type{?proto.api.Path} */ (
    jspb.Message.getWrapperField(this, proto.api.Path, 6));
};


/** @param {?proto.api.Path|undefined} value */
proto.api.ConnectionConstructor.prototype.setTo = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.api.ConnectionConstructor.prototype.clearTo = function() {
  this.setTo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.ConnectionConstructor.prototype.hasTo = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.ConnectionConstructors = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.ConnectionConstructors.repeatedFields_, null);
};
goog.inherits(proto.api.ConnectionConstructors, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.ConnectionConstructors.displayName = 'proto.api.ConnectionConstructors';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.ConnectionConstructors.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.ConnectionConstructors.prototype.toObject = function(opt_includeInstance) {
  return proto.api.ConnectionConstructors.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.ConnectionConstructors} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.ConnectionConstructors.toObject = function(includeInstance, msg) {
  var f, obj = {
    connectionsList: jspb.Message.toObjectList(msg.getConnectionsList(),
    proto.api.ConnectionConstructor.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.ConnectionConstructors}
 */
proto.api.ConnectionConstructors.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.ConnectionConstructors;
  return proto.api.ConnectionConstructors.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.ConnectionConstructors} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.ConnectionConstructors}
 */
proto.api.ConnectionConstructors.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.ConnectionConstructor;
      reader.readMessage(value,proto.api.ConnectionConstructor.deserializeBinaryFromReader);
      msg.addConnections(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.ConnectionConstructors.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.ConnectionConstructors.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.ConnectionConstructors} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.ConnectionConstructors.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConnectionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.api.ConnectionConstructor.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ConnectionConstructor connections = 1;
 * @return {!Array<!proto.api.ConnectionConstructor>}
 */
proto.api.ConnectionConstructors.prototype.getConnectionsList = function() {
  return /** @type{!Array<!proto.api.ConnectionConstructor>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.ConnectionConstructor, 1));
};


/** @param {!Array<!proto.api.ConnectionConstructor>} value */
proto.api.ConnectionConstructors.prototype.setConnectionsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.api.ConnectionConstructor=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.ConnectionConstructor}
 */
proto.api.ConnectionConstructors.prototype.addConnections = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.api.ConnectionConstructor, opt_index);
};


proto.api.ConnectionConstructors.prototype.clearConnectionsList = function() {
  this.setConnectionsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.Connections = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.Connections.repeatedFields_, null);
};
goog.inherits(proto.api.Connections, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.Connections.displayName = 'proto.api.Connections';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.Connections.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.Connections.prototype.toObject = function(opt_includeInstance) {
  return proto.api.Connections.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.Connections} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Connections.toObject = function(includeInstance, msg) {
  var f, obj = {
    connectionsList: jspb.Message.toObjectList(msg.getConnectionsList(),
    proto.api.Connection.toObject, includeInstance),
    seekNext: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.Connections}
 */
proto.api.Connections.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.Connections;
  return proto.api.Connections.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.Connections} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.Connections}
 */
proto.api.Connections.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.Connection;
      reader.readMessage(value,proto.api.Connection.deserializeBinaryFromReader);
      msg.addConnections(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSeekNext(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.Connections.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.Connections.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.Connections} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Connections.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConnectionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.api.Connection.serializeBinaryToWriter
    );
  }
  f = message.getSeekNext();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * repeated Connection connections = 1;
 * @return {!Array<!proto.api.Connection>}
 */
proto.api.Connections.prototype.getConnectionsList = function() {
  return /** @type{!Array<!proto.api.Connection>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.Connection, 1));
};


/** @param {!Array<!proto.api.Connection>} value */
proto.api.Connections.prototype.setConnectionsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.api.Connection=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.Connection}
 */
proto.api.Connections.prototype.addConnections = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.api.Connection, opt_index);
};


proto.api.Connections.prototype.clearConnectionsList = function() {
  this.setConnectionsList([]);
};


/**
 * optional string seek_next = 2;
 * @return {string}
 */
proto.api.Connections.prototype.getSeekNext = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.api.Connections.prototype.setSeekNext = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.ConnectionDetail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.ConnectionDetail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.ConnectionDetail.displayName = 'proto.api.ConnectionDetail';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.ConnectionDetail.prototype.toObject = function(opt_includeInstance) {
  return proto.api.ConnectionDetail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.ConnectionDetail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.ConnectionDetail.toObject = function(includeInstance, msg) {
  var f, obj = {
    path: (f = msg.getPath()) && proto.api.Path.toObject(includeInstance, f),
    attributes: (f = msg.getAttributes()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f),
    directed: jspb.Message.getFieldWithDefault(msg, 3, false),
    from: (f = msg.getFrom()) && proto.api.Doc.toObject(includeInstance, f),
    to: (f = msg.getTo()) && proto.api.Doc.toObject(includeInstance, f),
    metadata: (f = msg.getMetadata()) && proto.api.Metadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.ConnectionDetail}
 */
proto.api.ConnectionDetail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.ConnectionDetail;
  return proto.api.ConnectionDetail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.ConnectionDetail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.ConnectionDetail}
 */
proto.api.ConnectionDetail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.Path;
      reader.readMessage(value,proto.api.Path.deserializeBinaryFromReader);
      msg.setPath(value);
      break;
    case 2:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setAttributes(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDirected(value);
      break;
    case 4:
      var value = new proto.api.Doc;
      reader.readMessage(value,proto.api.Doc.deserializeBinaryFromReader);
      msg.setFrom(value);
      break;
    case 5:
      var value = new proto.api.Doc;
      reader.readMessage(value,proto.api.Doc.deserializeBinaryFromReader);
      msg.setTo(value);
      break;
    case 6:
      var value = new proto.api.Metadata;
      reader.readMessage(value,proto.api.Metadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.ConnectionDetail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.ConnectionDetail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.ConnectionDetail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.ConnectionDetail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPath();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api.Path.serializeBinaryToWriter
    );
  }
  f = message.getAttributes();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
  f = message.getDirected();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getFrom();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.api.Doc.serializeBinaryToWriter
    );
  }
  f = message.getTo();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.api.Doc.serializeBinaryToWriter
    );
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.api.Metadata.serializeBinaryToWriter
    );
  }
};


/**
 * optional Path path = 1;
 * @return {?proto.api.Path}
 */
proto.api.ConnectionDetail.prototype.getPath = function() {
  return /** @type{?proto.api.Path} */ (
    jspb.Message.getWrapperField(this, proto.api.Path, 1));
};


/** @param {?proto.api.Path|undefined} value */
proto.api.ConnectionDetail.prototype.setPath = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.ConnectionDetail.prototype.clearPath = function() {
  this.setPath(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.ConnectionDetail.prototype.hasPath = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Struct attributes = 2;
 * @return {?proto.google.protobuf.Struct}
 */
proto.api.ConnectionDetail.prototype.getAttributes = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 2));
};


/** @param {?proto.google.protobuf.Struct|undefined} value */
proto.api.ConnectionDetail.prototype.setAttributes = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.api.ConnectionDetail.prototype.clearAttributes = function() {
  this.setAttributes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.ConnectionDetail.prototype.hasAttributes = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool directed = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.api.ConnectionDetail.prototype.getDirected = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.api.ConnectionDetail.prototype.setDirected = function(value) {
  jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional Doc from = 4;
 * @return {?proto.api.Doc}
 */
proto.api.ConnectionDetail.prototype.getFrom = function() {
  return /** @type{?proto.api.Doc} */ (
    jspb.Message.getWrapperField(this, proto.api.Doc, 4));
};


/** @param {?proto.api.Doc|undefined} value */
proto.api.ConnectionDetail.prototype.setFrom = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.api.ConnectionDetail.prototype.clearFrom = function() {
  this.setFrom(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.ConnectionDetail.prototype.hasFrom = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Doc to = 5;
 * @return {?proto.api.Doc}
 */
proto.api.ConnectionDetail.prototype.getTo = function() {
  return /** @type{?proto.api.Doc} */ (
    jspb.Message.getWrapperField(this, proto.api.Doc, 5));
};


/** @param {?proto.api.Doc|undefined} value */
proto.api.ConnectionDetail.prototype.setTo = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.api.ConnectionDetail.prototype.clearTo = function() {
  this.setTo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.ConnectionDetail.prototype.hasTo = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Metadata metadata = 6;
 * @return {?proto.api.Metadata}
 */
proto.api.ConnectionDetail.prototype.getMetadata = function() {
  return /** @type{?proto.api.Metadata} */ (
    jspb.Message.getWrapperField(this, proto.api.Metadata, 6));
};


/** @param {?proto.api.Metadata|undefined} value */
proto.api.ConnectionDetail.prototype.setMetadata = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.api.ConnectionDetail.prototype.clearMetadata = function() {
  this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.ConnectionDetail.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.ConnectionDetails = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.ConnectionDetails.repeatedFields_, null);
};
goog.inherits(proto.api.ConnectionDetails, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.ConnectionDetails.displayName = 'proto.api.ConnectionDetails';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.ConnectionDetails.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.ConnectionDetails.prototype.toObject = function(opt_includeInstance) {
  return proto.api.ConnectionDetails.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.ConnectionDetails} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.ConnectionDetails.toObject = function(includeInstance, msg) {
  var f, obj = {
    connectionsList: jspb.Message.toObjectList(msg.getConnectionsList(),
    proto.api.ConnectionDetail.toObject, includeInstance),
    seekNext: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.ConnectionDetails}
 */
proto.api.ConnectionDetails.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.ConnectionDetails;
  return proto.api.ConnectionDetails.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.ConnectionDetails} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.ConnectionDetails}
 */
proto.api.ConnectionDetails.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.ConnectionDetail;
      reader.readMessage(value,proto.api.ConnectionDetail.deserializeBinaryFromReader);
      msg.addConnections(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSeekNext(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.ConnectionDetails.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.ConnectionDetails.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.ConnectionDetails} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.ConnectionDetails.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConnectionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.api.ConnectionDetail.serializeBinaryToWriter
    );
  }
  f = message.getSeekNext();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * repeated ConnectionDetail connections = 1;
 * @return {!Array<!proto.api.ConnectionDetail>}
 */
proto.api.ConnectionDetails.prototype.getConnectionsList = function() {
  return /** @type{!Array<!proto.api.ConnectionDetail>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.ConnectionDetail, 1));
};


/** @param {!Array<!proto.api.ConnectionDetail>} value */
proto.api.ConnectionDetails.prototype.setConnectionsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.api.ConnectionDetail=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.ConnectionDetail}
 */
proto.api.ConnectionDetails.prototype.addConnections = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.api.ConnectionDetail, opt_index);
};


proto.api.ConnectionDetails.prototype.clearConnectionsList = function() {
  this.setConnectionsList([]);
};


/**
 * optional string seek_next = 2;
 * @return {string}
 */
proto.api.ConnectionDetails.prototype.getSeekNext = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.api.ConnectionDetails.prototype.setSeekNext = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.ConnectionFilter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.ConnectionFilter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.ConnectionFilter.displayName = 'proto.api.ConnectionFilter';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.ConnectionFilter.prototype.toObject = function(opt_includeInstance) {
  return proto.api.ConnectionFilter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.ConnectionFilter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.ConnectionFilter.toObject = function(includeInstance, msg) {
  var f, obj = {
    docPath: (f = msg.getDocPath()) && proto.api.Path.toObject(includeInstance, f),
    gtype: jspb.Message.getFieldWithDefault(msg, 2, ""),
    expression: jspb.Message.getFieldWithDefault(msg, 3, ""),
    limit: jspb.Message.getFieldWithDefault(msg, 4, 0),
    sort: jspb.Message.getFieldWithDefault(msg, 5, ""),
    seek: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.ConnectionFilter}
 */
proto.api.ConnectionFilter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.ConnectionFilter;
  return proto.api.ConnectionFilter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.ConnectionFilter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.ConnectionFilter}
 */
proto.api.ConnectionFilter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.Path;
      reader.readMessage(value,proto.api.Path.deserializeBinaryFromReader);
      msg.setDocPath(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setGtype(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setExpression(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setSort(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSeek(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.ConnectionFilter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.ConnectionFilter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.ConnectionFilter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.ConnectionFilter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDocPath();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api.Path.serializeBinaryToWriter
    );
  }
  f = message.getGtype();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getExpression();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getSort();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getSeek();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional Path doc_path = 1;
 * @return {?proto.api.Path}
 */
proto.api.ConnectionFilter.prototype.getDocPath = function() {
  return /** @type{?proto.api.Path} */ (
    jspb.Message.getWrapperField(this, proto.api.Path, 1));
};


/** @param {?proto.api.Path|undefined} value */
proto.api.ConnectionFilter.prototype.setDocPath = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.ConnectionFilter.prototype.clearDocPath = function() {
  this.setDocPath(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.ConnectionFilter.prototype.hasDocPath = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string gtype = 2;
 * @return {string}
 */
proto.api.ConnectionFilter.prototype.getGtype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.api.ConnectionFilter.prototype.setGtype = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string expression = 3;
 * @return {string}
 */
proto.api.ConnectionFilter.prototype.getExpression = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.api.ConnectionFilter.prototype.setExpression = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 limit = 4;
 * @return {number}
 */
proto.api.ConnectionFilter.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.api.ConnectionFilter.prototype.setLimit = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string sort = 5;
 * @return {string}
 */
proto.api.ConnectionFilter.prototype.getSort = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.api.ConnectionFilter.prototype.setSort = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string seek = 6;
 * @return {string}
 */
proto.api.ConnectionFilter.prototype.getSeek = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.api.ConnectionFilter.prototype.setSeek = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.Filter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.Filter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.Filter.displayName = 'proto.api.Filter';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.Filter.prototype.toObject = function(opt_includeInstance) {
  return proto.api.Filter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.Filter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Filter.toObject = function(includeInstance, msg) {
  var f, obj = {
    gtype: jspb.Message.getFieldWithDefault(msg, 1, ""),
    expression: jspb.Message.getFieldWithDefault(msg, 2, ""),
    limit: jspb.Message.getFieldWithDefault(msg, 3, 0),
    sort: jspb.Message.getFieldWithDefault(msg, 4, ""),
    seek: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.Filter}
 */
proto.api.Filter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.Filter;
  return proto.api.Filter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.Filter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.Filter}
 */
proto.api.Filter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGtype(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setExpression(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSort(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setSeek(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.Filter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.Filter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.Filter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Filter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGtype();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getExpression();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getSort();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getSeek();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string gtype = 1;
 * @return {string}
 */
proto.api.Filter.prototype.getGtype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.api.Filter.prototype.setGtype = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string expression = 2;
 * @return {string}
 */
proto.api.Filter.prototype.getExpression = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.api.Filter.prototype.setExpression = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 limit = 3;
 * @return {number}
 */
proto.api.Filter.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.api.Filter.prototype.setLimit = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string sort = 4;
 * @return {string}
 */
proto.api.Filter.prototype.getSort = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.api.Filter.prototype.setSort = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string seek = 5;
 * @return {string}
 */
proto.api.Filter.prototype.getSeek = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.api.Filter.prototype.setSeek = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.MeFilter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.MeFilter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.MeFilter.displayName = 'proto.api.MeFilter';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.MeFilter.prototype.toObject = function(opt_includeInstance) {
  return proto.api.MeFilter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.MeFilter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.MeFilter.toObject = function(includeInstance, msg) {
  var f, obj = {
    connectionsFrom: (f = msg.getConnectionsFrom()) && proto.api.Filter.toObject(includeInstance, f),
    connectionsTo: (f = msg.getConnectionsTo()) && proto.api.Filter.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.MeFilter}
 */
proto.api.MeFilter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.MeFilter;
  return proto.api.MeFilter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.MeFilter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.MeFilter}
 */
proto.api.MeFilter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.Filter;
      reader.readMessage(value,proto.api.Filter.deserializeBinaryFromReader);
      msg.setConnectionsFrom(value);
      break;
    case 2:
      var value = new proto.api.Filter;
      reader.readMessage(value,proto.api.Filter.deserializeBinaryFromReader);
      msg.setConnectionsTo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.MeFilter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.MeFilter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.MeFilter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.MeFilter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConnectionsFrom();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api.Filter.serializeBinaryToWriter
    );
  }
  f = message.getConnectionsTo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.api.Filter.serializeBinaryToWriter
    );
  }
};


/**
 * optional Filter connections_from = 1;
 * @return {?proto.api.Filter}
 */
proto.api.MeFilter.prototype.getConnectionsFrom = function() {
  return /** @type{?proto.api.Filter} */ (
    jspb.Message.getWrapperField(this, proto.api.Filter, 1));
};


/** @param {?proto.api.Filter|undefined} value */
proto.api.MeFilter.prototype.setConnectionsFrom = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.MeFilter.prototype.clearConnectionsFrom = function() {
  this.setConnectionsFrom(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.MeFilter.prototype.hasConnectionsFrom = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Filter connections_to = 2;
 * @return {?proto.api.Filter}
 */
proto.api.MeFilter.prototype.getConnectionsTo = function() {
  return /** @type{?proto.api.Filter} */ (
    jspb.Message.getWrapperField(this, proto.api.Filter, 2));
};


/** @param {?proto.api.Filter|undefined} value */
proto.api.MeFilter.prototype.setConnectionsTo = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.api.MeFilter.prototype.clearConnectionsTo = function() {
  this.setConnectionsTo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.MeFilter.prototype.hasConnectionsTo = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.ChannelFilter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.ChannelFilter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.ChannelFilter.displayName = 'proto.api.ChannelFilter';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.ChannelFilter.prototype.toObject = function(opt_includeInstance) {
  return proto.api.ChannelFilter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.ChannelFilter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.ChannelFilter.toObject = function(includeInstance, msg) {
  var f, obj = {
    channel: jspb.Message.getFieldWithDefault(msg, 1, ""),
    expression: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.ChannelFilter}
 */
proto.api.ChannelFilter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.ChannelFilter;
  return proto.api.ChannelFilter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.ChannelFilter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.ChannelFilter}
 */
proto.api.ChannelFilter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannel(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setExpression(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.ChannelFilter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.ChannelFilter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.ChannelFilter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.ChannelFilter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChannel();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getExpression();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string channel = 1;
 * @return {string}
 */
proto.api.ChannelFilter.prototype.getChannel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.api.ChannelFilter.prototype.setChannel = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string expression = 2;
 * @return {string}
 */
proto.api.ChannelFilter.prototype.getExpression = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.api.ChannelFilter.prototype.setExpression = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.SubGraphFilter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.SubGraphFilter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.SubGraphFilter.displayName = 'proto.api.SubGraphFilter';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.SubGraphFilter.prototype.toObject = function(opt_includeInstance) {
  return proto.api.SubGraphFilter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.SubGraphFilter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.SubGraphFilter.toObject = function(includeInstance, msg) {
  var f, obj = {
    docFilter: (f = msg.getDocFilter()) && proto.api.Filter.toObject(includeInstance, f),
    connectionFilter: (f = msg.getConnectionFilter()) && proto.api.Filter.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.SubGraphFilter}
 */
proto.api.SubGraphFilter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.SubGraphFilter;
  return proto.api.SubGraphFilter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.SubGraphFilter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.SubGraphFilter}
 */
proto.api.SubGraphFilter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.Filter;
      reader.readMessage(value,proto.api.Filter.deserializeBinaryFromReader);
      msg.setDocFilter(value);
      break;
    case 2:
      var value = new proto.api.Filter;
      reader.readMessage(value,proto.api.Filter.deserializeBinaryFromReader);
      msg.setConnectionFilter(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.SubGraphFilter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.SubGraphFilter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.SubGraphFilter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.SubGraphFilter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDocFilter();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api.Filter.serializeBinaryToWriter
    );
  }
  f = message.getConnectionFilter();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.api.Filter.serializeBinaryToWriter
    );
  }
};


/**
 * optional Filter doc_filter = 1;
 * @return {?proto.api.Filter}
 */
proto.api.SubGraphFilter.prototype.getDocFilter = function() {
  return /** @type{?proto.api.Filter} */ (
    jspb.Message.getWrapperField(this, proto.api.Filter, 1));
};


/** @param {?proto.api.Filter|undefined} value */
proto.api.SubGraphFilter.prototype.setDocFilter = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.SubGraphFilter.prototype.clearDocFilter = function() {
  this.setDocFilter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.SubGraphFilter.prototype.hasDocFilter = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Filter connection_filter = 2;
 * @return {?proto.api.Filter}
 */
proto.api.SubGraphFilter.prototype.getConnectionFilter = function() {
  return /** @type{?proto.api.Filter} */ (
    jspb.Message.getWrapperField(this, proto.api.Filter, 2));
};


/** @param {?proto.api.Filter|undefined} value */
proto.api.SubGraphFilter.prototype.setConnectionFilter = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.api.SubGraphFilter.prototype.clearConnectionFilter = function() {
  this.setConnectionFilter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.SubGraphFilter.prototype.hasConnectionFilter = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.Graph = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.Graph, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.Graph.displayName = 'proto.api.Graph';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.Graph.prototype.toObject = function(opt_includeInstance) {
  return proto.api.Graph.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.Graph} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Graph.toObject = function(includeInstance, msg) {
  var f, obj = {
    docs: (f = msg.getDocs()) && proto.api.Docs.toObject(includeInstance, f),
    connections: (f = msg.getConnections()) && proto.api.Connections.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.Graph}
 */
proto.api.Graph.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.Graph;
  return proto.api.Graph.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.Graph} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.Graph}
 */
proto.api.Graph.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.Docs;
      reader.readMessage(value,proto.api.Docs.deserializeBinaryFromReader);
      msg.setDocs(value);
      break;
    case 2:
      var value = new proto.api.Connections;
      reader.readMessage(value,proto.api.Connections.deserializeBinaryFromReader);
      msg.setConnections(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.Graph.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.Graph.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.Graph} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Graph.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDocs();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api.Docs.serializeBinaryToWriter
    );
  }
  f = message.getConnections();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.api.Connections.serializeBinaryToWriter
    );
  }
};


/**
 * optional Docs docs = 1;
 * @return {?proto.api.Docs}
 */
proto.api.Graph.prototype.getDocs = function() {
  return /** @type{?proto.api.Docs} */ (
    jspb.Message.getWrapperField(this, proto.api.Docs, 1));
};


/** @param {?proto.api.Docs|undefined} value */
proto.api.Graph.prototype.setDocs = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.Graph.prototype.clearDocs = function() {
  this.setDocs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Graph.prototype.hasDocs = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Connections connections = 2;
 * @return {?proto.api.Connections}
 */
proto.api.Graph.prototype.getConnections = function() {
  return /** @type{?proto.api.Connections} */ (
    jspb.Message.getWrapperField(this, proto.api.Connections, 2));
};


/** @param {?proto.api.Connections|undefined} value */
proto.api.Graph.prototype.setConnections = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.api.Graph.prototype.clearConnections = function() {
  this.setConnections(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Graph.prototype.hasConnections = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.Patch = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.Patch, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.Patch.displayName = 'proto.api.Patch';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.Patch.prototype.toObject = function(opt_includeInstance) {
  return proto.api.Patch.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.Patch} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Patch.toObject = function(includeInstance, msg) {
  var f, obj = {
    path: (f = msg.getPath()) && proto.api.Path.toObject(includeInstance, f),
    attributes: (f = msg.getAttributes()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.Patch}
 */
proto.api.Patch.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.Patch;
  return proto.api.Patch.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.Patch} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.Patch}
 */
proto.api.Patch.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.Path;
      reader.readMessage(value,proto.api.Path.deserializeBinaryFromReader);
      msg.setPath(value);
      break;
    case 2:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setAttributes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.Patch.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.Patch.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.Patch} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Patch.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPath();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api.Path.serializeBinaryToWriter
    );
  }
  f = message.getAttributes();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
};


/**
 * optional Path path = 1;
 * @return {?proto.api.Path}
 */
proto.api.Patch.prototype.getPath = function() {
  return /** @type{?proto.api.Path} */ (
    jspb.Message.getWrapperField(this, proto.api.Path, 1));
};


/** @param {?proto.api.Path|undefined} value */
proto.api.Patch.prototype.setPath = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.Patch.prototype.clearPath = function() {
  this.setPath(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Patch.prototype.hasPath = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Struct attributes = 2;
 * @return {?proto.google.protobuf.Struct}
 */
proto.api.Patch.prototype.getAttributes = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 2));
};


/** @param {?proto.google.protobuf.Struct|undefined} value */
proto.api.Patch.prototype.setAttributes = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.api.Patch.prototype.clearAttributes = function() {
  this.setAttributes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Patch.prototype.hasAttributes = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.PatchFilter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.PatchFilter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.PatchFilter.displayName = 'proto.api.PatchFilter';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.PatchFilter.prototype.toObject = function(opt_includeInstance) {
  return proto.api.PatchFilter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.PatchFilter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.PatchFilter.toObject = function(includeInstance, msg) {
  var f, obj = {
    filter: (f = msg.getFilter()) && proto.api.Filter.toObject(includeInstance, f),
    attributes: (f = msg.getAttributes()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.PatchFilter}
 */
proto.api.PatchFilter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.PatchFilter;
  return proto.api.PatchFilter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.PatchFilter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.PatchFilter}
 */
proto.api.PatchFilter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.Filter;
      reader.readMessage(value,proto.api.Filter.deserializeBinaryFromReader);
      msg.setFilter(value);
      break;
    case 2:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setAttributes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.PatchFilter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.PatchFilter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.PatchFilter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.PatchFilter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFilter();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api.Filter.serializeBinaryToWriter
    );
  }
  f = message.getAttributes();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
};


/**
 * optional Filter filter = 1;
 * @return {?proto.api.Filter}
 */
proto.api.PatchFilter.prototype.getFilter = function() {
  return /** @type{?proto.api.Filter} */ (
    jspb.Message.getWrapperField(this, proto.api.Filter, 1));
};


/** @param {?proto.api.Filter|undefined} value */
proto.api.PatchFilter.prototype.setFilter = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.PatchFilter.prototype.clearFilter = function() {
  this.setFilter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.PatchFilter.prototype.hasFilter = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Struct attributes = 2;
 * @return {?proto.google.protobuf.Struct}
 */
proto.api.PatchFilter.prototype.getAttributes = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 2));
};


/** @param {?proto.google.protobuf.Struct|undefined} value */
proto.api.PatchFilter.prototype.setAttributes = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.api.PatchFilter.prototype.clearAttributes = function() {
  this.setAttributes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.PatchFilter.prototype.hasAttributes = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.Pong = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.Pong, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.Pong.displayName = 'proto.api.Pong';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.Pong.prototype.toObject = function(opt_includeInstance) {
  return proto.api.Pong.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.Pong} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Pong.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.Pong}
 */
proto.api.Pong.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.Pong;
  return proto.api.Pong.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.Pong} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.Pong}
 */
proto.api.Pong.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.Pong.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.Pong.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.Pong} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Pong.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string message = 1;
 * @return {string}
 */
proto.api.Pong.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.api.Pong.prototype.setMessage = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.OutboundMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.OutboundMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.OutboundMessage.displayName = 'proto.api.OutboundMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.OutboundMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.api.OutboundMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.OutboundMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.OutboundMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    channel: jspb.Message.getFieldWithDefault(msg, 1, ""),
    data: (f = msg.getData()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.OutboundMessage}
 */
proto.api.OutboundMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.OutboundMessage;
  return proto.api.OutboundMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.OutboundMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.OutboundMessage}
 */
proto.api.OutboundMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannel(value);
      break;
    case 2:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.OutboundMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.OutboundMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.OutboundMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.OutboundMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChannel();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
};


/**
 * optional string channel = 1;
 * @return {string}
 */
proto.api.OutboundMessage.prototype.getChannel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.api.OutboundMessage.prototype.setChannel = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Struct data = 2;
 * @return {?proto.google.protobuf.Struct}
 */
proto.api.OutboundMessage.prototype.getData = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 2));
};


/** @param {?proto.google.protobuf.Struct|undefined} value */
proto.api.OutboundMessage.prototype.setData = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.api.OutboundMessage.prototype.clearData = function() {
  this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.OutboundMessage.prototype.hasData = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.Message = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.Message, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.Message.displayName = 'proto.api.Message';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.Message.prototype.toObject = function(opt_includeInstance) {
  return proto.api.Message.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.Message} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Message.toObject = function(includeInstance, msg) {
  var f, obj = {
    channel: jspb.Message.getFieldWithDefault(msg, 1, ""),
    data: (f = msg.getData()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f),
    sender: (f = msg.getSender()) && proto.api.Path.toObject(includeInstance, f),
    timestamp: (f = msg.getTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.Message}
 */
proto.api.Message.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.Message;
  return proto.api.Message.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.Message} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.Message}
 */
proto.api.Message.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannel(value);
      break;
    case 2:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 3:
      var value = new proto.api.Path;
      reader.readMessage(value,proto.api.Path.deserializeBinaryFromReader);
      msg.setSender(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.Message.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.Message.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.Message} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Message.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChannel();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
  f = message.getSender();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.api.Path.serializeBinaryToWriter
    );
  }
  f = message.getTimestamp();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string channel = 1;
 * @return {string}
 */
proto.api.Message.prototype.getChannel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.api.Message.prototype.setChannel = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Struct data = 2;
 * @return {?proto.google.protobuf.Struct}
 */
proto.api.Message.prototype.getData = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 2));
};


/** @param {?proto.google.protobuf.Struct|undefined} value */
proto.api.Message.prototype.setData = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.api.Message.prototype.clearData = function() {
  this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Message.prototype.hasData = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Path sender = 3;
 * @return {?proto.api.Path}
 */
proto.api.Message.prototype.getSender = function() {
  return /** @type{?proto.api.Path} */ (
    jspb.Message.getWrapperField(this, proto.api.Path, 3));
};


/** @param {?proto.api.Path|undefined} value */
proto.api.Message.prototype.setSender = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.api.Message.prototype.clearSender = function() {
  this.setSender(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Message.prototype.hasSender = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional google.protobuf.Timestamp timestamp = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.api.Message.prototype.getTimestamp = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.api.Message.prototype.setTimestamp = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.api.Message.prototype.clearTimestamp = function() {
  this.setTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Message.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.Schema = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.Schema.repeatedFields_, null);
};
goog.inherits(proto.api.Schema, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.Schema.displayName = 'proto.api.Schema';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.Schema.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.Schema.prototype.toObject = function(opt_includeInstance) {
  return proto.api.Schema.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.Schema} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Schema.toObject = function(includeInstance, msg) {
  var f, obj = {
    connectionTypesList: jspb.Message.getRepeatedField(msg, 1),
    docTypesList: jspb.Message.getRepeatedField(msg, 2)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.Schema}
 */
proto.api.Schema.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.Schema;
  return proto.api.Schema.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.Schema} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.Schema}
 */
proto.api.Schema.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addConnectionTypes(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addDocTypes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.Schema.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.Schema.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.Schema} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Schema.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConnectionTypesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getDocTypesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * repeated string connection_types = 1;
 * @return {!Array<string>}
 */
proto.api.Schema.prototype.getConnectionTypesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array<string>} value */
proto.api.Schema.prototype.setConnectionTypesList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.api.Schema.prototype.addConnectionTypes = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


proto.api.Schema.prototype.clearConnectionTypesList = function() {
  this.setConnectionTypesList([]);
};


/**
 * repeated string doc_types = 2;
 * @return {!Array<string>}
 */
proto.api.Schema.prototype.getDocTypesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/** @param {!Array<string>} value */
proto.api.Schema.prototype.setDocTypesList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.api.Schema.prototype.addDocTypes = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


proto.api.Schema.prototype.clearDocTypesList = function() {
  this.setDocTypesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.DocChange = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.DocChange, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.DocChange.displayName = 'proto.api.DocChange';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.DocChange.prototype.toObject = function(opt_includeInstance) {
  return proto.api.DocChange.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.DocChange} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.DocChange.toObject = function(includeInstance, msg) {
  var f, obj = {
    before: (f = msg.getBefore()) && proto.api.Doc.toObject(includeInstance, f),
    after: (f = msg.getAfter()) && proto.api.Doc.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.DocChange}
 */
proto.api.DocChange.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.DocChange;
  return proto.api.DocChange.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.DocChange} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.DocChange}
 */
proto.api.DocChange.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 4:
      var value = new proto.api.Doc;
      reader.readMessage(value,proto.api.Doc.deserializeBinaryFromReader);
      msg.setBefore(value);
      break;
    case 5:
      var value = new proto.api.Doc;
      reader.readMessage(value,proto.api.Doc.deserializeBinaryFromReader);
      msg.setAfter(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.DocChange.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.DocChange.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.DocChange} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.DocChange.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBefore();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.api.Doc.serializeBinaryToWriter
    );
  }
  f = message.getAfter();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.api.Doc.serializeBinaryToWriter
    );
  }
};


/**
 * optional Doc before = 4;
 * @return {?proto.api.Doc}
 */
proto.api.DocChange.prototype.getBefore = function() {
  return /** @type{?proto.api.Doc} */ (
    jspb.Message.getWrapperField(this, proto.api.Doc, 4));
};


/** @param {?proto.api.Doc|undefined} value */
proto.api.DocChange.prototype.setBefore = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.api.DocChange.prototype.clearBefore = function() {
  this.setBefore(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.DocChange.prototype.hasBefore = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Doc after = 5;
 * @return {?proto.api.Doc}
 */
proto.api.DocChange.prototype.getAfter = function() {
  return /** @type{?proto.api.Doc} */ (
    jspb.Message.getWrapperField(this, proto.api.Doc, 5));
};


/** @param {?proto.api.Doc|undefined} value */
proto.api.DocChange.prototype.setAfter = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.api.DocChange.prototype.clearAfter = function() {
  this.setAfter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.DocChange.prototype.hasAfter = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.ConnectionChange = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.ConnectionChange, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.ConnectionChange.displayName = 'proto.api.ConnectionChange';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.ConnectionChange.prototype.toObject = function(opt_includeInstance) {
  return proto.api.ConnectionChange.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.ConnectionChange} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.ConnectionChange.toObject = function(includeInstance, msg) {
  var f, obj = {
    before: (f = msg.getBefore()) && proto.api.Connection.toObject(includeInstance, f),
    after: (f = msg.getAfter()) && proto.api.Connection.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.ConnectionChange}
 */
proto.api.ConnectionChange.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.ConnectionChange;
  return proto.api.ConnectionChange.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.ConnectionChange} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.ConnectionChange}
 */
proto.api.ConnectionChange.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 4:
      var value = new proto.api.Connection;
      reader.readMessage(value,proto.api.Connection.deserializeBinaryFromReader);
      msg.setBefore(value);
      break;
    case 5:
      var value = new proto.api.Connection;
      reader.readMessage(value,proto.api.Connection.deserializeBinaryFromReader);
      msg.setAfter(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.ConnectionChange.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.ConnectionChange.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.ConnectionChange} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.ConnectionChange.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBefore();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.api.Connection.serializeBinaryToWriter
    );
  }
  f = message.getAfter();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.api.Connection.serializeBinaryToWriter
    );
  }
};


/**
 * optional Connection before = 4;
 * @return {?proto.api.Connection}
 */
proto.api.ConnectionChange.prototype.getBefore = function() {
  return /** @type{?proto.api.Connection} */ (
    jspb.Message.getWrapperField(this, proto.api.Connection, 4));
};


/** @param {?proto.api.Connection|undefined} value */
proto.api.ConnectionChange.prototype.setBefore = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.api.ConnectionChange.prototype.clearBefore = function() {
  this.setBefore(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.ConnectionChange.prototype.hasBefore = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Connection after = 5;
 * @return {?proto.api.Connection}
 */
proto.api.ConnectionChange.prototype.getAfter = function() {
  return /** @type{?proto.api.Connection} */ (
    jspb.Message.getWrapperField(this, proto.api.Connection, 5));
};


/** @param {?proto.api.Connection|undefined} value */
proto.api.ConnectionChange.prototype.setAfter = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.api.ConnectionChange.prototype.clearAfter = function() {
  this.setAfter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.ConnectionChange.prototype.hasAfter = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.Change = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.Change.repeatedFields_, null);
};
goog.inherits(proto.api.Change, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.Change.displayName = 'proto.api.Change';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.Change.repeatedFields_ = [4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.Change.prototype.toObject = function(opt_includeInstance) {
  return proto.api.Change.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.Change} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Change.toObject = function(includeInstance, msg) {
  var f, obj = {
    method: jspb.Message.getFieldWithDefault(msg, 1, ""),
    identity: (f = msg.getIdentity()) && proto.api.Doc.toObject(includeInstance, f),
    timestamp: (f = msg.getTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    connectionChangesList: jspb.Message.toObjectList(msg.getConnectionChangesList(),
    proto.api.ConnectionChange.toObject, includeInstance),
    docChangesList: jspb.Message.toObjectList(msg.getDocChangesList(),
    proto.api.DocChange.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.Change}
 */
proto.api.Change.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.Change;
  return proto.api.Change.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.Change} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.Change}
 */
proto.api.Change.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMethod(value);
      break;
    case 2:
      var value = new proto.api.Doc;
      reader.readMessage(value,proto.api.Doc.deserializeBinaryFromReader);
      msg.setIdentity(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimestamp(value);
      break;
    case 4:
      var value = new proto.api.ConnectionChange;
      reader.readMessage(value,proto.api.ConnectionChange.deserializeBinaryFromReader);
      msg.addConnectionChanges(value);
      break;
    case 5:
      var value = new proto.api.DocChange;
      reader.readMessage(value,proto.api.DocChange.deserializeBinaryFromReader);
      msg.addDocChanges(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.Change.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.Change.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.Change} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Change.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMethod();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIdentity();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.api.Doc.serializeBinaryToWriter
    );
  }
  f = message.getTimestamp();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getConnectionChangesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.api.ConnectionChange.serializeBinaryToWriter
    );
  }
  f = message.getDocChangesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.api.DocChange.serializeBinaryToWriter
    );
  }
};


/**
 * optional string method = 1;
 * @return {string}
 */
proto.api.Change.prototype.getMethod = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.api.Change.prototype.setMethod = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Doc identity = 2;
 * @return {?proto.api.Doc}
 */
proto.api.Change.prototype.getIdentity = function() {
  return /** @type{?proto.api.Doc} */ (
    jspb.Message.getWrapperField(this, proto.api.Doc, 2));
};


/** @param {?proto.api.Doc|undefined} value */
proto.api.Change.prototype.setIdentity = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.api.Change.prototype.clearIdentity = function() {
  this.setIdentity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Change.prototype.hasIdentity = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Timestamp timestamp = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.api.Change.prototype.getTimestamp = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.api.Change.prototype.setTimestamp = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.api.Change.prototype.clearTimestamp = function() {
  this.setTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Change.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated ConnectionChange connection_changes = 4;
 * @return {!Array<!proto.api.ConnectionChange>}
 */
proto.api.Change.prototype.getConnectionChangesList = function() {
  return /** @type{!Array<!proto.api.ConnectionChange>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.ConnectionChange, 4));
};


/** @param {!Array<!proto.api.ConnectionChange>} value */
proto.api.Change.prototype.setConnectionChangesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.api.ConnectionChange=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.ConnectionChange}
 */
proto.api.Change.prototype.addConnectionChanges = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.api.ConnectionChange, opt_index);
};


proto.api.Change.prototype.clearConnectionChangesList = function() {
  this.setConnectionChangesList([]);
};


/**
 * repeated DocChange doc_changes = 5;
 * @return {!Array<!proto.api.DocChange>}
 */
proto.api.Change.prototype.getDocChangesList = function() {
  return /** @type{!Array<!proto.api.DocChange>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.DocChange, 5));
};


/** @param {!Array<!proto.api.DocChange>} value */
proto.api.Change.prototype.setDocChangesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.api.DocChange=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.DocChange}
 */
proto.api.Change.prototype.addDocChanges = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.api.DocChange, opt_index);
};


proto.api.Change.prototype.clearDocChangesList = function() {
  this.setDocChangesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.ExpressionFilter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.ExpressionFilter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.ExpressionFilter.displayName = 'proto.api.ExpressionFilter';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.ExpressionFilter.prototype.toObject = function(opt_includeInstance) {
  return proto.api.ExpressionFilter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.ExpressionFilter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.ExpressionFilter.toObject = function(includeInstance, msg) {
  var f, obj = {
    expression: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.ExpressionFilter}
 */
proto.api.ExpressionFilter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.ExpressionFilter;
  return proto.api.ExpressionFilter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.ExpressionFilter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.ExpressionFilter}
 */
proto.api.ExpressionFilter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setExpression(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.ExpressionFilter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.ExpressionFilter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.ExpressionFilter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.ExpressionFilter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExpression();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string expression = 1;
 * @return {string}
 */
proto.api.ExpressionFilter.prototype.getExpression = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.api.ExpressionFilter.prototype.setExpression = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.Request = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.Request, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.Request.displayName = 'proto.api.Request';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.Request.prototype.toObject = function(opt_includeInstance) {
  return proto.api.Request.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.Request} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Request.toObject = function(includeInstance, msg) {
  var f, obj = {
    method: jspb.Message.getFieldWithDefault(msg, 1, ""),
    identity: (f = msg.getIdentity()) && proto.api.Doc.toObject(includeInstance, f),
    timestamp: (f = msg.getTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    request: (f = msg.getRequest()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.Request}
 */
proto.api.Request.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.Request;
  return proto.api.Request.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.Request} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.Request}
 */
proto.api.Request.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMethod(value);
      break;
    case 2:
      var value = new proto.api.Doc;
      reader.readMessage(value,proto.api.Doc.deserializeBinaryFromReader);
      msg.setIdentity(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimestamp(value);
      break;
    case 4:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.Request.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.Request.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.Request} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Request.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMethod();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIdentity();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.api.Doc.serializeBinaryToWriter
    );
  }
  f = message.getTimestamp();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
};


/**
 * optional string method = 1;
 * @return {string}
 */
proto.api.Request.prototype.getMethod = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.api.Request.prototype.setMethod = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Doc identity = 2;
 * @return {?proto.api.Doc}
 */
proto.api.Request.prototype.getIdentity = function() {
  return /** @type{?proto.api.Doc} */ (
    jspb.Message.getWrapperField(this, proto.api.Doc, 2));
};


/** @param {?proto.api.Doc|undefined} value */
proto.api.Request.prototype.setIdentity = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.api.Request.prototype.clearIdentity = function() {
  this.setIdentity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Request.prototype.hasIdentity = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Timestamp timestamp = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.api.Request.prototype.getTimestamp = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.api.Request.prototype.setTimestamp = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.api.Request.prototype.clearTimestamp = function() {
  this.setTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Request.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional google.protobuf.Struct request = 4;
 * @return {?proto.google.protobuf.Struct}
 */
proto.api.Request.prototype.getRequest = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 4));
};


/** @param {?proto.google.protobuf.Struct|undefined} value */
proto.api.Request.prototype.setRequest = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.api.Request.prototype.clearRequest = function() {
  this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Request.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 4) != null;
};


goog.object.extend(exports, proto.api);
