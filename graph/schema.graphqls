# GraphQL schema example
#
# https://gqlgen.com/getting-started/
scalar Map
scalar Any
scalar Time

type Counter {
  count: Int!
}

interface Object {
  id: String!
  type: String!
  attributes: Map
  createdAt: Time!
  updatedAt: Time
}

type Node implements Object {
  id: String!
  type: String!
  attributes: Map
  edges: [Edge!]
  createdAt: Time!
  updatedAt: Time
}

type Edge implements Object {
  id: String!
  type: String!
  attributes: Map
  from: Node!
  to: Node!
  mutual: Boolean
  createdAt: Time!
  updatedAt: Time
}

type Export {
  nodes: [Node]
  edges: [Edge]
}

input Expression {
  key: String!
  operator: String!
  value: Any!
}

input NodeFilter {
  type: String!
  expressions: [Expression!]
  limit: Int!
}

input EdgeFilter {
  type: String!
  expressions: [Expression!]
  limit: Int!
}

input ForeignKey {
  id: String!
  type: String!
}

input EdgeConstructor {
  type: String!
  attributes: Map
  from: ForeignKey!
  to: ForeignKey!
  mutual: Boolean
}

input NodeConstructor {
  type: String!
  attributes: Map
}

input Patch {
  type: String!
  id: String!
  patch: Map!
}

type Query {
  node(input: ForeignKey!): Node
  nodes(input: NodeFilter!): [Node!]!
  edge(input: ForeignKey!): Edge
  edges(input: EdgeFilter!): [Edge!]!
}

type Mutation {
  createNode(input: NodeConstructor!): Node!
  patchNode(input: Patch): Node!
  delNode(input: ForeignKey!): Counter

  createEdge(input: EdgeConstructor!): Edge!
  patchEdge(input: Patch!): Edge!
  delEdge(input: ForeignKey!): Counter
}
