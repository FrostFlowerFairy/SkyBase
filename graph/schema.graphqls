# GraphQL schema example
#
# https://gqlgen.com/getting-started/
scalar Map
scalar Any

type Node {
  id: ID!
  type: String!
  attributes: Map!
  edges(first: Int, after: ID): EdgeConnection!
}

type Edge {
  node: Node!
  from: Node!
  to: Node!
}

input Filter {
  key: String!
  operator: String!
  value: Any!
}

input QueryNodes {
  type: String!
  filters: [Filter!]
  limit: Int!
}

input QueryEdges {
  type: String!
  filters: [Filter!]
  limit: Int!
}

type Query {
  nodes(input: QueryNodes!): [Node!]!
  edges(input: QueryEdges!): [Edge!]!
}

input NodeInput {
  id: ID
  type: String!
  attributes: Map
}

input ForeignKey {
  id: ID!
  type: String!
}

input EdgeInput {
  node: NodeInput
  from: ForeignKey!
  to: ForeignKey!
}

type Mutation {
  createNode(input: NodeInput!): Node!
  createEdge(input: EdgeInput!): Edge!
}

type EdgeConnection {
  # A cursor used for pagination
  cursor: ID!
  # The total number of friends
  totalCount: Int!
  edge: [Edge!]
  # Information for paginating this connection
  pageInfo: PageInfo!
}

# Information for paginating this connection
type PageInfo {
  startCursor: ID!
  endCursor: ID!
  hasNextPage: Boolean!
}